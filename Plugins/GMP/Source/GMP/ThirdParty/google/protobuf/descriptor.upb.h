/* This file was generated by upb_generator from the input file:
 *
 *     google/protobuf/descriptor.proto
 *
 * Do not edit -- your changes will be discarded when the file is
 * regenerated. */

#ifndef GOOGLE_PROTOBUF_DESCRIPTOR_PROTO_UPB_H_
#define GOOGLE_PROTOBUF_DESCRIPTOR_PROTO_UPB_H_

#include "upb/generated_code_support.h"

// Must be last.
#include "upb/port/def.inc"

#ifdef __cplusplus
extern "C" {
#endif

extern const upb_MiniTable* UPB_DESC(_FileDescriptorSet_msg_init)();
extern const upb_MiniTable* UPB_DESC(_FileDescriptorProto_msg_init)();
extern const upb_MiniTable* UPB_DESC(_DescriptorProto_msg_init)();
extern const upb_MiniTable* UPB_DESC(_DescriptorProto__ExtensionRange_msg_init)();
extern const upb_MiniTable* UPB_DESC(_DescriptorProto__ReservedRange_msg_init)();
extern const upb_MiniTable* UPB_DESC(_ExtensionRangeOptions_msg_init)();
extern const upb_MiniTable* UPB_DESC(_ExtensionRangeOptions__Declaration_msg_init)();
extern const upb_MiniTable* UPB_DESC(_FieldDescriptorProto_msg_init)();
extern const upb_MiniTable* UPB_DESC(_OneofDescriptorProto_msg_init)();
extern const upb_MiniTable* UPB_DESC(_EnumDescriptorProto_msg_init)();
extern const upb_MiniTable* UPB_DESC(_EnumDescriptorProto__EnumReservedRange_msg_init)();
extern const upb_MiniTable* UPB_DESC(_EnumValueDescriptorProto_msg_init)();
extern const upb_MiniTable* UPB_DESC(_ServiceDescriptorProto_msg_init)();
extern const upb_MiniTable* UPB_DESC(_MethodDescriptorProto_msg_init)();
extern const upb_MiniTable* UPB_DESC(_FileOptions_msg_init)();
extern const upb_MiniTable* UPB_DESC(_MessageOptions_msg_init)();
extern const upb_MiniTable* UPB_DESC(_FieldOptions_msg_init)();
extern const upb_MiniTable* UPB_DESC(_FieldOptions__EditionDefault_msg_init)();
extern const upb_MiniTable* UPB_DESC(_OneofOptions_msg_init)();
extern const upb_MiniTable* UPB_DESC(_EnumOptions_msg_init)();
extern const upb_MiniTable* UPB_DESC(_EnumValueOptions_msg_init)();
extern const upb_MiniTable* UPB_DESC(_ServiceOptions_msg_init)();
extern const upb_MiniTable* UPB_DESC(_MethodOptions_msg_init)();
extern const upb_MiniTable* UPB_DESC(_UninterpretedOption_msg_init)();
extern const upb_MiniTable* UPB_DESC(_UninterpretedOption__NamePart_msg_init)();
extern const upb_MiniTable* UPB_DESC(_FeatureSet_msg_init)();
extern const upb_MiniTable* UPB_DESC(_FeatureSetDefaults_msg_init)();
extern const upb_MiniTable* UPB_DESC(_FeatureSetDefaults__FeatureSetEditionDefault_msg_init)();
extern const upb_MiniTable* UPB_DESC(_SourceCodeInfo_msg_init)();
extern const upb_MiniTable* UPB_DESC(_SourceCodeInfo__Location_msg_init)();
extern const upb_MiniTable* UPB_DESC(_GeneratedCodeInfo_msg_init)();
extern const upb_MiniTable* UPB_DESC(_GeneratedCodeInfo__Annotation_msg_init)();
extern const upb_MiniTableEnum* UPB_DESC(Edition_enum_init)();
extern const upb_MiniTableEnum* UPB_DESC(ExtensionRangeOptions_VerificationState_enum_init)();
extern const upb_MiniTableEnum* UPB_DESC(FeatureSet_EnumType_enum_init)();
extern const upb_MiniTableEnum* UPB_DESC(FeatureSet_FieldPresence_enum_init)();
extern const upb_MiniTableEnum* UPB_DESC(FeatureSet_JsonFormat_enum_init)();
extern const upb_MiniTableEnum* UPB_DESC(FeatureSet_MessageEncoding_enum_init)();
extern const upb_MiniTableEnum* UPB_DESC(FeatureSet_RepeatedFieldEncoding_enum_init)();
extern const upb_MiniTableEnum* UPB_DESC(FeatureSet_Utf8Validation_enum_init)();
extern const upb_MiniTableEnum* UPB_DESC(FieldDescriptorProto_Label_enum_init)();
extern const upb_MiniTableEnum* UPB_DESC(FieldDescriptorProto_Type_enum_init)();
extern const upb_MiniTableEnum* UPB_DESC(FieldOptions_CType_enum_init)();
extern const upb_MiniTableEnum* UPB_DESC(FieldOptions_JSType_enum_init)();
extern const upb_MiniTableEnum* UPB_DESC(FieldOptions_OptionRetention_enum_init)();
extern const upb_MiniTableEnum* UPB_DESC(FieldOptions_OptionTargetType_enum_init)();
extern const upb_MiniTableEnum* UPB_DESC(FileOptions_OptimizeMode_enum_init)();
extern const upb_MiniTableEnum* UPB_DESC(GeneratedCodeInfo_Annotation_Semantic_enum_init)();
extern const upb_MiniTableEnum* UPB_DESC(MethodOptions_IdempotencyLevel_enum_init)();

typedef struct UPB_DESC(FileDescriptorSet) UPB_DESC(FileDescriptorSet);
typedef struct UPB_DESC(FileDescriptorProto) UPB_DESC(FileDescriptorProto);
typedef struct UPB_DESC(DescriptorProto) UPB_DESC(DescriptorProto);
typedef struct UPB_DESC(DescriptorProto_ExtensionRange) UPB_DESC(DescriptorProto_ExtensionRange);
typedef struct UPB_DESC(DescriptorProto_ReservedRange) UPB_DESC(DescriptorProto_ReservedRange);
typedef struct UPB_DESC(ExtensionRangeOptions) UPB_DESC(ExtensionRangeOptions);
typedef struct UPB_DESC(ExtensionRangeOptions_Declaration) UPB_DESC(ExtensionRangeOptions_Declaration);
typedef struct UPB_DESC(FieldDescriptorProto) UPB_DESC(FieldDescriptorProto);
typedef struct UPB_DESC(OneofDescriptorProto) UPB_DESC(OneofDescriptorProto);
typedef struct UPB_DESC(EnumDescriptorProto) UPB_DESC(EnumDescriptorProto);
typedef struct UPB_DESC(EnumDescriptorProto_EnumReservedRange) UPB_DESC(EnumDescriptorProto_EnumReservedRange);
typedef struct UPB_DESC(EnumValueDescriptorProto) UPB_DESC(EnumValueDescriptorProto);
typedef struct UPB_DESC(ServiceDescriptorProto) UPB_DESC(ServiceDescriptorProto);
typedef struct UPB_DESC(MethodDescriptorProto) UPB_DESC(MethodDescriptorProto);
typedef struct UPB_DESC(FileOptions) UPB_DESC(FileOptions);
typedef struct UPB_DESC(MessageOptions) UPB_DESC(MessageOptions);
typedef struct UPB_DESC(FieldOptions) UPB_DESC(FieldOptions);
typedef struct UPB_DESC(FieldOptions_EditionDefault) UPB_DESC(FieldOptions_EditionDefault);
typedef struct UPB_DESC(OneofOptions) UPB_DESC(OneofOptions);
typedef struct UPB_DESC(EnumOptions) UPB_DESC(EnumOptions);
typedef struct UPB_DESC(EnumValueOptions) UPB_DESC(EnumValueOptions);
typedef struct UPB_DESC(ServiceOptions) UPB_DESC(ServiceOptions);
typedef struct UPB_DESC(MethodOptions) UPB_DESC(MethodOptions);
typedef struct UPB_DESC(UninterpretedOption) UPB_DESC(UninterpretedOption);
typedef struct UPB_DESC(UninterpretedOption_NamePart) UPB_DESC(UninterpretedOption_NamePart);
typedef struct UPB_DESC(FeatureSet) UPB_DESC(FeatureSet);
typedef struct UPB_DESC(FeatureSetDefaults) UPB_DESC(FeatureSetDefaults);
typedef struct UPB_DESC(FeatureSetDefaults_FeatureSetEditionDefault) UPB_DESC(FeatureSetDefaults_FeatureSetEditionDefault);
typedef struct UPB_DESC(SourceCodeInfo) UPB_DESC(SourceCodeInfo);
typedef struct UPB_DESC(SourceCodeInfo_Location) UPB_DESC(SourceCodeInfo_Location);
typedef struct UPB_DESC(GeneratedCodeInfo) UPB_DESC(GeneratedCodeInfo);
typedef struct UPB_DESC(GeneratedCodeInfo_Annotation) UPB_DESC(GeneratedCodeInfo_Annotation);

typedef enum {
  UPB_DESC(EDITION_UNKNOWN) = 0,
  UPB_DESC(EDITION_1_TEST_ONLY) = 1,
  UPB_DESC(EDITION_2_TEST_ONLY) = 2,
  UPB_DESC(EDITION_PROTO2) = 998,
  UPB_DESC(EDITION_PROTO3) = 999,
  UPB_DESC(EDITION_2023) = 1000,
  UPB_DESC(EDITION_99997_TEST_ONLY) = 99997,
  UPB_DESC(EDITION_99998_TEST_ONLY) = 99998,
  UPB_DESC(EDITION_99999_TEST_ONLY) = 99999
} UPB_DESC(Edition);

typedef enum {
  UPB_DESC(ExtensionRangeOptions_DECLARATION) = 0,
  UPB_DESC(ExtensionRangeOptions_UNVERIFIED) = 1
} UPB_DESC(ExtensionRangeOptions_VerificationState);

typedef enum {
  UPB_DESC(FeatureSet_ENUM_TYPE_UNKNOWN) = 0,
  UPB_DESC(FeatureSet_OPEN) = 1,
  UPB_DESC(FeatureSet_CLOSED) = 2
} UPB_DESC(FeatureSet_EnumType);

typedef enum {
  UPB_DESC(FeatureSet_FIELD_PRESENCE_UNKNOWN) = 0,
  UPB_DESC(FeatureSet_EXPLICIT) = 1,
  UPB_DESC(FeatureSet_IMPLICIT) = 2,
  UPB_DESC(FeatureSet_LEGACY_REQUIRED) = 3
} UPB_DESC(FeatureSet_FieldPresence);

typedef enum {
  UPB_DESC(FeatureSet_JSON_FORMAT_UNKNOWN) = 0,
  UPB_DESC(FeatureSet_ALLOW) = 1,
  UPB_DESC(FeatureSet_LEGACY_BEST_EFFORT) = 2
} UPB_DESC(FeatureSet_JsonFormat);

typedef enum {
  UPB_DESC(FeatureSet_MESSAGE_ENCODING_UNKNOWN) = 0,
  UPB_DESC(FeatureSet_LENGTH_PREFIXED) = 1,
  UPB_DESC(FeatureSet_DELIMITED) = 2
} UPB_DESC(FeatureSet_MessageEncoding);

typedef enum {
  UPB_DESC(FeatureSet_REPEATED_FIELD_ENCODING_UNKNOWN) = 0,
  UPB_DESC(FeatureSet_PACKED) = 1,
  UPB_DESC(FeatureSet_EXPANDED) = 2
} UPB_DESC(FeatureSet_RepeatedFieldEncoding);

typedef enum {
  UPB_DESC(FeatureSet_UTF8_VALIDATION_UNKNOWN) = 0,
  UPB_DESC(FeatureSet_NONE) = 1,
  UPB_DESC(FeatureSet_VERIFY) = 2
} UPB_DESC(FeatureSet_Utf8Validation);

typedef enum {
  UPB_DESC(FieldDescriptorProto_LABEL_OPTIONAL) = 1,
  UPB_DESC(FieldDescriptorProto_LABEL_REQUIRED) = 2,
  UPB_DESC(FieldDescriptorProto_LABEL_REPEATED) = 3
} UPB_DESC(FieldDescriptorProto_Label);

typedef enum {
  UPB_DESC(FieldDescriptorProto_TYPE_DOUBLE) = 1,
  UPB_DESC(FieldDescriptorProto_TYPE_FLOAT) = 2,
  UPB_DESC(FieldDescriptorProto_TYPE_INT64) = 3,
  UPB_DESC(FieldDescriptorProto_TYPE_UINT64) = 4,
  UPB_DESC(FieldDescriptorProto_TYPE_INT32) = 5,
  UPB_DESC(FieldDescriptorProto_TYPE_FIXED64) = 6,
  UPB_DESC(FieldDescriptorProto_TYPE_FIXED32) = 7,
  UPB_DESC(FieldDescriptorProto_TYPE_BOOL) = 8,
  UPB_DESC(FieldDescriptorProto_TYPE_STRING) = 9,
  UPB_DESC(FieldDescriptorProto_TYPE_GROUP) = 10,
  UPB_DESC(FieldDescriptorProto_TYPE_MESSAGE) = 11,
  UPB_DESC(FieldDescriptorProto_TYPE_BYTES) = 12,
  UPB_DESC(FieldDescriptorProto_TYPE_UINT32) = 13,
  UPB_DESC(FieldDescriptorProto_TYPE_ENUM) = 14,
  UPB_DESC(FieldDescriptorProto_TYPE_SFIXED32) = 15,
  UPB_DESC(FieldDescriptorProto_TYPE_SFIXED64) = 16,
  UPB_DESC(FieldDescriptorProto_TYPE_SINT32) = 17,
  UPB_DESC(FieldDescriptorProto_TYPE_SINT64) = 18
} UPB_DESC(FieldDescriptorProto_Type);

typedef enum {
  UPB_DESC(FieldOptions_STRING) = 0,
  UPB_DESC(FieldOptions_CORD) = 1,
  UPB_DESC(FieldOptions_STRING_PIECE) = 2
} UPB_DESC(FieldOptions_CType);

typedef enum {
  UPB_DESC(FieldOptions_JS_NORMAL) = 0,
  UPB_DESC(FieldOptions_JS_STRING) = 1,
  UPB_DESC(FieldOptions_JS_NUMBER) = 2
} UPB_DESC(FieldOptions_JSType);

typedef enum {
  UPB_DESC(FieldOptions_RETENTION_UNKNOWN) = 0,
  UPB_DESC(FieldOptions_RETENTION_RUNTIME) = 1,
  UPB_DESC(FieldOptions_RETENTION_SOURCE) = 2
} UPB_DESC(FieldOptions_OptionRetention);

typedef enum {
  UPB_DESC(FieldOptions_TARGET_TYPE_UNKNOWN) = 0,
  UPB_DESC(FieldOptions_TARGET_TYPE_FILE) = 1,
  UPB_DESC(FieldOptions_TARGET_TYPE_EXTENSION_RANGE) = 2,
  UPB_DESC(FieldOptions_TARGET_TYPE_MESSAGE) = 3,
  UPB_DESC(FieldOptions_TARGET_TYPE_FIELD) = 4,
  UPB_DESC(FieldOptions_TARGET_TYPE_ONEOF) = 5,
  UPB_DESC(FieldOptions_TARGET_TYPE_ENUM) = 6,
  UPB_DESC(FieldOptions_TARGET_TYPE_ENUM_ENTRY) = 7,
  UPB_DESC(FieldOptions_TARGET_TYPE_SERVICE) = 8,
  UPB_DESC(FieldOptions_TARGET_TYPE_METHOD) = 9
} UPB_DESC(FieldOptions_OptionTargetType);

typedef enum {
  UPB_DESC(FileOptions_SPEED) = 1,
  UPB_DESC(FileOptions_CODE_SIZE) = 2,
  UPB_DESC(FileOptions_LITE_RUNTIME) = 3
} UPB_DESC(FileOptions_OptimizeMode);

typedef enum {
  UPB_DESC(GeneratedCodeInfo_Annotation_NONE) = 0,
  UPB_DESC(GeneratedCodeInfo_Annotation_SET) = 1,
  UPB_DESC(GeneratedCodeInfo_Annotation_ALIAS) = 2
} UPB_DESC(GeneratedCodeInfo_Annotation_Semantic);

typedef enum {
  UPB_DESC(MethodOptions_IDEMPOTENCY_UNKNOWN) = 0,
  UPB_DESC(MethodOptions_NO_SIDE_EFFECTS) = 1,
  UPB_DESC(MethodOptions_IDEMPOTENT) = 2
} UPB_DESC(MethodOptions_IdempotencyLevel);



/* google.protobuf.FileDescriptorSet */

UPB_INLINE UPB_DESC(FileDescriptorSet)* UPB_DESC(FileDescriptorSet_new)(upb_Arena* arena) {
  return (UPB_DESC(FileDescriptorSet)*)_upb_Message_New(UPB_DESC(_FileDescriptorSet_msg_init)(), arena);
}
UPB_INLINE UPB_DESC(FileDescriptorSet)* UPB_DESC(FileDescriptorSet_parse)(const char* buf, size_t size, upb_Arena* arena) {
  UPB_DESC(FileDescriptorSet)* ret = UPB_DESC(FileDescriptorSet_new)(arena);
  if (!ret) return NULL;
  if (upb_Decode(buf, size, ret, UPB_DESC(_FileDescriptorSet_msg_init)(), NULL, 0, arena) != kUpb_DecodeStatus_Ok) {
    return NULL;
  }
  return ret;
}
UPB_INLINE UPB_DESC(FileDescriptorSet)* UPB_DESC(FileDescriptorSet_parse_ex)(const char* buf, size_t size,
                           const upb_ExtensionRegistry* extreg,
                           int options, upb_Arena* arena) {
  UPB_DESC(FileDescriptorSet)* ret = UPB_DESC(FileDescriptorSet_new)(arena);
  if (!ret) return NULL;
  if (upb_Decode(buf, size, ret, UPB_DESC(_FileDescriptorSet_msg_init)(), extreg, options, arena) !=
      kUpb_DecodeStatus_Ok) {
    return NULL;
  }
  return ret;
}
UPB_INLINE char* UPB_DESC(FileDescriptorSet_serialize)(const UPB_DESC(FileDescriptorSet)* msg, upb_Arena* arena, size_t* len) {
  char* ptr;
  (void)upb_Encode(msg, UPB_DESC(_FileDescriptorSet_msg_init)(), 0, arena, &ptr, len);
  return ptr;
}
UPB_INLINE char* UPB_DESC(FileDescriptorSet_serialize_ex)(const UPB_DESC(FileDescriptorSet)* msg, int options,
                                 upb_Arena* arena, size_t* len) {
  char* ptr;
  (void)upb_Encode(msg, UPB_DESC(_FileDescriptorSet_msg_init)(), options, arena, &ptr, len);
  return ptr;
}
UPB_INLINE void UPB_DESC(FileDescriptorSet_clear_file)(UPB_DESC(FileDescriptorSet)* msg) {
  const upb_MiniTableField field = *upb_MiniTable_FindFieldByNumber(UPB_DESC(_FileDescriptorSet_msg_init)(), 1);
  _upb_Message_ClearNonExtensionField(msg, &field);
}
UPB_INLINE const UPB_DESC(FileDescriptorProto)* const* UPB_DESC(FileDescriptorSet_file)(const UPB_DESC(FileDescriptorSet)* msg, size_t* size) {
  const upb_MiniTableField field = *upb_MiniTable_FindFieldByNumber(UPB_DESC(_FileDescriptorSet_msg_init)(), 1);
  const upb_Array* arr = upb_Message_GetArray(msg, &field);
  if (arr) {
    if (size) *size = arr->size;
    return (const UPB_DESC(FileDescriptorProto)* const*)_upb_array_constptr(arr);
  } else {
    if (size) *size = 0;
    return NULL;
  }
}
UPB_INLINE const upb_Array* _google_protobuf_FileDescriptorSet_file_upb_array(const UPB_DESC(FileDescriptorSet)* msg, size_t* size) {
  const upb_MiniTableField field = *upb_MiniTable_FindFieldByNumber(UPB_DESC(_FileDescriptorSet_msg_init)(), 1);
  const upb_Array* arr = upb_Message_GetArray(msg, &field);
  if (size) {
    *size = arr ? arr->size : 0;
  }
  return arr;
}
UPB_INLINE upb_Array* _google_protobuf_FileDescriptorSet_file_mutable_upb_array(const UPB_DESC(FileDescriptorSet)* msg, size_t* size, upb_Arena* arena) {
  const upb_MiniTableField field = *upb_MiniTable_FindFieldByNumber(UPB_DESC(_FileDescriptorSet_msg_init)(), 1);
  upb_Array* arr = upb_Message_GetOrCreateMutableArray(
      (upb_Message*)msg, &field, arena);
  if (size) {
    *size = arr ? arr->size : 0;
  }
  return arr;
}
UPB_INLINE bool UPB_DESC(FileDescriptorSet_has_file)(const UPB_DESC(FileDescriptorSet)* msg) {
  size_t size;
  UPB_DESC(FileDescriptorSet_file)(msg, &size);
  return size != 0;
}

UPB_INLINE UPB_DESC(FileDescriptorProto)** UPB_DESC(FileDescriptorSet_mutable_file)(UPB_DESC(FileDescriptorSet)* msg, size_t* size) {
  upb_MiniTableField field = *upb_MiniTable_FindFieldByNumber(UPB_DESC(_FileDescriptorSet_msg_init)(), 1);
  upb_Array* arr = upb_Message_GetMutableArray(msg, &field);
  if (arr) {
    if (size) *size = arr->size;
    return (UPB_DESC(FileDescriptorProto)**)_upb_array_ptr(arr);
  } else {
    if (size) *size = 0;
    return NULL;
  }
}
UPB_INLINE UPB_DESC(FileDescriptorProto)** UPB_DESC(FileDescriptorSet_resize_file)(UPB_DESC(FileDescriptorSet)* msg, size_t size, upb_Arena* arena) {
  upb_MiniTableField field = *upb_MiniTable_FindFieldByNumber(UPB_DESC(_FileDescriptorSet_msg_init)(), 1);
  return (UPB_DESC(FileDescriptorProto)**)upb_Message_ResizeArrayUninitialized(msg, &field, size, arena);
}
UPB_INLINE struct UPB_DESC(FileDescriptorProto)* UPB_DESC(FileDescriptorSet_add_file)(UPB_DESC(FileDescriptorSet)* msg, upb_Arena* arena) {
  upb_MiniTableField field = *upb_MiniTable_FindFieldByNumber(UPB_DESC(_FileDescriptorSet_msg_init)(), 1);
  upb_Array* arr = upb_Message_GetOrCreateMutableArray(msg, &field, arena);
  if (!arr || !_upb_Array_ResizeUninitialized(arr, arr->size + 1, arena)) {
    return NULL;
  }
  struct UPB_DESC(FileDescriptorProto)* sub = (struct UPB_DESC(FileDescriptorProto)*)_upb_Message_New(UPB_DESC(_FileDescriptorProto_msg_init)(), arena);
  if (!arr || !sub) return NULL;
  _upb_Array_Set(arr, arr->size - 1, &sub, sizeof(sub));
  return sub;
}

/* google.protobuf.FileDescriptorProto */

UPB_INLINE UPB_DESC(FileDescriptorProto)* UPB_DESC(FileDescriptorProto_new)(upb_Arena* arena) {
  return (UPB_DESC(FileDescriptorProto)*)_upb_Message_New(UPB_DESC(_FileDescriptorProto_msg_init)(), arena);
}
UPB_INLINE UPB_DESC(FileDescriptorProto)* UPB_DESC(FileDescriptorProto_parse)(const char* buf, size_t size, upb_Arena* arena) {
  UPB_DESC(FileDescriptorProto)* ret = UPB_DESC(FileDescriptorProto_new)(arena);
  if (!ret) return NULL;
  if (upb_Decode(buf, size, ret, UPB_DESC(_FileDescriptorProto_msg_init)(), NULL, 0, arena) != kUpb_DecodeStatus_Ok) {
    return NULL;
  }
  return ret;
}
UPB_INLINE UPB_DESC(FileDescriptorProto)* UPB_DESC(FileDescriptorProto_parse_ex)(const char* buf, size_t size,
                           const upb_ExtensionRegistry* extreg,
                           int options, upb_Arena* arena) {
  UPB_DESC(FileDescriptorProto)* ret = UPB_DESC(FileDescriptorProto_new)(arena);
  if (!ret) return NULL;
  if (upb_Decode(buf, size, ret, UPB_DESC(_FileDescriptorProto_msg_init)(), extreg, options, arena) !=
      kUpb_DecodeStatus_Ok) {
    return NULL;
  }
  return ret;
}
UPB_INLINE char* UPB_DESC(FileDescriptorProto_serialize)(const UPB_DESC(FileDescriptorProto)* msg, upb_Arena* arena, size_t* len) {
  char* ptr;
  (void)upb_Encode(msg, UPB_DESC(_FileDescriptorProto_msg_init)(), 0, arena, &ptr, len);
  return ptr;
}
UPB_INLINE char* UPB_DESC(FileDescriptorProto_serialize_ex)(const UPB_DESC(FileDescriptorProto)* msg, int options,
                                 upb_Arena* arena, size_t* len) {
  char* ptr;
  (void)upb_Encode(msg, UPB_DESC(_FileDescriptorProto_msg_init)(), options, arena, &ptr, len);
  return ptr;
}
UPB_INLINE void UPB_DESC(FileDescriptorProto_clear_name)(UPB_DESC(FileDescriptorProto)* msg) {
  const upb_MiniTableField field = *upb_MiniTable_FindFieldByNumber(UPB_DESC(_FileDescriptorProto_msg_init)(), 1);
  _upb_Message_ClearNonExtensionField(msg, &field);
}
UPB_INLINE upb_StringView UPB_DESC(FileDescriptorProto_name)(const UPB_DESC(FileDescriptorProto)* msg) {
  upb_StringView default_val = upb_StringView_FromString("");
  upb_StringView ret;
  const upb_MiniTableField field = *upb_MiniTable_FindFieldByNumber(UPB_DESC(_FileDescriptorProto_msg_init)(), 1);
  _upb_Message_GetNonExtensionField(msg, &field, &default_val, &ret);
  return ret;
}
UPB_INLINE bool UPB_DESC(FileDescriptorProto_has_name)(const UPB_DESC(FileDescriptorProto)* msg) {
  const upb_MiniTableField field = *upb_MiniTable_FindFieldByNumber(UPB_DESC(_FileDescriptorProto_msg_init)(), 1);
  return _upb_Message_HasNonExtensionField(msg, &field);
}
UPB_INLINE void UPB_DESC(FileDescriptorProto_clear_package)(UPB_DESC(FileDescriptorProto)* msg) {
  const upb_MiniTableField field = *upb_MiniTable_FindFieldByNumber(UPB_DESC(_FileDescriptorProto_msg_init)(), 2);
  _upb_Message_ClearNonExtensionField(msg, &field);
}
UPB_INLINE upb_StringView UPB_DESC(FileDescriptorProto_package)(const UPB_DESC(FileDescriptorProto)* msg) {
  upb_StringView default_val = upb_StringView_FromString("");
  upb_StringView ret;
  const upb_MiniTableField field = *upb_MiniTable_FindFieldByNumber(UPB_DESC(_FileDescriptorProto_msg_init)(), 2);
  _upb_Message_GetNonExtensionField(msg, &field, &default_val, &ret);
  return ret;
}
UPB_INLINE bool UPB_DESC(FileDescriptorProto_has_package)(const UPB_DESC(FileDescriptorProto)* msg) {
  const upb_MiniTableField field = *upb_MiniTable_FindFieldByNumber(UPB_DESC(_FileDescriptorProto_msg_init)(), 2);
  return _upb_Message_HasNonExtensionField(msg, &field);
}
UPB_INLINE void UPB_DESC(FileDescriptorProto_clear_dependency)(UPB_DESC(FileDescriptorProto)* msg) {
  const upb_MiniTableField field = *upb_MiniTable_FindFieldByNumber(UPB_DESC(_FileDescriptorProto_msg_init)(), 3);
  _upb_Message_ClearNonExtensionField(msg, &field);
}
UPB_INLINE upb_StringView const* UPB_DESC(FileDescriptorProto_dependency)(const UPB_DESC(FileDescriptorProto)* msg, size_t* size) {
  const upb_MiniTableField field = *upb_MiniTable_FindFieldByNumber(UPB_DESC(_FileDescriptorProto_msg_init)(), 3);
  const upb_Array* arr = upb_Message_GetArray(msg, &field);
  if (arr) {
    if (size) *size = arr->size;
    return (upb_StringView const*)_upb_array_constptr(arr);
  } else {
    if (size) *size = 0;
    return NULL;
  }
}
UPB_INLINE const upb_Array* _google_protobuf_FileDescriptorProto_dependency_upb_array(const UPB_DESC(FileDescriptorProto)* msg, size_t* size) {
  const upb_MiniTableField field = *upb_MiniTable_FindFieldByNumber(UPB_DESC(_FileDescriptorProto_msg_init)(), 3);
  const upb_Array* arr = upb_Message_GetArray(msg, &field);
  if (size) {
    *size = arr ? arr->size : 0;
  }
  return arr;
}
UPB_INLINE upb_Array* _google_protobuf_FileDescriptorProto_dependency_mutable_upb_array(const UPB_DESC(FileDescriptorProto)* msg, size_t* size, upb_Arena* arena) {
  const upb_MiniTableField field = *upb_MiniTable_FindFieldByNumber(UPB_DESC(_FileDescriptorProto_msg_init)(), 3);
  upb_Array* arr = upb_Message_GetOrCreateMutableArray(
      (upb_Message*)msg, &field, arena);
  if (size) {
    *size = arr ? arr->size : 0;
  }
  return arr;
}
UPB_INLINE bool UPB_DESC(FileDescriptorProto_has_dependency)(const UPB_DESC(FileDescriptorProto)* msg) {
  size_t size;
  UPB_DESC(FileDescriptorProto_dependency)(msg, &size);
  return size != 0;
}
UPB_INLINE void UPB_DESC(FileDescriptorProto_clear_message_type)(UPB_DESC(FileDescriptorProto)* msg) {
  const upb_MiniTableField field = *upb_MiniTable_FindFieldByNumber(UPB_DESC(_FileDescriptorProto_msg_init)(), 4);
  _upb_Message_ClearNonExtensionField(msg, &field);
}
UPB_INLINE const UPB_DESC(DescriptorProto)* const* UPB_DESC(FileDescriptorProto_message_type)(const UPB_DESC(FileDescriptorProto)* msg, size_t* size) {
  const upb_MiniTableField field = *upb_MiniTable_FindFieldByNumber(UPB_DESC(_FileDescriptorProto_msg_init)(), 4);
  const upb_Array* arr = upb_Message_GetArray(msg, &field);
  if (arr) {
    if (size) *size = arr->size;
    return (const UPB_DESC(DescriptorProto)* const*)_upb_array_constptr(arr);
  } else {
    if (size) *size = 0;
    return NULL;
  }
}
UPB_INLINE const upb_Array* _google_protobuf_FileDescriptorProto_message_type_upb_array(const UPB_DESC(FileDescriptorProto)* msg, size_t* size) {
  const upb_MiniTableField field = *upb_MiniTable_FindFieldByNumber(UPB_DESC(_FileDescriptorProto_msg_init)(), 4);
  const upb_Array* arr = upb_Message_GetArray(msg, &field);
  if (size) {
    *size = arr ? arr->size : 0;
  }
  return arr;
}
UPB_INLINE upb_Array* _google_protobuf_FileDescriptorProto_message_type_mutable_upb_array(const UPB_DESC(FileDescriptorProto)* msg, size_t* size, upb_Arena* arena) {
  const upb_MiniTableField field = *upb_MiniTable_FindFieldByNumber(UPB_DESC(_FileDescriptorProto_msg_init)(), 4);
  upb_Array* arr = upb_Message_GetOrCreateMutableArray(
      (upb_Message*)msg, &field, arena);
  if (size) {
    *size = arr ? arr->size : 0;
  }
  return arr;
}
UPB_INLINE bool UPB_DESC(FileDescriptorProto_has_message_type)(const UPB_DESC(FileDescriptorProto)* msg) {
  size_t size;
  UPB_DESC(FileDescriptorProto_message_type)(msg, &size);
  return size != 0;
}
UPB_INLINE void UPB_DESC(FileDescriptorProto_clear_enum_type)(UPB_DESC(FileDescriptorProto)* msg) {
  const upb_MiniTableField field = *upb_MiniTable_FindFieldByNumber(UPB_DESC(_FileDescriptorProto_msg_init)(), 5);
  _upb_Message_ClearNonExtensionField(msg, &field);
}
UPB_INLINE const UPB_DESC(EnumDescriptorProto)* const* UPB_DESC(FileDescriptorProto_enum_type)(const UPB_DESC(FileDescriptorProto)* msg, size_t* size) {
  const upb_MiniTableField field = *upb_MiniTable_FindFieldByNumber(UPB_DESC(_FileDescriptorProto_msg_init)(), 5);
  const upb_Array* arr = upb_Message_GetArray(msg, &field);
  if (arr) {
    if (size) *size = arr->size;
    return (const UPB_DESC(EnumDescriptorProto)* const*)_upb_array_constptr(arr);
  } else {
    if (size) *size = 0;
    return NULL;
  }
}
UPB_INLINE const upb_Array* _google_protobuf_FileDescriptorProto_enum_type_upb_array(const UPB_DESC(FileDescriptorProto)* msg, size_t* size) {
  const upb_MiniTableField field = *upb_MiniTable_FindFieldByNumber(UPB_DESC(_FileDescriptorProto_msg_init)(), 5);
  const upb_Array* arr = upb_Message_GetArray(msg, &field);
  if (size) {
    *size = arr ? arr->size : 0;
  }
  return arr;
}
UPB_INLINE upb_Array* _google_protobuf_FileDescriptorProto_enum_type_mutable_upb_array(const UPB_DESC(FileDescriptorProto)* msg, size_t* size, upb_Arena* arena) {
  const upb_MiniTableField field = *upb_MiniTable_FindFieldByNumber(UPB_DESC(_FileDescriptorProto_msg_init)(), 5);
  upb_Array* arr = upb_Message_GetOrCreateMutableArray(
      (upb_Message*)msg, &field, arena);
  if (size) {
    *size = arr ? arr->size : 0;
  }
  return arr;
}
UPB_INLINE bool UPB_DESC(FileDescriptorProto_has_enum_type)(const UPB_DESC(FileDescriptorProto)* msg) {
  size_t size;
  UPB_DESC(FileDescriptorProto_enum_type)(msg, &size);
  return size != 0;
}
UPB_INLINE void UPB_DESC(FileDescriptorProto_clear_service)(UPB_DESC(FileDescriptorProto)* msg) {
  const upb_MiniTableField field = *upb_MiniTable_FindFieldByNumber(UPB_DESC(_FileDescriptorProto_msg_init)(), 6);
  _upb_Message_ClearNonExtensionField(msg, &field);
}
UPB_INLINE const UPB_DESC(ServiceDescriptorProto)* const* UPB_DESC(FileDescriptorProto_service)(const UPB_DESC(FileDescriptorProto)* msg, size_t* size) {
  const upb_MiniTableField field = *upb_MiniTable_FindFieldByNumber(UPB_DESC(_FileDescriptorProto_msg_init)(), 6);
  const upb_Array* arr = upb_Message_GetArray(msg, &field);
  if (arr) {
    if (size) *size = arr->size;
    return (const UPB_DESC(ServiceDescriptorProto)* const*)_upb_array_constptr(arr);
  } else {
    if (size) *size = 0;
    return NULL;
  }
}
UPB_INLINE const upb_Array* _google_protobuf_FileDescriptorProto_service_upb_array(const UPB_DESC(FileDescriptorProto)* msg, size_t* size) {
  const upb_MiniTableField field = *upb_MiniTable_FindFieldByNumber(UPB_DESC(_FileDescriptorProto_msg_init)(), 6);
  const upb_Array* arr = upb_Message_GetArray(msg, &field);
  if (size) {
    *size = arr ? arr->size : 0;
  }
  return arr;
}
UPB_INLINE upb_Array* _google_protobuf_FileDescriptorProto_service_mutable_upb_array(const UPB_DESC(FileDescriptorProto)* msg, size_t* size, upb_Arena* arena) {
  const upb_MiniTableField field = *upb_MiniTable_FindFieldByNumber(UPB_DESC(_FileDescriptorProto_msg_init)(), 6);
  upb_Array* arr = upb_Message_GetOrCreateMutableArray(
      (upb_Message*)msg, &field, arena);
  if (size) {
    *size = arr ? arr->size : 0;
  }
  return arr;
}
UPB_INLINE bool UPB_DESC(FileDescriptorProto_has_service)(const UPB_DESC(FileDescriptorProto)* msg) {
  size_t size;
  UPB_DESC(FileDescriptorProto_service)(msg, &size);
  return size != 0;
}
UPB_INLINE void UPB_DESC(FileDescriptorProto_clear_extension)(UPB_DESC(FileDescriptorProto)* msg) {
  const upb_MiniTableField field = *upb_MiniTable_FindFieldByNumber(UPB_DESC(_FileDescriptorProto_msg_init)(), 7);
  _upb_Message_ClearNonExtensionField(msg, &field);
}
UPB_INLINE const UPB_DESC(FieldDescriptorProto)* const* UPB_DESC(FileDescriptorProto_extension)(const UPB_DESC(FileDescriptorProto)* msg, size_t* size) {
  const upb_MiniTableField field = *upb_MiniTable_FindFieldByNumber(UPB_DESC(_FileDescriptorProto_msg_init)(), 7);
  const upb_Array* arr = upb_Message_GetArray(msg, &field);
  if (arr) {
    if (size) *size = arr->size;
    return (const UPB_DESC(FieldDescriptorProto)* const*)_upb_array_constptr(arr);
  } else {
    if (size) *size = 0;
    return NULL;
  }
}
UPB_INLINE const upb_Array* _google_protobuf_FileDescriptorProto_extension_upb_array(const UPB_DESC(FileDescriptorProto)* msg, size_t* size) {
  const upb_MiniTableField field = *upb_MiniTable_FindFieldByNumber(UPB_DESC(_FileDescriptorProto_msg_init)(), 7);
  const upb_Array* arr = upb_Message_GetArray(msg, &field);
  if (size) {
    *size = arr ? arr->size : 0;
  }
  return arr;
}
UPB_INLINE upb_Array* _google_protobuf_FileDescriptorProto_extension_mutable_upb_array(const UPB_DESC(FileDescriptorProto)* msg, size_t* size, upb_Arena* arena) {
  const upb_MiniTableField field = *upb_MiniTable_FindFieldByNumber(UPB_DESC(_FileDescriptorProto_msg_init)(), 7);
  upb_Array* arr = upb_Message_GetOrCreateMutableArray(
      (upb_Message*)msg, &field, arena);
  if (size) {
    *size = arr ? arr->size : 0;
  }
  return arr;
}
UPB_INLINE bool UPB_DESC(FileDescriptorProto_has_extension)(const UPB_DESC(FileDescriptorProto)* msg) {
  size_t size;
  UPB_DESC(FileDescriptorProto_extension)(msg, &size);
  return size != 0;
}
UPB_INLINE void UPB_DESC(FileDescriptorProto_clear_options)(UPB_DESC(FileDescriptorProto)* msg) {
  const upb_MiniTableField field = *upb_MiniTable_FindFieldByNumber(UPB_DESC(_FileDescriptorProto_msg_init)(), 8);
  _upb_Message_ClearNonExtensionField(msg, &field);
}
UPB_INLINE const UPB_DESC(FileOptions)* UPB_DESC(FileDescriptorProto_options)(const UPB_DESC(FileDescriptorProto)* msg) {
  const UPB_DESC(FileOptions)* default_val = NULL;
  const UPB_DESC(FileOptions)* ret;
  const upb_MiniTableField field = *upb_MiniTable_FindFieldByNumber(UPB_DESC(_FileDescriptorProto_msg_init)(), 8);
  _upb_Message_GetNonExtensionField(msg, &field, &default_val, &ret);
  return ret;
}
UPB_INLINE bool UPB_DESC(FileDescriptorProto_has_options)(const UPB_DESC(FileDescriptorProto)* msg) {
  const upb_MiniTableField field = *upb_MiniTable_FindFieldByNumber(UPB_DESC(_FileDescriptorProto_msg_init)(), 8);
  return _upb_Message_HasNonExtensionField(msg, &field);
}
UPB_INLINE void UPB_DESC(FileDescriptorProto_clear_source_code_info)(UPB_DESC(FileDescriptorProto)* msg) {
  const upb_MiniTableField field = *upb_MiniTable_FindFieldByNumber(UPB_DESC(_FileDescriptorProto_msg_init)(), 9);
  _upb_Message_ClearNonExtensionField(msg, &field);
}
UPB_INLINE const UPB_DESC(SourceCodeInfo)* UPB_DESC(FileDescriptorProto_source_code_info)(const UPB_DESC(FileDescriptorProto)* msg) {
  const UPB_DESC(SourceCodeInfo)* default_val = NULL;
  const UPB_DESC(SourceCodeInfo)* ret;
  const upb_MiniTableField field = *upb_MiniTable_FindFieldByNumber(UPB_DESC(_FileDescriptorProto_msg_init)(), 9);
  _upb_Message_GetNonExtensionField(msg, &field, &default_val, &ret);
  return ret;
}
UPB_INLINE bool UPB_DESC(FileDescriptorProto_has_source_code_info)(const UPB_DESC(FileDescriptorProto)* msg) {
  const upb_MiniTableField field = *upb_MiniTable_FindFieldByNumber(UPB_DESC(_FileDescriptorProto_msg_init)(), 9);
  return _upb_Message_HasNonExtensionField(msg, &field);
}
UPB_INLINE void UPB_DESC(FileDescriptorProto_clear_public_dependency)(UPB_DESC(FileDescriptorProto)* msg) {
  const upb_MiniTableField field = *upb_MiniTable_FindFieldByNumber(UPB_DESC(_FileDescriptorProto_msg_init)(), 10);
  _upb_Message_ClearNonExtensionField(msg, &field);
}
UPB_INLINE int32_t const* UPB_DESC(FileDescriptorProto_public_dependency)(const UPB_DESC(FileDescriptorProto)* msg, size_t* size) {
  const upb_MiniTableField field = *upb_MiniTable_FindFieldByNumber(UPB_DESC(_FileDescriptorProto_msg_init)(), 10);
  const upb_Array* arr = upb_Message_GetArray(msg, &field);
  if (arr) {
    if (size) *size = arr->size;
    return (int32_t const*)_upb_array_constptr(arr);
  } else {
    if (size) *size = 0;
    return NULL;
  }
}
UPB_INLINE const upb_Array* _google_protobuf_FileDescriptorProto_public_dependency_upb_array(const UPB_DESC(FileDescriptorProto)* msg, size_t* size) {
  const upb_MiniTableField field = *upb_MiniTable_FindFieldByNumber(UPB_DESC(_FileDescriptorProto_msg_init)(), 10);
  const upb_Array* arr = upb_Message_GetArray(msg, &field);
  if (size) {
    *size = arr ? arr->size : 0;
  }
  return arr;
}
UPB_INLINE upb_Array* _google_protobuf_FileDescriptorProto_public_dependency_mutable_upb_array(const UPB_DESC(FileDescriptorProto)* msg, size_t* size, upb_Arena* arena) {
  const upb_MiniTableField field = *upb_MiniTable_FindFieldByNumber(UPB_DESC(_FileDescriptorProto_msg_init)(), 10);
  upb_Array* arr = upb_Message_GetOrCreateMutableArray(
      (upb_Message*)msg, &field, arena);
  if (size) {
    *size = arr ? arr->size : 0;
  }
  return arr;
}
UPB_INLINE bool UPB_DESC(FileDescriptorProto_has_public_dependency)(const UPB_DESC(FileDescriptorProto)* msg) {
  size_t size;
  UPB_DESC(FileDescriptorProto_public_dependency)(msg, &size);
  return size != 0;
}
UPB_INLINE void UPB_DESC(FileDescriptorProto_clear_weak_dependency)(UPB_DESC(FileDescriptorProto)* msg) {
  const upb_MiniTableField field = *upb_MiniTable_FindFieldByNumber(UPB_DESC(_FileDescriptorProto_msg_init)(), 11);
  _upb_Message_ClearNonExtensionField(msg, &field);
}
UPB_INLINE int32_t const* UPB_DESC(FileDescriptorProto_weak_dependency)(const UPB_DESC(FileDescriptorProto)* msg, size_t* size) {
  const upb_MiniTableField field = *upb_MiniTable_FindFieldByNumber(UPB_DESC(_FileDescriptorProto_msg_init)(), 11);
  const upb_Array* arr = upb_Message_GetArray(msg, &field);
  if (arr) {
    if (size) *size = arr->size;
    return (int32_t const*)_upb_array_constptr(arr);
  } else {
    if (size) *size = 0;
    return NULL;
  }
}
UPB_INLINE const upb_Array* _google_protobuf_FileDescriptorProto_weak_dependency_upb_array(const UPB_DESC(FileDescriptorProto)* msg, size_t* size) {
  const upb_MiniTableField field = *upb_MiniTable_FindFieldByNumber(UPB_DESC(_FileDescriptorProto_msg_init)(), 11);
  const upb_Array* arr = upb_Message_GetArray(msg, &field);
  if (size) {
    *size = arr ? arr->size : 0;
  }
  return arr;
}
UPB_INLINE upb_Array* _google_protobuf_FileDescriptorProto_weak_dependency_mutable_upb_array(const UPB_DESC(FileDescriptorProto)* msg, size_t* size, upb_Arena* arena) {
  const upb_MiniTableField field = *upb_MiniTable_FindFieldByNumber(UPB_DESC(_FileDescriptorProto_msg_init)(), 11);
  upb_Array* arr = upb_Message_GetOrCreateMutableArray(
      (upb_Message*)msg, &field, arena);
  if (size) {
    *size = arr ? arr->size : 0;
  }
  return arr;
}
UPB_INLINE bool UPB_DESC(FileDescriptorProto_has_weak_dependency)(const UPB_DESC(FileDescriptorProto)* msg) {
  size_t size;
  UPB_DESC(FileDescriptorProto_weak_dependency)(msg, &size);
  return size != 0;
}
UPB_INLINE void UPB_DESC(FileDescriptorProto_clear_syntax)(UPB_DESC(FileDescriptorProto)* msg) {
  const upb_MiniTableField field = *upb_MiniTable_FindFieldByNumber(UPB_DESC(_FileDescriptorProto_msg_init)(), 12);
  _upb_Message_ClearNonExtensionField(msg, &field);
}
UPB_INLINE upb_StringView UPB_DESC(FileDescriptorProto_syntax)(const UPB_DESC(FileDescriptorProto)* msg) {
  upb_StringView default_val = upb_StringView_FromString("");
  upb_StringView ret;
  const upb_MiniTableField field = *upb_MiniTable_FindFieldByNumber(UPB_DESC(_FileDescriptorProto_msg_init)(), 12);
  _upb_Message_GetNonExtensionField(msg, &field, &default_val, &ret);
  return ret;
}
UPB_INLINE bool UPB_DESC(FileDescriptorProto_has_syntax)(const UPB_DESC(FileDescriptorProto)* msg) {
  const upb_MiniTableField field = *upb_MiniTable_FindFieldByNumber(UPB_DESC(_FileDescriptorProto_msg_init)(), 12);
  return _upb_Message_HasNonExtensionField(msg, &field);
}
UPB_INLINE void UPB_DESC(FileDescriptorProto_clear_edition)(UPB_DESC(FileDescriptorProto)* msg) {
  const upb_MiniTableField field = *upb_MiniTable_FindFieldByNumber(UPB_DESC(_FileDescriptorProto_msg_init)(), 14);
  _upb_Message_ClearNonExtensionField(msg, &field);
}
UPB_INLINE int32_t UPB_DESC(FileDescriptorProto_edition)(const UPB_DESC(FileDescriptorProto)* msg) {
  int32_t default_val = 0;
  int32_t ret;
  const upb_MiniTableField field = *upb_MiniTable_FindFieldByNumber(UPB_DESC(_FileDescriptorProto_msg_init)(), 14);
  _upb_Message_GetNonExtensionField(msg, &field, &default_val, &ret);
  return ret;
}
UPB_INLINE bool UPB_DESC(FileDescriptorProto_has_edition)(const UPB_DESC(FileDescriptorProto)* msg) {
  const upb_MiniTableField field = *upb_MiniTable_FindFieldByNumber(UPB_DESC(_FileDescriptorProto_msg_init)(), 14);
  return _upb_Message_HasNonExtensionField(msg, &field);
}

UPB_INLINE void UPB_DESC(FileDescriptorProto_set_name)(UPB_DESC(FileDescriptorProto) *msg, upb_StringView value) {
  const upb_MiniTableField field = *upb_MiniTable_FindFieldByNumber(UPB_DESC(_FileDescriptorProto_msg_init)(), 1);
  _upb_Message_SetNonExtensionField(msg, &field, &value);
}
UPB_INLINE void UPB_DESC(FileDescriptorProto_set_package)(UPB_DESC(FileDescriptorProto) *msg, upb_StringView value) {
  const upb_MiniTableField field = *upb_MiniTable_FindFieldByNumber(UPB_DESC(_FileDescriptorProto_msg_init)(), 2);
  _upb_Message_SetNonExtensionField(msg, &field, &value);
}
UPB_INLINE upb_StringView* UPB_DESC(FileDescriptorProto_mutable_dependency)(UPB_DESC(FileDescriptorProto)* msg, size_t* size) {
  upb_MiniTableField field = *upb_MiniTable_FindFieldByNumber(UPB_DESC(_FileDescriptorProto_msg_init)(), 3);
  upb_Array* arr = upb_Message_GetMutableArray(msg, &field);
  if (arr) {
    if (size) *size = arr->size;
    return (upb_StringView*)_upb_array_ptr(arr);
  } else {
    if (size) *size = 0;
    return NULL;
  }
}
UPB_INLINE upb_StringView* UPB_DESC(FileDescriptorProto_resize_dependency)(UPB_DESC(FileDescriptorProto)* msg, size_t size, upb_Arena* arena) {
  upb_MiniTableField field = *upb_MiniTable_FindFieldByNumber(UPB_DESC(_FileDescriptorProto_msg_init)(), 3);
  return (upb_StringView*)upb_Message_ResizeArrayUninitialized(msg, &field, size, arena);
}
UPB_INLINE bool UPB_DESC(FileDescriptorProto_add_dependency)(UPB_DESC(FileDescriptorProto)* msg, upb_StringView val, upb_Arena* arena) {
  upb_MiniTableField field = *upb_MiniTable_FindFieldByNumber(UPB_DESC(_FileDescriptorProto_msg_init)(), 3);
  upb_Array* arr = upb_Message_GetOrCreateMutableArray(msg, &field, arena);
  if (!arr || !_upb_Array_ResizeUninitialized(arr, arr->size + 1, arena)) {
    return false;
  }
  _upb_Array_Set(arr, arr->size - 1, &val, sizeof(val));
  return true;
}
UPB_INLINE UPB_DESC(DescriptorProto)** UPB_DESC(FileDescriptorProto_mutable_message_type)(UPB_DESC(FileDescriptorProto)* msg, size_t* size) {
  upb_MiniTableField field = *upb_MiniTable_FindFieldByNumber(UPB_DESC(_FileDescriptorProto_msg_init)(), 4);
  upb_Array* arr = upb_Message_GetMutableArray(msg, &field);
  if (arr) {
    if (size) *size = arr->size;
    return (UPB_DESC(DescriptorProto)**)_upb_array_ptr(arr);
  } else {
    if (size) *size = 0;
    return NULL;
  }
}
UPB_INLINE UPB_DESC(DescriptorProto)** UPB_DESC(FileDescriptorProto_resize_message_type)(UPB_DESC(FileDescriptorProto)* msg, size_t size, upb_Arena* arena) {
  upb_MiniTableField field = *upb_MiniTable_FindFieldByNumber(UPB_DESC(_FileDescriptorProto_msg_init)(), 4);
  return (UPB_DESC(DescriptorProto)**)upb_Message_ResizeArrayUninitialized(msg, &field, size, arena);
}
UPB_INLINE struct UPB_DESC(DescriptorProto)* UPB_DESC(FileDescriptorProto_add_message_type)(UPB_DESC(FileDescriptorProto)* msg, upb_Arena* arena) {
  upb_MiniTableField field = *upb_MiniTable_FindFieldByNumber(UPB_DESC(_FileDescriptorProto_msg_init)(), 4);
  upb_Array* arr = upb_Message_GetOrCreateMutableArray(msg, &field, arena);
  if (!arr || !_upb_Array_ResizeUninitialized(arr, arr->size + 1, arena)) {
    return NULL;
  }
  struct UPB_DESC(DescriptorProto)* sub = (struct UPB_DESC(DescriptorProto)*)_upb_Message_New(UPB_DESC(_DescriptorProto_msg_init)(), arena);
  if (!arr || !sub) return NULL;
  _upb_Array_Set(arr, arr->size - 1, &sub, sizeof(sub));
  return sub;
}
UPB_INLINE UPB_DESC(EnumDescriptorProto)** UPB_DESC(FileDescriptorProto_mutable_enum_type)(UPB_DESC(FileDescriptorProto)* msg, size_t* size) {
  upb_MiniTableField field = *upb_MiniTable_FindFieldByNumber(UPB_DESC(_FileDescriptorProto_msg_init)(), 5);
  upb_Array* arr = upb_Message_GetMutableArray(msg, &field);
  if (arr) {
    if (size) *size = arr->size;
    return (UPB_DESC(EnumDescriptorProto)**)_upb_array_ptr(arr);
  } else {
    if (size) *size = 0;
    return NULL;
  }
}
UPB_INLINE UPB_DESC(EnumDescriptorProto)** UPB_DESC(FileDescriptorProto_resize_enum_type)(UPB_DESC(FileDescriptorProto)* msg, size_t size, upb_Arena* arena) {
  upb_MiniTableField field = *upb_MiniTable_FindFieldByNumber(UPB_DESC(_FileDescriptorProto_msg_init)(), 5);
  return (UPB_DESC(EnumDescriptorProto)**)upb_Message_ResizeArrayUninitialized(msg, &field, size, arena);
}
UPB_INLINE struct UPB_DESC(EnumDescriptorProto)* UPB_DESC(FileDescriptorProto_add_enum_type)(UPB_DESC(FileDescriptorProto)* msg, upb_Arena* arena) {
  upb_MiniTableField field = *upb_MiniTable_FindFieldByNumber(UPB_DESC(_FileDescriptorProto_msg_init)(), 5);
  upb_Array* arr = upb_Message_GetOrCreateMutableArray(msg, &field, arena);
  if (!arr || !_upb_Array_ResizeUninitialized(arr, arr->size + 1, arena)) {
    return NULL;
  }
  struct UPB_DESC(EnumDescriptorProto)* sub = (struct UPB_DESC(EnumDescriptorProto)*)_upb_Message_New(UPB_DESC(_EnumDescriptorProto_msg_init)(), arena);
  if (!arr || !sub) return NULL;
  _upb_Array_Set(arr, arr->size - 1, &sub, sizeof(sub));
  return sub;
}
UPB_INLINE UPB_DESC(ServiceDescriptorProto)** UPB_DESC(FileDescriptorProto_mutable_service)(UPB_DESC(FileDescriptorProto)* msg, size_t* size) {
  upb_MiniTableField field = *upb_MiniTable_FindFieldByNumber(UPB_DESC(_FileDescriptorProto_msg_init)(), 6);
  upb_Array* arr = upb_Message_GetMutableArray(msg, &field);
  if (arr) {
    if (size) *size = arr->size;
    return (UPB_DESC(ServiceDescriptorProto)**)_upb_array_ptr(arr);
  } else {
    if (size) *size = 0;
    return NULL;
  }
}
UPB_INLINE UPB_DESC(ServiceDescriptorProto)** UPB_DESC(FileDescriptorProto_resize_service)(UPB_DESC(FileDescriptorProto)* msg, size_t size, upb_Arena* arena) {
  upb_MiniTableField field = *upb_MiniTable_FindFieldByNumber(UPB_DESC(_FileDescriptorProto_msg_init)(), 6);
  return (UPB_DESC(ServiceDescriptorProto)**)upb_Message_ResizeArrayUninitialized(msg, &field, size, arena);
}
UPB_INLINE struct UPB_DESC(ServiceDescriptorProto)* UPB_DESC(FileDescriptorProto_add_service)(UPB_DESC(FileDescriptorProto)* msg, upb_Arena* arena) {
  upb_MiniTableField field = *upb_MiniTable_FindFieldByNumber(UPB_DESC(_FileDescriptorProto_msg_init)(), 6);
  upb_Array* arr = upb_Message_GetOrCreateMutableArray(msg, &field, arena);
  if (!arr || !_upb_Array_ResizeUninitialized(arr, arr->size + 1, arena)) {
    return NULL;
  }
  struct UPB_DESC(ServiceDescriptorProto)* sub = (struct UPB_DESC(ServiceDescriptorProto)*)_upb_Message_New(UPB_DESC(_ServiceDescriptorProto_msg_init)(), arena);
  if (!arr || !sub) return NULL;
  _upb_Array_Set(arr, arr->size - 1, &sub, sizeof(sub));
  return sub;
}
UPB_INLINE UPB_DESC(FieldDescriptorProto)** UPB_DESC(FileDescriptorProto_mutable_extension)(UPB_DESC(FileDescriptorProto)* msg, size_t* size) {
  upb_MiniTableField field = *upb_MiniTable_FindFieldByNumber(UPB_DESC(_FileDescriptorProto_msg_init)(), 7);
  upb_Array* arr = upb_Message_GetMutableArray(msg, &field);
  if (arr) {
    if (size) *size = arr->size;
    return (UPB_DESC(FieldDescriptorProto)**)_upb_array_ptr(arr);
  } else {
    if (size) *size = 0;
    return NULL;
  }
}
UPB_INLINE UPB_DESC(FieldDescriptorProto)** UPB_DESC(FileDescriptorProto_resize_extension)(UPB_DESC(FileDescriptorProto)* msg, size_t size, upb_Arena* arena) {
  upb_MiniTableField field = *upb_MiniTable_FindFieldByNumber(UPB_DESC(_FileDescriptorProto_msg_init)(), 7);
  return (UPB_DESC(FieldDescriptorProto)**)upb_Message_ResizeArrayUninitialized(msg, &field, size, arena);
}
UPB_INLINE struct UPB_DESC(FieldDescriptorProto)* UPB_DESC(FileDescriptorProto_add_extension)(UPB_DESC(FileDescriptorProto)* msg, upb_Arena* arena) {
  upb_MiniTableField field = *upb_MiniTable_FindFieldByNumber(UPB_DESC(_FileDescriptorProto_msg_init)(), 7);
  upb_Array* arr = upb_Message_GetOrCreateMutableArray(msg, &field, arena);
  if (!arr || !_upb_Array_ResizeUninitialized(arr, arr->size + 1, arena)) {
    return NULL;
  }
  struct UPB_DESC(FieldDescriptorProto)* sub = (struct UPB_DESC(FieldDescriptorProto)*)_upb_Message_New(UPB_DESC(_FieldDescriptorProto_msg_init)(), arena);
  if (!arr || !sub) return NULL;
  _upb_Array_Set(arr, arr->size - 1, &sub, sizeof(sub));
  return sub;
}
UPB_INLINE void UPB_DESC(FileDescriptorProto_set_options)(UPB_DESC(FileDescriptorProto) *msg, UPB_DESC(FileOptions)* value) {
  const upb_MiniTableField field = *upb_MiniTable_FindFieldByNumber(UPB_DESC(_FileDescriptorProto_msg_init)(), 8);
  _upb_Message_SetNonExtensionField(msg, &field, &value);
}
UPB_INLINE struct UPB_DESC(FileOptions)* UPB_DESC(FileDescriptorProto_mutable_options)(UPB_DESC(FileDescriptorProto)* msg, upb_Arena* arena) {
  struct UPB_DESC(FileOptions)* sub = (struct UPB_DESC(FileOptions)*)UPB_DESC(FileDescriptorProto_options)(msg);
  if (sub == NULL) {
    sub = (struct UPB_DESC(FileOptions)*)_upb_Message_New(UPB_DESC(_FileOptions_msg_init)(), arena);
    if (sub) UPB_DESC(FileDescriptorProto_set_options)(msg, sub);
  }
  return sub;
}
UPB_INLINE void UPB_DESC(FileDescriptorProto_set_source_code_info)(UPB_DESC(FileDescriptorProto) *msg, UPB_DESC(SourceCodeInfo)* value) {
  const upb_MiniTableField field = *upb_MiniTable_FindFieldByNumber(UPB_DESC(_FileDescriptorProto_msg_init)(), 9);
  _upb_Message_SetNonExtensionField(msg, &field, &value);
}
UPB_INLINE struct UPB_DESC(SourceCodeInfo)* UPB_DESC(FileDescriptorProto_mutable_source_code_info)(UPB_DESC(FileDescriptorProto)* msg, upb_Arena* arena) {
  struct UPB_DESC(SourceCodeInfo)* sub = (struct UPB_DESC(SourceCodeInfo)*)UPB_DESC(FileDescriptorProto_source_code_info)(msg);
  if (sub == NULL) {
    sub = (struct UPB_DESC(SourceCodeInfo)*)_upb_Message_New(UPB_DESC(_SourceCodeInfo_msg_init)(), arena);
    if (sub) UPB_DESC(FileDescriptorProto_set_source_code_info)(msg, sub);
  }
  return sub;
}
UPB_INLINE int32_t* UPB_DESC(FileDescriptorProto_mutable_public_dependency)(UPB_DESC(FileDescriptorProto)* msg, size_t* size) {
  upb_MiniTableField field = *upb_MiniTable_FindFieldByNumber(UPB_DESC(_FileDescriptorProto_msg_init)(), 10);
  upb_Array* arr = upb_Message_GetMutableArray(msg, &field);
  if (arr) {
    if (size) *size = arr->size;
    return (int32_t*)_upb_array_ptr(arr);
  } else {
    if (size) *size = 0;
    return NULL;
  }
}
UPB_INLINE int32_t* UPB_DESC(FileDescriptorProto_resize_public_dependency)(UPB_DESC(FileDescriptorProto)* msg, size_t size, upb_Arena* arena) {
  upb_MiniTableField field = *upb_MiniTable_FindFieldByNumber(UPB_DESC(_FileDescriptorProto_msg_init)(), 10);
  return (int32_t*)upb_Message_ResizeArrayUninitialized(msg, &field, size, arena);
}
UPB_INLINE bool UPB_DESC(FileDescriptorProto_add_public_dependency)(UPB_DESC(FileDescriptorProto)* msg, int32_t val, upb_Arena* arena) {
  upb_MiniTableField field = *upb_MiniTable_FindFieldByNumber(UPB_DESC(_FileDescriptorProto_msg_init)(), 10);
  upb_Array* arr = upb_Message_GetOrCreateMutableArray(msg, &field, arena);
  if (!arr || !_upb_Array_ResizeUninitialized(arr, arr->size + 1, arena)) {
    return false;
  }
  _upb_Array_Set(arr, arr->size - 1, &val, sizeof(val));
  return true;
}
UPB_INLINE int32_t* UPB_DESC(FileDescriptorProto_mutable_weak_dependency)(UPB_DESC(FileDescriptorProto)* msg, size_t* size) {
  upb_MiniTableField field = *upb_MiniTable_FindFieldByNumber(UPB_DESC(_FileDescriptorProto_msg_init)(), 11);
  upb_Array* arr = upb_Message_GetMutableArray(msg, &field);
  if (arr) {
    if (size) *size = arr->size;
    return (int32_t*)_upb_array_ptr(arr);
  } else {
    if (size) *size = 0;
    return NULL;
  }
}
UPB_INLINE int32_t* UPB_DESC(FileDescriptorProto_resize_weak_dependency)(UPB_DESC(FileDescriptorProto)* msg, size_t size, upb_Arena* arena) {
  upb_MiniTableField field = *upb_MiniTable_FindFieldByNumber(UPB_DESC(_FileDescriptorProto_msg_init)(), 11);
  return (int32_t*)upb_Message_ResizeArrayUninitialized(msg, &field, size, arena);
}
UPB_INLINE bool UPB_DESC(FileDescriptorProto_add_weak_dependency)(UPB_DESC(FileDescriptorProto)* msg, int32_t val, upb_Arena* arena) {
  upb_MiniTableField field = *upb_MiniTable_FindFieldByNumber(UPB_DESC(_FileDescriptorProto_msg_init)(), 11);
  upb_Array* arr = upb_Message_GetOrCreateMutableArray(msg, &field, arena);
  if (!arr || !_upb_Array_ResizeUninitialized(arr, arr->size + 1, arena)) {
    return false;
  }
  _upb_Array_Set(arr, arr->size - 1, &val, sizeof(val));
  return true;
}
UPB_INLINE void UPB_DESC(FileDescriptorProto_set_syntax)(UPB_DESC(FileDescriptorProto) *msg, upb_StringView value) {
  const upb_MiniTableField field = *upb_MiniTable_FindFieldByNumber(UPB_DESC(_FileDescriptorProto_msg_init)(), 12);
  _upb_Message_SetNonExtensionField(msg, &field, &value);
}
UPB_INLINE void UPB_DESC(FileDescriptorProto_set_edition)(UPB_DESC(FileDescriptorProto) *msg, int32_t value) {
  const upb_MiniTableField field = *upb_MiniTable_FindFieldByNumber(UPB_DESC(_FileDescriptorProto_msg_init)(), 14);
  _upb_Message_SetNonExtensionField(msg, &field, &value);
}

/* google.protobuf.DescriptorProto */

UPB_INLINE UPB_DESC(DescriptorProto)* UPB_DESC(DescriptorProto_new)(upb_Arena* arena) {
  return (UPB_DESC(DescriptorProto)*)_upb_Message_New(UPB_DESC(_DescriptorProto_msg_init)(), arena);
}
UPB_INLINE UPB_DESC(DescriptorProto)* UPB_DESC(DescriptorProto_parse)(const char* buf, size_t size, upb_Arena* arena) {
  UPB_DESC(DescriptorProto)* ret = UPB_DESC(DescriptorProto_new)(arena);
  if (!ret) return NULL;
  if (upb_Decode(buf, size, ret, UPB_DESC(_DescriptorProto_msg_init)(), NULL, 0, arena) != kUpb_DecodeStatus_Ok) {
    return NULL;
  }
  return ret;
}
UPB_INLINE UPB_DESC(DescriptorProto)* UPB_DESC(DescriptorProto_parse_ex)(const char* buf, size_t size,
                           const upb_ExtensionRegistry* extreg,
                           int options, upb_Arena* arena) {
  UPB_DESC(DescriptorProto)* ret = UPB_DESC(DescriptorProto_new)(arena);
  if (!ret) return NULL;
  if (upb_Decode(buf, size, ret, UPB_DESC(_DescriptorProto_msg_init)(), extreg, options, arena) !=
      kUpb_DecodeStatus_Ok) {
    return NULL;
  }
  return ret;
}
UPB_INLINE char* UPB_DESC(DescriptorProto_serialize)(const UPB_DESC(DescriptorProto)* msg, upb_Arena* arena, size_t* len) {
  char* ptr;
  (void)upb_Encode(msg, UPB_DESC(_DescriptorProto_msg_init)(), 0, arena, &ptr, len);
  return ptr;
}
UPB_INLINE char* UPB_DESC(DescriptorProto_serialize_ex)(const UPB_DESC(DescriptorProto)* msg, int options,
                                 upb_Arena* arena, size_t* len) {
  char* ptr;
  (void)upb_Encode(msg, UPB_DESC(_DescriptorProto_msg_init)(), options, arena, &ptr, len);
  return ptr;
}
UPB_INLINE void UPB_DESC(DescriptorProto_clear_name)(UPB_DESC(DescriptorProto)* msg) {
  const upb_MiniTableField field = *upb_MiniTable_FindFieldByNumber(UPB_DESC(_DescriptorProto_msg_init)(), 1);
  _upb_Message_ClearNonExtensionField(msg, &field);
}
UPB_INLINE upb_StringView UPB_DESC(DescriptorProto_name)(const UPB_DESC(DescriptorProto)* msg) {
  upb_StringView default_val = upb_StringView_FromString("");
  upb_StringView ret;
  const upb_MiniTableField field = *upb_MiniTable_FindFieldByNumber(UPB_DESC(_DescriptorProto_msg_init)(), 1);
  _upb_Message_GetNonExtensionField(msg, &field, &default_val, &ret);
  return ret;
}
UPB_INLINE bool UPB_DESC(DescriptorProto_has_name)(const UPB_DESC(DescriptorProto)* msg) {
  const upb_MiniTableField field = *upb_MiniTable_FindFieldByNumber(UPB_DESC(_DescriptorProto_msg_init)(), 1);
  return _upb_Message_HasNonExtensionField(msg, &field);
}
UPB_INLINE void UPB_DESC(DescriptorProto_clear_field)(UPB_DESC(DescriptorProto)* msg) {
  const upb_MiniTableField field = *upb_MiniTable_FindFieldByNumber(UPB_DESC(_DescriptorProto_msg_init)(), 2);
  _upb_Message_ClearNonExtensionField(msg, &field);
}
UPB_INLINE const UPB_DESC(FieldDescriptorProto)* const* UPB_DESC(DescriptorProto_field)(const UPB_DESC(DescriptorProto)* msg, size_t* size) {
  const upb_MiniTableField field = *upb_MiniTable_FindFieldByNumber(UPB_DESC(_DescriptorProto_msg_init)(), 2);
  const upb_Array* arr = upb_Message_GetArray(msg, &field);
  if (arr) {
    if (size) *size = arr->size;
    return (const UPB_DESC(FieldDescriptorProto)* const*)_upb_array_constptr(arr);
  } else {
    if (size) *size = 0;
    return NULL;
  }
}
UPB_INLINE const upb_Array* _google_protobuf_DescriptorProto_field_upb_array(const UPB_DESC(DescriptorProto)* msg, size_t* size) {
  const upb_MiniTableField field = *upb_MiniTable_FindFieldByNumber(UPB_DESC(_DescriptorProto_msg_init)(), 2);
  const upb_Array* arr = upb_Message_GetArray(msg, &field);
  if (size) {
    *size = arr ? arr->size : 0;
  }
  return arr;
}
UPB_INLINE upb_Array* _google_protobuf_DescriptorProto_field_mutable_upb_array(const UPB_DESC(DescriptorProto)* msg, size_t* size, upb_Arena* arena) {
  const upb_MiniTableField field = *upb_MiniTable_FindFieldByNumber(UPB_DESC(_DescriptorProto_msg_init)(), 2);
  upb_Array* arr = upb_Message_GetOrCreateMutableArray(
      (upb_Message*)msg, &field, arena);
  if (size) {
    *size = arr ? arr->size : 0;
  }
  return arr;
}
UPB_INLINE bool UPB_DESC(DescriptorProto_has_field)(const UPB_DESC(DescriptorProto)* msg) {
  size_t size;
  UPB_DESC(DescriptorProto_field)(msg, &size);
  return size != 0;
}
UPB_INLINE void UPB_DESC(DescriptorProto_clear_nested_type)(UPB_DESC(DescriptorProto)* msg) {
  const upb_MiniTableField field = *upb_MiniTable_FindFieldByNumber(UPB_DESC(_DescriptorProto_msg_init)(), 3);
  _upb_Message_ClearNonExtensionField(msg, &field);
}
UPB_INLINE const UPB_DESC(DescriptorProto)* const* UPB_DESC(DescriptorProto_nested_type)(const UPB_DESC(DescriptorProto)* msg, size_t* size) {
  const upb_MiniTableField field = *upb_MiniTable_FindFieldByNumber(UPB_DESC(_DescriptorProto_msg_init)(), 3);
  const upb_Array* arr = upb_Message_GetArray(msg, &field);
  if (arr) {
    if (size) *size = arr->size;
    return (const UPB_DESC(DescriptorProto)* const*)_upb_array_constptr(arr);
  } else {
    if (size) *size = 0;
    return NULL;
  }
}
UPB_INLINE const upb_Array* _google_protobuf_DescriptorProto_nested_type_upb_array(const UPB_DESC(DescriptorProto)* msg, size_t* size) {
  const upb_MiniTableField field = *upb_MiniTable_FindFieldByNumber(UPB_DESC(_DescriptorProto_msg_init)(), 3);
  const upb_Array* arr = upb_Message_GetArray(msg, &field);
  if (size) {
    *size = arr ? arr->size : 0;
  }
  return arr;
}
UPB_INLINE upb_Array* _google_protobuf_DescriptorProto_nested_type_mutable_upb_array(const UPB_DESC(DescriptorProto)* msg, size_t* size, upb_Arena* arena) {
  const upb_MiniTableField field = *upb_MiniTable_FindFieldByNumber(UPB_DESC(_DescriptorProto_msg_init)(), 3);
  upb_Array* arr = upb_Message_GetOrCreateMutableArray(
      (upb_Message*)msg, &field, arena);
  if (size) {
    *size = arr ? arr->size : 0;
  }
  return arr;
}
UPB_INLINE bool UPB_DESC(DescriptorProto_has_nested_type)(const UPB_DESC(DescriptorProto)* msg) {
  size_t size;
  UPB_DESC(DescriptorProto_nested_type)(msg, &size);
  return size != 0;
}
UPB_INLINE void UPB_DESC(DescriptorProto_clear_enum_type)(UPB_DESC(DescriptorProto)* msg) {
  const upb_MiniTableField field = *upb_MiniTable_FindFieldByNumber(UPB_DESC(_DescriptorProto_msg_init)(), 4);
  _upb_Message_ClearNonExtensionField(msg, &field);
}
UPB_INLINE const UPB_DESC(EnumDescriptorProto)* const* UPB_DESC(DescriptorProto_enum_type)(const UPB_DESC(DescriptorProto)* msg, size_t* size) {
  const upb_MiniTableField field = *upb_MiniTable_FindFieldByNumber(UPB_DESC(_DescriptorProto_msg_init)(), 4);
  const upb_Array* arr = upb_Message_GetArray(msg, &field);
  if (arr) {
    if (size) *size = arr->size;
    return (const UPB_DESC(EnumDescriptorProto)* const*)_upb_array_constptr(arr);
  } else {
    if (size) *size = 0;
    return NULL;
  }
}
UPB_INLINE const upb_Array* _google_protobuf_DescriptorProto_enum_type_upb_array(const UPB_DESC(DescriptorProto)* msg, size_t* size) {
  const upb_MiniTableField field = *upb_MiniTable_FindFieldByNumber(UPB_DESC(_DescriptorProto_msg_init)(), 4);
  const upb_Array* arr = upb_Message_GetArray(msg, &field);
  if (size) {
    *size = arr ? arr->size : 0;
  }
  return arr;
}
UPB_INLINE upb_Array* _google_protobuf_DescriptorProto_enum_type_mutable_upb_array(const UPB_DESC(DescriptorProto)* msg, size_t* size, upb_Arena* arena) {
  const upb_MiniTableField field = *upb_MiniTable_FindFieldByNumber(UPB_DESC(_DescriptorProto_msg_init)(), 4);
  upb_Array* arr = upb_Message_GetOrCreateMutableArray(
      (upb_Message*)msg, &field, arena);
  if (size) {
    *size = arr ? arr->size : 0;
  }
  return arr;
}
UPB_INLINE bool UPB_DESC(DescriptorProto_has_enum_type)(const UPB_DESC(DescriptorProto)* msg) {
  size_t size;
  UPB_DESC(DescriptorProto_enum_type)(msg, &size);
  return size != 0;
}
UPB_INLINE void UPB_DESC(DescriptorProto_clear_extension_range)(UPB_DESC(DescriptorProto)* msg) {
  const upb_MiniTableField field = *upb_MiniTable_FindFieldByNumber(UPB_DESC(_DescriptorProto_msg_init)(), 5);
  _upb_Message_ClearNonExtensionField(msg, &field);
}
UPB_INLINE const UPB_DESC(DescriptorProto_ExtensionRange)* const* UPB_DESC(DescriptorProto_extension_range)(const UPB_DESC(DescriptorProto)* msg, size_t* size) {
  const upb_MiniTableField field = *upb_MiniTable_FindFieldByNumber(UPB_DESC(_DescriptorProto_msg_init)(), 5);
  const upb_Array* arr = upb_Message_GetArray(msg, &field);
  if (arr) {
    if (size) *size = arr->size;
    return (const UPB_DESC(DescriptorProto_ExtensionRange)* const*)_upb_array_constptr(arr);
  } else {
    if (size) *size = 0;
    return NULL;
  }
}
UPB_INLINE const upb_Array* _google_protobuf_DescriptorProto_extension_range_upb_array(const UPB_DESC(DescriptorProto)* msg, size_t* size) {
  const upb_MiniTableField field = *upb_MiniTable_FindFieldByNumber(UPB_DESC(_DescriptorProto_msg_init)(), 5);
  const upb_Array* arr = upb_Message_GetArray(msg, &field);
  if (size) {
    *size = arr ? arr->size : 0;
  }
  return arr;
}
UPB_INLINE upb_Array* _google_protobuf_DescriptorProto_extension_range_mutable_upb_array(const UPB_DESC(DescriptorProto)* msg, size_t* size, upb_Arena* arena) {
  const upb_MiniTableField field = *upb_MiniTable_FindFieldByNumber(UPB_DESC(_DescriptorProto_msg_init)(), 5);
  upb_Array* arr = upb_Message_GetOrCreateMutableArray(
      (upb_Message*)msg, &field, arena);
  if (size) {
    *size = arr ? arr->size : 0;
  }
  return arr;
}
UPB_INLINE bool UPB_DESC(DescriptorProto_has_extension_range)(const UPB_DESC(DescriptorProto)* msg) {
  size_t size;
  UPB_DESC(DescriptorProto_extension_range)(msg, &size);
  return size != 0;
}
UPB_INLINE void UPB_DESC(DescriptorProto_clear_extension)(UPB_DESC(DescriptorProto)* msg) {
  const upb_MiniTableField field = *upb_MiniTable_FindFieldByNumber(UPB_DESC(_DescriptorProto_msg_init)(), 6);
  _upb_Message_ClearNonExtensionField(msg, &field);
}
UPB_INLINE const UPB_DESC(FieldDescriptorProto)* const* UPB_DESC(DescriptorProto_extension)(const UPB_DESC(DescriptorProto)* msg, size_t* size) {
  const upb_MiniTableField field = *upb_MiniTable_FindFieldByNumber(UPB_DESC(_DescriptorProto_msg_init)(), 6);
  const upb_Array* arr = upb_Message_GetArray(msg, &field);
  if (arr) {
    if (size) *size = arr->size;
    return (const UPB_DESC(FieldDescriptorProto)* const*)_upb_array_constptr(arr);
  } else {
    if (size) *size = 0;
    return NULL;
  }
}
UPB_INLINE const upb_Array* _google_protobuf_DescriptorProto_extension_upb_array(const UPB_DESC(DescriptorProto)* msg, size_t* size) {
  const upb_MiniTableField field = *upb_MiniTable_FindFieldByNumber(UPB_DESC(_DescriptorProto_msg_init)(), 6);
  const upb_Array* arr = upb_Message_GetArray(msg, &field);
  if (size) {
    *size = arr ? arr->size : 0;
  }
  return arr;
}
UPB_INLINE upb_Array* _google_protobuf_DescriptorProto_extension_mutable_upb_array(const UPB_DESC(DescriptorProto)* msg, size_t* size, upb_Arena* arena) {
  const upb_MiniTableField field = *upb_MiniTable_FindFieldByNumber(UPB_DESC(_DescriptorProto_msg_init)(), 6);
  upb_Array* arr = upb_Message_GetOrCreateMutableArray(
      (upb_Message*)msg, &field, arena);
  if (size) {
    *size = arr ? arr->size : 0;
  }
  return arr;
}
UPB_INLINE bool UPB_DESC(DescriptorProto_has_extension)(const UPB_DESC(DescriptorProto)* msg) {
  size_t size;
  UPB_DESC(DescriptorProto_extension)(msg, &size);
  return size != 0;
}
UPB_INLINE void UPB_DESC(DescriptorProto_clear_options)(UPB_DESC(DescriptorProto)* msg) {
  const upb_MiniTableField field = *upb_MiniTable_FindFieldByNumber(UPB_DESC(_DescriptorProto_msg_init)(), 7);
  _upb_Message_ClearNonExtensionField(msg, &field);
}
UPB_INLINE const UPB_DESC(MessageOptions)* UPB_DESC(DescriptorProto_options)(const UPB_DESC(DescriptorProto)* msg) {
  const UPB_DESC(MessageOptions)* default_val = NULL;
  const UPB_DESC(MessageOptions)* ret;
  const upb_MiniTableField field = *upb_MiniTable_FindFieldByNumber(UPB_DESC(_DescriptorProto_msg_init)(), 7);
  _upb_Message_GetNonExtensionField(msg, &field, &default_val, &ret);
  return ret;
}
UPB_INLINE bool UPB_DESC(DescriptorProto_has_options)(const UPB_DESC(DescriptorProto)* msg) {
  const upb_MiniTableField field = *upb_MiniTable_FindFieldByNumber(UPB_DESC(_DescriptorProto_msg_init)(), 7);
  return _upb_Message_HasNonExtensionField(msg, &field);
}
UPB_INLINE void UPB_DESC(DescriptorProto_clear_oneof_decl)(UPB_DESC(DescriptorProto)* msg) {
  const upb_MiniTableField field = *upb_MiniTable_FindFieldByNumber(UPB_DESC(_DescriptorProto_msg_init)(), 8);
  _upb_Message_ClearNonExtensionField(msg, &field);
}
UPB_INLINE const UPB_DESC(OneofDescriptorProto)* const* UPB_DESC(DescriptorProto_oneof_decl)(const UPB_DESC(DescriptorProto)* msg, size_t* size) {
  const upb_MiniTableField field = *upb_MiniTable_FindFieldByNumber(UPB_DESC(_DescriptorProto_msg_init)(), 8);
  const upb_Array* arr = upb_Message_GetArray(msg, &field);
  if (arr) {
    if (size) *size = arr->size;
    return (const UPB_DESC(OneofDescriptorProto)* const*)_upb_array_constptr(arr);
  } else {
    if (size) *size = 0;
    return NULL;
  }
}
UPB_INLINE const upb_Array* _google_protobuf_DescriptorProto_oneof_decl_upb_array(const UPB_DESC(DescriptorProto)* msg, size_t* size) {
  const upb_MiniTableField field = *upb_MiniTable_FindFieldByNumber(UPB_DESC(_DescriptorProto_msg_init)(), 8);
  const upb_Array* arr = upb_Message_GetArray(msg, &field);
  if (size) {
    *size = arr ? arr->size : 0;
  }
  return arr;
}
UPB_INLINE upb_Array* _google_protobuf_DescriptorProto_oneof_decl_mutable_upb_array(const UPB_DESC(DescriptorProto)* msg, size_t* size, upb_Arena* arena) {
  const upb_MiniTableField field = *upb_MiniTable_FindFieldByNumber(UPB_DESC(_DescriptorProto_msg_init)(), 8);
  upb_Array* arr = upb_Message_GetOrCreateMutableArray(
      (upb_Message*)msg, &field, arena);
  if (size) {
    *size = arr ? arr->size : 0;
  }
  return arr;
}
UPB_INLINE bool UPB_DESC(DescriptorProto_has_oneof_decl)(const UPB_DESC(DescriptorProto)* msg) {
  size_t size;
  UPB_DESC(DescriptorProto_oneof_decl)(msg, &size);
  return size != 0;
}
UPB_INLINE void UPB_DESC(DescriptorProto_clear_reserved_range)(UPB_DESC(DescriptorProto)* msg) {
  const upb_MiniTableField field = *upb_MiniTable_FindFieldByNumber(UPB_DESC(_DescriptorProto_msg_init)(), 9);
  _upb_Message_ClearNonExtensionField(msg, &field);
}
UPB_INLINE const UPB_DESC(DescriptorProto_ReservedRange)* const* UPB_DESC(DescriptorProto_reserved_range)(const UPB_DESC(DescriptorProto)* msg, size_t* size) {
  const upb_MiniTableField field = *upb_MiniTable_FindFieldByNumber(UPB_DESC(_DescriptorProto_msg_init)(), 9);
  const upb_Array* arr = upb_Message_GetArray(msg, &field);
  if (arr) {
    if (size) *size = arr->size;
    return (const UPB_DESC(DescriptorProto_ReservedRange)* const*)_upb_array_constptr(arr);
  } else {
    if (size) *size = 0;
    return NULL;
  }
}
UPB_INLINE const upb_Array* _google_protobuf_DescriptorProto_reserved_range_upb_array(const UPB_DESC(DescriptorProto)* msg, size_t* size) {
  const upb_MiniTableField field = *upb_MiniTable_FindFieldByNumber(UPB_DESC(_DescriptorProto_msg_init)(), 9);
  const upb_Array* arr = upb_Message_GetArray(msg, &field);
  if (size) {
    *size = arr ? arr->size : 0;
  }
  return arr;
}
UPB_INLINE upb_Array* _google_protobuf_DescriptorProto_reserved_range_mutable_upb_array(const UPB_DESC(DescriptorProto)* msg, size_t* size, upb_Arena* arena) {
  const upb_MiniTableField field = *upb_MiniTable_FindFieldByNumber(UPB_DESC(_DescriptorProto_msg_init)(), 9);
  upb_Array* arr = upb_Message_GetOrCreateMutableArray(
      (upb_Message*)msg, &field, arena);
  if (size) {
    *size = arr ? arr->size : 0;
  }
  return arr;
}
UPB_INLINE bool UPB_DESC(DescriptorProto_has_reserved_range)(const UPB_DESC(DescriptorProto)* msg) {
  size_t size;
  UPB_DESC(DescriptorProto_reserved_range)(msg, &size);
  return size != 0;
}
UPB_INLINE void UPB_DESC(DescriptorProto_clear_reserved_name)(UPB_DESC(DescriptorProto)* msg) {
  const upb_MiniTableField field = *upb_MiniTable_FindFieldByNumber(UPB_DESC(_DescriptorProto_msg_init)(), 10);
  _upb_Message_ClearNonExtensionField(msg, &field);
}
UPB_INLINE upb_StringView const* UPB_DESC(DescriptorProto_reserved_name)(const UPB_DESC(DescriptorProto)* msg, size_t* size) {
  const upb_MiniTableField field = *upb_MiniTable_FindFieldByNumber(UPB_DESC(_DescriptorProto_msg_init)(), 10);
  const upb_Array* arr = upb_Message_GetArray(msg, &field);
  if (arr) {
    if (size) *size = arr->size;
    return (upb_StringView const*)_upb_array_constptr(arr);
  } else {
    if (size) *size = 0;
    return NULL;
  }
}
UPB_INLINE const upb_Array* _google_protobuf_DescriptorProto_reserved_name_upb_array(const UPB_DESC(DescriptorProto)* msg, size_t* size) {
  const upb_MiniTableField field = *upb_MiniTable_FindFieldByNumber(UPB_DESC(_DescriptorProto_msg_init)(), 10);
  const upb_Array* arr = upb_Message_GetArray(msg, &field);
  if (size) {
    *size = arr ? arr->size : 0;
  }
  return arr;
}
UPB_INLINE upb_Array* _google_protobuf_DescriptorProto_reserved_name_mutable_upb_array(const UPB_DESC(DescriptorProto)* msg, size_t* size, upb_Arena* arena) {
  const upb_MiniTableField field = *upb_MiniTable_FindFieldByNumber(UPB_DESC(_DescriptorProto_msg_init)(), 10);
  upb_Array* arr = upb_Message_GetOrCreateMutableArray(
      (upb_Message*)msg, &field, arena);
  if (size) {
    *size = arr ? arr->size : 0;
  }
  return arr;
}
UPB_INLINE bool UPB_DESC(DescriptorProto_has_reserved_name)(const UPB_DESC(DescriptorProto)* msg) {
  size_t size;
  UPB_DESC(DescriptorProto_reserved_name)(msg, &size);
  return size != 0;
}

UPB_INLINE void UPB_DESC(DescriptorProto_set_name)(UPB_DESC(DescriptorProto) *msg, upb_StringView value) {
  const upb_MiniTableField field = *upb_MiniTable_FindFieldByNumber(UPB_DESC(_DescriptorProto_msg_init)(), 1);
  _upb_Message_SetNonExtensionField(msg, &field, &value);
}
UPB_INLINE UPB_DESC(FieldDescriptorProto)** UPB_DESC(DescriptorProto_mutable_field)(UPB_DESC(DescriptorProto)* msg, size_t* size) {
  upb_MiniTableField field = *upb_MiniTable_FindFieldByNumber(UPB_DESC(_DescriptorProto_msg_init)(), 2);
  upb_Array* arr = upb_Message_GetMutableArray(msg, &field);
  if (arr) {
    if (size) *size = arr->size;
    return (UPB_DESC(FieldDescriptorProto)**)_upb_array_ptr(arr);
  } else {
    if (size) *size = 0;
    return NULL;
  }
}
UPB_INLINE UPB_DESC(FieldDescriptorProto)** UPB_DESC(DescriptorProto_resize_field)(UPB_DESC(DescriptorProto)* msg, size_t size, upb_Arena* arena) {
  upb_MiniTableField field = *upb_MiniTable_FindFieldByNumber(UPB_DESC(_DescriptorProto_msg_init)(), 2);
  return (UPB_DESC(FieldDescriptorProto)**)upb_Message_ResizeArrayUninitialized(msg, &field, size, arena);
}
UPB_INLINE struct UPB_DESC(FieldDescriptorProto)* UPB_DESC(DescriptorProto_add_field)(UPB_DESC(DescriptorProto)* msg, upb_Arena* arena) {
  upb_MiniTableField field = *upb_MiniTable_FindFieldByNumber(UPB_DESC(_DescriptorProto_msg_init)(), 2);
  upb_Array* arr = upb_Message_GetOrCreateMutableArray(msg, &field, arena);
  if (!arr || !_upb_Array_ResizeUninitialized(arr, arr->size + 1, arena)) {
    return NULL;
  }
  struct UPB_DESC(FieldDescriptorProto)* sub = (struct UPB_DESC(FieldDescriptorProto)*)_upb_Message_New(UPB_DESC(_FieldDescriptorProto_msg_init)(), arena);
  if (!arr || !sub) return NULL;
  _upb_Array_Set(arr, arr->size - 1, &sub, sizeof(sub));
  return sub;
}
UPB_INLINE UPB_DESC(DescriptorProto)** UPB_DESC(DescriptorProto_mutable_nested_type)(UPB_DESC(DescriptorProto)* msg, size_t* size) {
  upb_MiniTableField field = *upb_MiniTable_FindFieldByNumber(UPB_DESC(_DescriptorProto_msg_init)(), 3);
  upb_Array* arr = upb_Message_GetMutableArray(msg, &field);
  if (arr) {
    if (size) *size = arr->size;
    return (UPB_DESC(DescriptorProto)**)_upb_array_ptr(arr);
  } else {
    if (size) *size = 0;
    return NULL;
  }
}
UPB_INLINE UPB_DESC(DescriptorProto)** UPB_DESC(DescriptorProto_resize_nested_type)(UPB_DESC(DescriptorProto)* msg, size_t size, upb_Arena* arena) {
  upb_MiniTableField field = *upb_MiniTable_FindFieldByNumber(UPB_DESC(_DescriptorProto_msg_init)(), 3);
  return (UPB_DESC(DescriptorProto)**)upb_Message_ResizeArrayUninitialized(msg, &field, size, arena);
}
UPB_INLINE struct UPB_DESC(DescriptorProto)* UPB_DESC(DescriptorProto_add_nested_type)(UPB_DESC(DescriptorProto)* msg, upb_Arena* arena) {
  upb_MiniTableField field = *upb_MiniTable_FindFieldByNumber(UPB_DESC(_DescriptorProto_msg_init)(), 3);
  upb_Array* arr = upb_Message_GetOrCreateMutableArray(msg, &field, arena);
  if (!arr || !_upb_Array_ResizeUninitialized(arr, arr->size + 1, arena)) {
    return NULL;
  }
  struct UPB_DESC(DescriptorProto)* sub = (struct UPB_DESC(DescriptorProto)*)_upb_Message_New(UPB_DESC(_DescriptorProto_msg_init)(), arena);
  if (!arr || !sub) return NULL;
  _upb_Array_Set(arr, arr->size - 1, &sub, sizeof(sub));
  return sub;
}
UPB_INLINE UPB_DESC(EnumDescriptorProto)** UPB_DESC(DescriptorProto_mutable_enum_type)(UPB_DESC(DescriptorProto)* msg, size_t* size) {
  upb_MiniTableField field = *upb_MiniTable_FindFieldByNumber(UPB_DESC(_DescriptorProto_msg_init)(), 4);
  upb_Array* arr = upb_Message_GetMutableArray(msg, &field);
  if (arr) {
    if (size) *size = arr->size;
    return (UPB_DESC(EnumDescriptorProto)**)_upb_array_ptr(arr);
  } else {
    if (size) *size = 0;
    return NULL;
  }
}
UPB_INLINE UPB_DESC(EnumDescriptorProto)** UPB_DESC(DescriptorProto_resize_enum_type)(UPB_DESC(DescriptorProto)* msg, size_t size, upb_Arena* arena) {
  upb_MiniTableField field = *upb_MiniTable_FindFieldByNumber(UPB_DESC(_DescriptorProto_msg_init)(), 4);
  return (UPB_DESC(EnumDescriptorProto)**)upb_Message_ResizeArrayUninitialized(msg, &field, size, arena);
}
UPB_INLINE struct UPB_DESC(EnumDescriptorProto)* UPB_DESC(DescriptorProto_add_enum_type)(UPB_DESC(DescriptorProto)* msg, upb_Arena* arena) {
  upb_MiniTableField field = *upb_MiniTable_FindFieldByNumber(UPB_DESC(_DescriptorProto_msg_init)(), 4);
  upb_Array* arr = upb_Message_GetOrCreateMutableArray(msg, &field, arena);
  if (!arr || !_upb_Array_ResizeUninitialized(arr, arr->size + 1, arena)) {
    return NULL;
  }
  struct UPB_DESC(EnumDescriptorProto)* sub = (struct UPB_DESC(EnumDescriptorProto)*)_upb_Message_New(UPB_DESC(_EnumDescriptorProto_msg_init)(), arena);
  if (!arr || !sub) return NULL;
  _upb_Array_Set(arr, arr->size - 1, &sub, sizeof(sub));
  return sub;
}
UPB_INLINE UPB_DESC(DescriptorProto_ExtensionRange)** UPB_DESC(DescriptorProto_mutable_extension_range)(UPB_DESC(DescriptorProto)* msg, size_t* size) {
  upb_MiniTableField field = *upb_MiniTable_FindFieldByNumber(UPB_DESC(_DescriptorProto_msg_init)(), 5);
  upb_Array* arr = upb_Message_GetMutableArray(msg, &field);
  if (arr) {
    if (size) *size = arr->size;
    return (UPB_DESC(DescriptorProto_ExtensionRange)**)_upb_array_ptr(arr);
  } else {
    if (size) *size = 0;
    return NULL;
  }
}
UPB_INLINE UPB_DESC(DescriptorProto_ExtensionRange)** UPB_DESC(DescriptorProto_resize_extension_range)(UPB_DESC(DescriptorProto)* msg, size_t size, upb_Arena* arena) {
  upb_MiniTableField field = *upb_MiniTable_FindFieldByNumber(UPB_DESC(_DescriptorProto_msg_init)(), 5);
  return (UPB_DESC(DescriptorProto_ExtensionRange)**)upb_Message_ResizeArrayUninitialized(msg, &field, size, arena);
}
UPB_INLINE struct UPB_DESC(DescriptorProto_ExtensionRange)* UPB_DESC(DescriptorProto_add_extension_range)(UPB_DESC(DescriptorProto)* msg, upb_Arena* arena) {
  upb_MiniTableField field = *upb_MiniTable_FindFieldByNumber(UPB_DESC(_DescriptorProto_msg_init)(), 5);
  upb_Array* arr = upb_Message_GetOrCreateMutableArray(msg, &field, arena);
  if (!arr || !_upb_Array_ResizeUninitialized(arr, arr->size + 1, arena)) {
    return NULL;
  }
  struct UPB_DESC(DescriptorProto_ExtensionRange)* sub = (struct UPB_DESC(DescriptorProto_ExtensionRange)*)_upb_Message_New(UPB_DESC(_DescriptorProto__ExtensionRange_msg_init)(), arena);
  if (!arr || !sub) return NULL;
  _upb_Array_Set(arr, arr->size - 1, &sub, sizeof(sub));
  return sub;
}
UPB_INLINE UPB_DESC(FieldDescriptorProto)** UPB_DESC(DescriptorProto_mutable_extension)(UPB_DESC(DescriptorProto)* msg, size_t* size) {
  upb_MiniTableField field = *upb_MiniTable_FindFieldByNumber(UPB_DESC(_DescriptorProto_msg_init)(), 6);
  upb_Array* arr = upb_Message_GetMutableArray(msg, &field);
  if (arr) {
    if (size) *size = arr->size;
    return (UPB_DESC(FieldDescriptorProto)**)_upb_array_ptr(arr);
  } else {
    if (size) *size = 0;
    return NULL;
  }
}
UPB_INLINE UPB_DESC(FieldDescriptorProto)** UPB_DESC(DescriptorProto_resize_extension)(UPB_DESC(DescriptorProto)* msg, size_t size, upb_Arena* arena) {
  upb_MiniTableField field = *upb_MiniTable_FindFieldByNumber(UPB_DESC(_DescriptorProto_msg_init)(), 6);
  return (UPB_DESC(FieldDescriptorProto)**)upb_Message_ResizeArrayUninitialized(msg, &field, size, arena);
}
UPB_INLINE struct UPB_DESC(FieldDescriptorProto)* UPB_DESC(DescriptorProto_add_extension)(UPB_DESC(DescriptorProto)* msg, upb_Arena* arena) {
  upb_MiniTableField field = *upb_MiniTable_FindFieldByNumber(UPB_DESC(_DescriptorProto_msg_init)(), 6);
  upb_Array* arr = upb_Message_GetOrCreateMutableArray(msg, &field, arena);
  if (!arr || !_upb_Array_ResizeUninitialized(arr, arr->size + 1, arena)) {
    return NULL;
  }
  struct UPB_DESC(FieldDescriptorProto)* sub = (struct UPB_DESC(FieldDescriptorProto)*)_upb_Message_New(UPB_DESC(_FieldDescriptorProto_msg_init)(), arena);
  if (!arr || !sub) return NULL;
  _upb_Array_Set(arr, arr->size - 1, &sub, sizeof(sub));
  return sub;
}
UPB_INLINE void UPB_DESC(DescriptorProto_set_options)(UPB_DESC(DescriptorProto) *msg, UPB_DESC(MessageOptions)* value) {
  const upb_MiniTableField field = *upb_MiniTable_FindFieldByNumber(UPB_DESC(_DescriptorProto_msg_init)(), 7);
  _upb_Message_SetNonExtensionField(msg, &field, &value);
}
UPB_INLINE struct UPB_DESC(MessageOptions)* UPB_DESC(DescriptorProto_mutable_options)(UPB_DESC(DescriptorProto)* msg, upb_Arena* arena) {
  struct UPB_DESC(MessageOptions)* sub = (struct UPB_DESC(MessageOptions)*)UPB_DESC(DescriptorProto_options)(msg);
  if (sub == NULL) {
    sub = (struct UPB_DESC(MessageOptions)*)_upb_Message_New(UPB_DESC(_MessageOptions_msg_init)(), arena);
    if (sub) UPB_DESC(DescriptorProto_set_options)(msg, sub);
  }
  return sub;
}
UPB_INLINE UPB_DESC(OneofDescriptorProto)** UPB_DESC(DescriptorProto_mutable_oneof_decl)(UPB_DESC(DescriptorProto)* msg, size_t* size) {
  upb_MiniTableField field = *upb_MiniTable_FindFieldByNumber(UPB_DESC(_DescriptorProto_msg_init)(), 8);
  upb_Array* arr = upb_Message_GetMutableArray(msg, &field);
  if (arr) {
    if (size) *size = arr->size;
    return (UPB_DESC(OneofDescriptorProto)**)_upb_array_ptr(arr);
  } else {
    if (size) *size = 0;
    return NULL;
  }
}
UPB_INLINE UPB_DESC(OneofDescriptorProto)** UPB_DESC(DescriptorProto_resize_oneof_decl)(UPB_DESC(DescriptorProto)* msg, size_t size, upb_Arena* arena) {
  upb_MiniTableField field = *upb_MiniTable_FindFieldByNumber(UPB_DESC(_DescriptorProto_msg_init)(), 8);
  return (UPB_DESC(OneofDescriptorProto)**)upb_Message_ResizeArrayUninitialized(msg, &field, size, arena);
}
UPB_INLINE struct UPB_DESC(OneofDescriptorProto)* UPB_DESC(DescriptorProto_add_oneof_decl)(UPB_DESC(DescriptorProto)* msg, upb_Arena* arena) {
  upb_MiniTableField field = *upb_MiniTable_FindFieldByNumber(UPB_DESC(_DescriptorProto_msg_init)(), 8);
  upb_Array* arr = upb_Message_GetOrCreateMutableArray(msg, &field, arena);
  if (!arr || !_upb_Array_ResizeUninitialized(arr, arr->size + 1, arena)) {
    return NULL;
  }
  struct UPB_DESC(OneofDescriptorProto)* sub = (struct UPB_DESC(OneofDescriptorProto)*)_upb_Message_New(UPB_DESC(_OneofDescriptorProto_msg_init)(), arena);
  if (!arr || !sub) return NULL;
  _upb_Array_Set(arr, arr->size - 1, &sub, sizeof(sub));
  return sub;
}
UPB_INLINE UPB_DESC(DescriptorProto_ReservedRange)** UPB_DESC(DescriptorProto_mutable_reserved_range)(UPB_DESC(DescriptorProto)* msg, size_t* size) {
  upb_MiniTableField field = *upb_MiniTable_FindFieldByNumber(UPB_DESC(_DescriptorProto_msg_init)(), 9);
  upb_Array* arr = upb_Message_GetMutableArray(msg, &field);
  if (arr) {
    if (size) *size = arr->size;
    return (UPB_DESC(DescriptorProto_ReservedRange)**)_upb_array_ptr(arr);
  } else {
    if (size) *size = 0;
    return NULL;
  }
}
UPB_INLINE UPB_DESC(DescriptorProto_ReservedRange)** UPB_DESC(DescriptorProto_resize_reserved_range)(UPB_DESC(DescriptorProto)* msg, size_t size, upb_Arena* arena) {
  upb_MiniTableField field = *upb_MiniTable_FindFieldByNumber(UPB_DESC(_DescriptorProto_msg_init)(), 9);
  return (UPB_DESC(DescriptorProto_ReservedRange)**)upb_Message_ResizeArrayUninitialized(msg, &field, size, arena);
}
UPB_INLINE struct UPB_DESC(DescriptorProto_ReservedRange)* UPB_DESC(DescriptorProto_add_reserved_range)(UPB_DESC(DescriptorProto)* msg, upb_Arena* arena) {
  upb_MiniTableField field = *upb_MiniTable_FindFieldByNumber(UPB_DESC(_DescriptorProto_msg_init)(), 9);
  upb_Array* arr = upb_Message_GetOrCreateMutableArray(msg, &field, arena);
  if (!arr || !_upb_Array_ResizeUninitialized(arr, arr->size + 1, arena)) {
    return NULL;
  }
  struct UPB_DESC(DescriptorProto_ReservedRange)* sub = (struct UPB_DESC(DescriptorProto_ReservedRange)*)_upb_Message_New(UPB_DESC(_DescriptorProto__ReservedRange_msg_init)(), arena);
  if (!arr || !sub) return NULL;
  _upb_Array_Set(arr, arr->size - 1, &sub, sizeof(sub));
  return sub;
}
UPB_INLINE upb_StringView* UPB_DESC(DescriptorProto_mutable_reserved_name)(UPB_DESC(DescriptorProto)* msg, size_t* size) {
  upb_MiniTableField field = *upb_MiniTable_FindFieldByNumber(UPB_DESC(_DescriptorProto_msg_init)(), 10);
  upb_Array* arr = upb_Message_GetMutableArray(msg, &field);
  if (arr) {
    if (size) *size = arr->size;
    return (upb_StringView*)_upb_array_ptr(arr);
  } else {
    if (size) *size = 0;
    return NULL;
  }
}
UPB_INLINE upb_StringView* UPB_DESC(DescriptorProto_resize_reserved_name)(UPB_DESC(DescriptorProto)* msg, size_t size, upb_Arena* arena) {
  upb_MiniTableField field = *upb_MiniTable_FindFieldByNumber(UPB_DESC(_DescriptorProto_msg_init)(), 10);
  return (upb_StringView*)upb_Message_ResizeArrayUninitialized(msg, &field, size, arena);
}
UPB_INLINE bool UPB_DESC(DescriptorProto_add_reserved_name)(UPB_DESC(DescriptorProto)* msg, upb_StringView val, upb_Arena* arena) {
  upb_MiniTableField field = *upb_MiniTable_FindFieldByNumber(UPB_DESC(_DescriptorProto_msg_init)(), 10);
  upb_Array* arr = upb_Message_GetOrCreateMutableArray(msg, &field, arena);
  if (!arr || !_upb_Array_ResizeUninitialized(arr, arr->size + 1, arena)) {
    return false;
  }
  _upb_Array_Set(arr, arr->size - 1, &val, sizeof(val));
  return true;
}

/* google.protobuf.DescriptorProto.ExtensionRange */

UPB_INLINE UPB_DESC(DescriptorProto_ExtensionRange)* UPB_DESC(DescriptorProto_ExtensionRange_new)(upb_Arena* arena) {
  return (UPB_DESC(DescriptorProto_ExtensionRange)*)_upb_Message_New(UPB_DESC(_DescriptorProto__ExtensionRange_msg_init)(), arena);
}
UPB_INLINE UPB_DESC(DescriptorProto_ExtensionRange)* UPB_DESC(DescriptorProto_ExtensionRange_parse)(const char* buf, size_t size, upb_Arena* arena) {
  UPB_DESC(DescriptorProto_ExtensionRange)* ret = UPB_DESC(DescriptorProto_ExtensionRange_new)(arena);
  if (!ret) return NULL;
  if (upb_Decode(buf, size, ret, UPB_DESC(_DescriptorProto__ExtensionRange_msg_init)(), NULL, 0, arena) != kUpb_DecodeStatus_Ok) {
    return NULL;
  }
  return ret;
}
UPB_INLINE UPB_DESC(DescriptorProto_ExtensionRange)* UPB_DESC(DescriptorProto_ExtensionRange_parse_ex)(const char* buf, size_t size,
                           const upb_ExtensionRegistry* extreg,
                           int options, upb_Arena* arena) {
  UPB_DESC(DescriptorProto_ExtensionRange)* ret = UPB_DESC(DescriptorProto_ExtensionRange_new)(arena);
  if (!ret) return NULL;
  if (upb_Decode(buf, size, ret, UPB_DESC(_DescriptorProto__ExtensionRange_msg_init)(), extreg, options, arena) !=
      kUpb_DecodeStatus_Ok) {
    return NULL;
  }
  return ret;
}
UPB_INLINE char* UPB_DESC(DescriptorProto_ExtensionRange_serialize)(const UPB_DESC(DescriptorProto_ExtensionRange)* msg, upb_Arena* arena, size_t* len) {
  char* ptr;
  (void)upb_Encode(msg, UPB_DESC(_DescriptorProto__ExtensionRange_msg_init)(), 0, arena, &ptr, len);
  return ptr;
}
UPB_INLINE char* UPB_DESC(DescriptorProto_ExtensionRange_serialize_ex)(const UPB_DESC(DescriptorProto_ExtensionRange)* msg, int options,
                                 upb_Arena* arena, size_t* len) {
  char* ptr;
  (void)upb_Encode(msg, UPB_DESC(_DescriptorProto__ExtensionRange_msg_init)(), options, arena, &ptr, len);
  return ptr;
}
UPB_INLINE void UPB_DESC(DescriptorProto_ExtensionRange_clear_start)(UPB_DESC(DescriptorProto_ExtensionRange)* msg) {
  const upb_MiniTableField field = *upb_MiniTable_FindFieldByNumber(UPB_DESC(_DescriptorProto__ExtensionRange_msg_init)(), 1);
  _upb_Message_ClearNonExtensionField(msg, &field);
}
UPB_INLINE int32_t UPB_DESC(DescriptorProto_ExtensionRange_start)(const UPB_DESC(DescriptorProto_ExtensionRange)* msg) {
  int32_t default_val = (int32_t)0;
  int32_t ret;
  const upb_MiniTableField field = *upb_MiniTable_FindFieldByNumber(UPB_DESC(_DescriptorProto__ExtensionRange_msg_init)(), 1);
  _upb_Message_GetNonExtensionField(msg, &field, &default_val, &ret);
  return ret;
}
UPB_INLINE bool UPB_DESC(DescriptorProto_ExtensionRange_has_start)(const UPB_DESC(DescriptorProto_ExtensionRange)* msg) {
  const upb_MiniTableField field = *upb_MiniTable_FindFieldByNumber(UPB_DESC(_DescriptorProto__ExtensionRange_msg_init)(), 1);
  return _upb_Message_HasNonExtensionField(msg, &field);
}
UPB_INLINE void UPB_DESC(DescriptorProto_ExtensionRange_clear_end)(UPB_DESC(DescriptorProto_ExtensionRange)* msg) {
  const upb_MiniTableField field = *upb_MiniTable_FindFieldByNumber(UPB_DESC(_DescriptorProto__ExtensionRange_msg_init)(), 2);
  _upb_Message_ClearNonExtensionField(msg, &field);
}
UPB_INLINE int32_t UPB_DESC(DescriptorProto_ExtensionRange_end)(const UPB_DESC(DescriptorProto_ExtensionRange)* msg) {
  int32_t default_val = (int32_t)0;
  int32_t ret;
  const upb_MiniTableField field = *upb_MiniTable_FindFieldByNumber(UPB_DESC(_DescriptorProto__ExtensionRange_msg_init)(), 2);
  _upb_Message_GetNonExtensionField(msg, &field, &default_val, &ret);
  return ret;
}
UPB_INLINE bool UPB_DESC(DescriptorProto_ExtensionRange_has_end)(const UPB_DESC(DescriptorProto_ExtensionRange)* msg) {
  const upb_MiniTableField field = *upb_MiniTable_FindFieldByNumber(UPB_DESC(_DescriptorProto__ExtensionRange_msg_init)(), 2);
  return _upb_Message_HasNonExtensionField(msg, &field);
}
UPB_INLINE void UPB_DESC(DescriptorProto_ExtensionRange_clear_options)(UPB_DESC(DescriptorProto_ExtensionRange)* msg) {
  const upb_MiniTableField field = *upb_MiniTable_FindFieldByNumber(UPB_DESC(_DescriptorProto__ExtensionRange_msg_init)(), 3);
  _upb_Message_ClearNonExtensionField(msg, &field);
}
UPB_INLINE const UPB_DESC(ExtensionRangeOptions)* UPB_DESC(DescriptorProto_ExtensionRange_options)(const UPB_DESC(DescriptorProto_ExtensionRange)* msg) {
  const UPB_DESC(ExtensionRangeOptions)* default_val = NULL;
  const UPB_DESC(ExtensionRangeOptions)* ret;
  const upb_MiniTableField field = *upb_MiniTable_FindFieldByNumber(UPB_DESC(_DescriptorProto__ExtensionRange_msg_init)(), 3);
  _upb_Message_GetNonExtensionField(msg, &field, &default_val, &ret);
  return ret;
}
UPB_INLINE bool UPB_DESC(DescriptorProto_ExtensionRange_has_options)(const UPB_DESC(DescriptorProto_ExtensionRange)* msg) {
  const upb_MiniTableField field = *upb_MiniTable_FindFieldByNumber(UPB_DESC(_DescriptorProto__ExtensionRange_msg_init)(), 3);
  return _upb_Message_HasNonExtensionField(msg, &field);
}

UPB_INLINE void UPB_DESC(DescriptorProto_ExtensionRange_set_start)(UPB_DESC(DescriptorProto_ExtensionRange) *msg, int32_t value) {
  const upb_MiniTableField field = *upb_MiniTable_FindFieldByNumber(UPB_DESC(_DescriptorProto__ExtensionRange_msg_init)(), 1);
  _upb_Message_SetNonExtensionField(msg, &field, &value);
}
UPB_INLINE void UPB_DESC(DescriptorProto_ExtensionRange_set_end)(UPB_DESC(DescriptorProto_ExtensionRange) *msg, int32_t value) {
  const upb_MiniTableField field = *upb_MiniTable_FindFieldByNumber(UPB_DESC(_DescriptorProto__ExtensionRange_msg_init)(), 2);
  _upb_Message_SetNonExtensionField(msg, &field, &value);
}
UPB_INLINE void UPB_DESC(DescriptorProto_ExtensionRange_set_options)(UPB_DESC(DescriptorProto_ExtensionRange) *msg, UPB_DESC(ExtensionRangeOptions)* value) {
  const upb_MiniTableField field = *upb_MiniTable_FindFieldByNumber(UPB_DESC(_DescriptorProto__ExtensionRange_msg_init)(), 3);
  _upb_Message_SetNonExtensionField(msg, &field, &value);
}
UPB_INLINE struct UPB_DESC(ExtensionRangeOptions)* UPB_DESC(DescriptorProto_ExtensionRange_mutable_options)(UPB_DESC(DescriptorProto_ExtensionRange)* msg, upb_Arena* arena) {
  struct UPB_DESC(ExtensionRangeOptions)* sub = (struct UPB_DESC(ExtensionRangeOptions)*)UPB_DESC(DescriptorProto_ExtensionRange_options)(msg);
  if (sub == NULL) {
    sub = (struct UPB_DESC(ExtensionRangeOptions)*)_upb_Message_New(UPB_DESC(_ExtensionRangeOptions_msg_init)(), arena);
    if (sub) UPB_DESC(DescriptorProto_ExtensionRange_set_options)(msg, sub);
  }
  return sub;
}

/* google.protobuf.DescriptorProto.ReservedRange */

UPB_INLINE UPB_DESC(DescriptorProto_ReservedRange)* UPB_DESC(DescriptorProto_ReservedRange_new)(upb_Arena* arena) {
  return (UPB_DESC(DescriptorProto_ReservedRange)*)_upb_Message_New(UPB_DESC(_DescriptorProto__ReservedRange_msg_init)(), arena);
}
UPB_INLINE UPB_DESC(DescriptorProto_ReservedRange)* UPB_DESC(DescriptorProto_ReservedRange_parse)(const char* buf, size_t size, upb_Arena* arena) {
  UPB_DESC(DescriptorProto_ReservedRange)* ret = UPB_DESC(DescriptorProto_ReservedRange_new)(arena);
  if (!ret) return NULL;
  if (upb_Decode(buf, size, ret, UPB_DESC(_DescriptorProto__ReservedRange_msg_init)(), NULL, 0, arena) != kUpb_DecodeStatus_Ok) {
    return NULL;
  }
  return ret;
}
UPB_INLINE UPB_DESC(DescriptorProto_ReservedRange)* UPB_DESC(DescriptorProto_ReservedRange_parse_ex)(const char* buf, size_t size,
                           const upb_ExtensionRegistry* extreg,
                           int options, upb_Arena* arena) {
  UPB_DESC(DescriptorProto_ReservedRange)* ret = UPB_DESC(DescriptorProto_ReservedRange_new)(arena);
  if (!ret) return NULL;
  if (upb_Decode(buf, size, ret, UPB_DESC(_DescriptorProto__ReservedRange_msg_init)(), extreg, options, arena) !=
      kUpb_DecodeStatus_Ok) {
    return NULL;
  }
  return ret;
}
UPB_INLINE char* UPB_DESC(DescriptorProto_ReservedRange_serialize)(const UPB_DESC(DescriptorProto_ReservedRange)* msg, upb_Arena* arena, size_t* len) {
  char* ptr;
  (void)upb_Encode(msg, UPB_DESC(_DescriptorProto__ReservedRange_msg_init)(), 0, arena, &ptr, len);
  return ptr;
}
UPB_INLINE char* UPB_DESC(DescriptorProto_ReservedRange_serialize_ex)(const UPB_DESC(DescriptorProto_ReservedRange)* msg, int options,
                                 upb_Arena* arena, size_t* len) {
  char* ptr;
  (void)upb_Encode(msg, UPB_DESC(_DescriptorProto__ReservedRange_msg_init)(), options, arena, &ptr, len);
  return ptr;
}
UPB_INLINE void UPB_DESC(DescriptorProto_ReservedRange_clear_start)(UPB_DESC(DescriptorProto_ReservedRange)* msg) {
  const upb_MiniTableField field = *upb_MiniTable_FindFieldByNumber(UPB_DESC(_DescriptorProto__ReservedRange_msg_init)(), 1);
  _upb_Message_ClearNonExtensionField(msg, &field);
}
UPB_INLINE int32_t UPB_DESC(DescriptorProto_ReservedRange_start)(const UPB_DESC(DescriptorProto_ReservedRange)* msg) {
  int32_t default_val = (int32_t)0;
  int32_t ret;
  const upb_MiniTableField field = *upb_MiniTable_FindFieldByNumber(UPB_DESC(_DescriptorProto__ReservedRange_msg_init)(), 1);
  _upb_Message_GetNonExtensionField(msg, &field, &default_val, &ret);
  return ret;
}
UPB_INLINE bool UPB_DESC(DescriptorProto_ReservedRange_has_start)(const UPB_DESC(DescriptorProto_ReservedRange)* msg) {
  const upb_MiniTableField field = *upb_MiniTable_FindFieldByNumber(UPB_DESC(_DescriptorProto__ReservedRange_msg_init)(), 1);
  return _upb_Message_HasNonExtensionField(msg, &field);
}
UPB_INLINE void UPB_DESC(DescriptorProto_ReservedRange_clear_end)(UPB_DESC(DescriptorProto_ReservedRange)* msg) {
  const upb_MiniTableField field = *upb_MiniTable_FindFieldByNumber(UPB_DESC(_DescriptorProto__ReservedRange_msg_init)(), 2);
  _upb_Message_ClearNonExtensionField(msg, &field);
}
UPB_INLINE int32_t UPB_DESC(DescriptorProto_ReservedRange_end)(const UPB_DESC(DescriptorProto_ReservedRange)* msg) {
  int32_t default_val = (int32_t)0;
  int32_t ret;
  const upb_MiniTableField field = *upb_MiniTable_FindFieldByNumber(UPB_DESC(_DescriptorProto__ReservedRange_msg_init)(), 2);
  _upb_Message_GetNonExtensionField(msg, &field, &default_val, &ret);
  return ret;
}
UPB_INLINE bool UPB_DESC(DescriptorProto_ReservedRange_has_end)(const UPB_DESC(DescriptorProto_ReservedRange)* msg) {
  const upb_MiniTableField field = *upb_MiniTable_FindFieldByNumber(UPB_DESC(_DescriptorProto__ReservedRange_msg_init)(), 2);
  return _upb_Message_HasNonExtensionField(msg, &field);
}

UPB_INLINE void UPB_DESC(DescriptorProto_ReservedRange_set_start)(UPB_DESC(DescriptorProto_ReservedRange) *msg, int32_t value) {
  const upb_MiniTableField field = *upb_MiniTable_FindFieldByNumber(UPB_DESC(_DescriptorProto__ReservedRange_msg_init)(), 1);
  _upb_Message_SetNonExtensionField(msg, &field, &value);
}
UPB_INLINE void UPB_DESC(DescriptorProto_ReservedRange_set_end)(UPB_DESC(DescriptorProto_ReservedRange) *msg, int32_t value) {
  const upb_MiniTableField field = *upb_MiniTable_FindFieldByNumber(UPB_DESC(_DescriptorProto__ReservedRange_msg_init)(), 2);
  _upb_Message_SetNonExtensionField(msg, &field, &value);
}

/* google.protobuf.ExtensionRangeOptions */

UPB_INLINE UPB_DESC(ExtensionRangeOptions)* UPB_DESC(ExtensionRangeOptions_new)(upb_Arena* arena) {
  return (UPB_DESC(ExtensionRangeOptions)*)_upb_Message_New(UPB_DESC(_ExtensionRangeOptions_msg_init)(), arena);
}
UPB_INLINE UPB_DESC(ExtensionRangeOptions)* UPB_DESC(ExtensionRangeOptions_parse)(const char* buf, size_t size, upb_Arena* arena) {
  UPB_DESC(ExtensionRangeOptions)* ret = UPB_DESC(ExtensionRangeOptions_new)(arena);
  if (!ret) return NULL;
  if (upb_Decode(buf, size, ret, UPB_DESC(_ExtensionRangeOptions_msg_init)(), NULL, 0, arena) != kUpb_DecodeStatus_Ok) {
    return NULL;
  }
  return ret;
}
UPB_INLINE UPB_DESC(ExtensionRangeOptions)* UPB_DESC(ExtensionRangeOptions_parse_ex)(const char* buf, size_t size,
                           const upb_ExtensionRegistry* extreg,
                           int options, upb_Arena* arena) {
  UPB_DESC(ExtensionRangeOptions)* ret = UPB_DESC(ExtensionRangeOptions_new)(arena);
  if (!ret) return NULL;
  if (upb_Decode(buf, size, ret, UPB_DESC(_ExtensionRangeOptions_msg_init)(), extreg, options, arena) !=
      kUpb_DecodeStatus_Ok) {
    return NULL;
  }
  return ret;
}
UPB_INLINE char* UPB_DESC(ExtensionRangeOptions_serialize)(const UPB_DESC(ExtensionRangeOptions)* msg, upb_Arena* arena, size_t* len) {
  char* ptr;
  (void)upb_Encode(msg, UPB_DESC(_ExtensionRangeOptions_msg_init)(), 0, arena, &ptr, len);
  return ptr;
}
UPB_INLINE char* UPB_DESC(ExtensionRangeOptions_serialize_ex)(const UPB_DESC(ExtensionRangeOptions)* msg, int options,
                                 upb_Arena* arena, size_t* len) {
  char* ptr;
  (void)upb_Encode(msg, UPB_DESC(_ExtensionRangeOptions_msg_init)(), options, arena, &ptr, len);
  return ptr;
}
UPB_INLINE void UPB_DESC(ExtensionRangeOptions_clear_declaration)(UPB_DESC(ExtensionRangeOptions)* msg) {
  const upb_MiniTableField field = *upb_MiniTable_FindFieldByNumber(UPB_DESC(_ExtensionRangeOptions_msg_init)(), 2);
  _upb_Message_ClearNonExtensionField(msg, &field);
}
UPB_INLINE const UPB_DESC(ExtensionRangeOptions_Declaration)* const* UPB_DESC(ExtensionRangeOptions_declaration)(const UPB_DESC(ExtensionRangeOptions)* msg, size_t* size) {
  const upb_MiniTableField field = *upb_MiniTable_FindFieldByNumber(UPB_DESC(_ExtensionRangeOptions_msg_init)(), 2);
  const upb_Array* arr = upb_Message_GetArray(msg, &field);
  if (arr) {
    if (size) *size = arr->size;
    return (const UPB_DESC(ExtensionRangeOptions_Declaration)* const*)_upb_array_constptr(arr);
  } else {
    if (size) *size = 0;
    return NULL;
  }
}
UPB_INLINE const upb_Array* _google_protobuf_ExtensionRangeOptions_declaration_upb_array(const UPB_DESC(ExtensionRangeOptions)* msg, size_t* size) {
  const upb_MiniTableField field = *upb_MiniTable_FindFieldByNumber(UPB_DESC(_ExtensionRangeOptions_msg_init)(), 2);
  const upb_Array* arr = upb_Message_GetArray(msg, &field);
  if (size) {
    *size = arr ? arr->size : 0;
  }
  return arr;
}
UPB_INLINE upb_Array* _google_protobuf_ExtensionRangeOptions_declaration_mutable_upb_array(const UPB_DESC(ExtensionRangeOptions)* msg, size_t* size, upb_Arena* arena) {
  const upb_MiniTableField field = *upb_MiniTable_FindFieldByNumber(UPB_DESC(_ExtensionRangeOptions_msg_init)(), 2);
  upb_Array* arr = upb_Message_GetOrCreateMutableArray(
      (upb_Message*)msg, &field, arena);
  if (size) {
    *size = arr ? arr->size : 0;
  }
  return arr;
}
UPB_INLINE bool UPB_DESC(ExtensionRangeOptions_has_declaration)(const UPB_DESC(ExtensionRangeOptions)* msg) {
  size_t size;
  UPB_DESC(ExtensionRangeOptions_declaration)(msg, &size);
  return size != 0;
}
UPB_INLINE void UPB_DESC(ExtensionRangeOptions_clear_verification)(UPB_DESC(ExtensionRangeOptions)* msg) {
  const upb_MiniTableField field = *upb_MiniTable_FindFieldByNumber(UPB_DESC(_ExtensionRangeOptions_msg_init)(), 3);
  _upb_Message_ClearNonExtensionField(msg, &field);
}
UPB_INLINE int32_t UPB_DESC(ExtensionRangeOptions_verification)(const UPB_DESC(ExtensionRangeOptions)* msg) {
  int32_t default_val = 1;
  int32_t ret;
  const upb_MiniTableField field = *upb_MiniTable_FindFieldByNumber(UPB_DESC(_ExtensionRangeOptions_msg_init)(), 3);
  _upb_Message_GetNonExtensionField(msg, &field, &default_val, &ret);
  return ret;
}
UPB_INLINE bool UPB_DESC(ExtensionRangeOptions_has_verification)(const UPB_DESC(ExtensionRangeOptions)* msg) {
  const upb_MiniTableField field = *upb_MiniTable_FindFieldByNumber(UPB_DESC(_ExtensionRangeOptions_msg_init)(), 3);
  return _upb_Message_HasNonExtensionField(msg, &field);
}
UPB_INLINE void UPB_DESC(ExtensionRangeOptions_clear_features)(UPB_DESC(ExtensionRangeOptions)* msg) {
  const upb_MiniTableField field = *upb_MiniTable_FindFieldByNumber(UPB_DESC(_ExtensionRangeOptions_msg_init)(), 50);
  _upb_Message_ClearNonExtensionField(msg, &field);
}
UPB_INLINE const UPB_DESC(FeatureSet)* UPB_DESC(ExtensionRangeOptions_features)(const UPB_DESC(ExtensionRangeOptions)* msg) {
  const UPB_DESC(FeatureSet)* default_val = NULL;
  const UPB_DESC(FeatureSet)* ret;
  const upb_MiniTableField field = *upb_MiniTable_FindFieldByNumber(UPB_DESC(_ExtensionRangeOptions_msg_init)(), 50);
  _upb_Message_GetNonExtensionField(msg, &field, &default_val, &ret);
  return ret;
}
UPB_INLINE bool UPB_DESC(ExtensionRangeOptions_has_features)(const UPB_DESC(ExtensionRangeOptions)* msg) {
  const upb_MiniTableField field = *upb_MiniTable_FindFieldByNumber(UPB_DESC(_ExtensionRangeOptions_msg_init)(), 50);
  return _upb_Message_HasNonExtensionField(msg, &field);
}
UPB_INLINE void UPB_DESC(ExtensionRangeOptions_clear_uninterpreted_option)(UPB_DESC(ExtensionRangeOptions)* msg) {
  const upb_MiniTableField field = *upb_MiniTable_FindFieldByNumber(UPB_DESC(_ExtensionRangeOptions_msg_init)(), 999);
  _upb_Message_ClearNonExtensionField(msg, &field);
}
UPB_INLINE const UPB_DESC(UninterpretedOption)* const* UPB_DESC(ExtensionRangeOptions_uninterpreted_option)(const UPB_DESC(ExtensionRangeOptions)* msg, size_t* size) {
  const upb_MiniTableField field = *upb_MiniTable_FindFieldByNumber(UPB_DESC(_ExtensionRangeOptions_msg_init)(), 999);
  const upb_Array* arr = upb_Message_GetArray(msg, &field);
  if (arr) {
    if (size) *size = arr->size;
    return (const UPB_DESC(UninterpretedOption)* const*)_upb_array_constptr(arr);
  } else {
    if (size) *size = 0;
    return NULL;
  }
}
UPB_INLINE const upb_Array* _google_protobuf_ExtensionRangeOptions_uninterpreted_option_upb_array(const UPB_DESC(ExtensionRangeOptions)* msg, size_t* size) {
  const upb_MiniTableField field = *upb_MiniTable_FindFieldByNumber(UPB_DESC(_ExtensionRangeOptions_msg_init)(), 999);
  const upb_Array* arr = upb_Message_GetArray(msg, &field);
  if (size) {
    *size = arr ? arr->size : 0;
  }
  return arr;
}
UPB_INLINE upb_Array* _google_protobuf_ExtensionRangeOptions_uninterpreted_option_mutable_upb_array(const UPB_DESC(ExtensionRangeOptions)* msg, size_t* size, upb_Arena* arena) {
  const upb_MiniTableField field = *upb_MiniTable_FindFieldByNumber(UPB_DESC(_ExtensionRangeOptions_msg_init)(), 999);
  upb_Array* arr = upb_Message_GetOrCreateMutableArray(
      (upb_Message*)msg, &field, arena);
  if (size) {
    *size = arr ? arr->size : 0;
  }
  return arr;
}
UPB_INLINE bool UPB_DESC(ExtensionRangeOptions_has_uninterpreted_option)(const UPB_DESC(ExtensionRangeOptions)* msg) {
  size_t size;
  UPB_DESC(ExtensionRangeOptions_uninterpreted_option)(msg, &size);
  return size != 0;
}

UPB_INLINE UPB_DESC(ExtensionRangeOptions_Declaration)** UPB_DESC(ExtensionRangeOptions_mutable_declaration)(UPB_DESC(ExtensionRangeOptions)* msg, size_t* size) {
  upb_MiniTableField field = *upb_MiniTable_FindFieldByNumber(UPB_DESC(_ExtensionRangeOptions_msg_init)(), 2);
  upb_Array* arr = upb_Message_GetMutableArray(msg, &field);
  if (arr) {
    if (size) *size = arr->size;
    return (UPB_DESC(ExtensionRangeOptions_Declaration)**)_upb_array_ptr(arr);
  } else {
    if (size) *size = 0;
    return NULL;
  }
}
UPB_INLINE UPB_DESC(ExtensionRangeOptions_Declaration)** UPB_DESC(ExtensionRangeOptions_resize_declaration)(UPB_DESC(ExtensionRangeOptions)* msg, size_t size, upb_Arena* arena) {
  upb_MiniTableField field = *upb_MiniTable_FindFieldByNumber(UPB_DESC(_ExtensionRangeOptions_msg_init)(), 2);
  return (UPB_DESC(ExtensionRangeOptions_Declaration)**)upb_Message_ResizeArrayUninitialized(msg, &field, size, arena);
}
UPB_INLINE struct UPB_DESC(ExtensionRangeOptions_Declaration)* UPB_DESC(ExtensionRangeOptions_add_declaration)(UPB_DESC(ExtensionRangeOptions)* msg, upb_Arena* arena) {
  upb_MiniTableField field = *upb_MiniTable_FindFieldByNumber(UPB_DESC(_ExtensionRangeOptions_msg_init)(), 2);
  upb_Array* arr = upb_Message_GetOrCreateMutableArray(msg, &field, arena);
  if (!arr || !_upb_Array_ResizeUninitialized(arr, arr->size + 1, arena)) {
    return NULL;
  }
  struct UPB_DESC(ExtensionRangeOptions_Declaration)* sub = (struct UPB_DESC(ExtensionRangeOptions_Declaration)*)_upb_Message_New(UPB_DESC(_ExtensionRangeOptions__Declaration_msg_init)(), arena);
  if (!arr || !sub) return NULL;
  _upb_Array_Set(arr, arr->size - 1, &sub, sizeof(sub));
  return sub;
}
UPB_INLINE void UPB_DESC(ExtensionRangeOptions_set_verification)(UPB_DESC(ExtensionRangeOptions) *msg, int32_t value) {
  const upb_MiniTableField field = *upb_MiniTable_FindFieldByNumber(UPB_DESC(_ExtensionRangeOptions_msg_init)(), 3);
  _upb_Message_SetNonExtensionField(msg, &field, &value);
}
UPB_INLINE void UPB_DESC(ExtensionRangeOptions_set_features)(UPB_DESC(ExtensionRangeOptions) *msg, UPB_DESC(FeatureSet)* value) {
  const upb_MiniTableField field = *upb_MiniTable_FindFieldByNumber(UPB_DESC(_ExtensionRangeOptions_msg_init)(), 50);
  _upb_Message_SetNonExtensionField(msg, &field, &value);
}
UPB_INLINE struct UPB_DESC(FeatureSet)* UPB_DESC(ExtensionRangeOptions_mutable_features)(UPB_DESC(ExtensionRangeOptions)* msg, upb_Arena* arena) {
  struct UPB_DESC(FeatureSet)* sub = (struct UPB_DESC(FeatureSet)*)UPB_DESC(ExtensionRangeOptions_features)(msg);
  if (sub == NULL) {
    sub = (struct UPB_DESC(FeatureSet)*)_upb_Message_New(UPB_DESC(_FeatureSet_msg_init)(), arena);
    if (sub) UPB_DESC(ExtensionRangeOptions_set_features)(msg, sub);
  }
  return sub;
}
UPB_INLINE UPB_DESC(UninterpretedOption)** UPB_DESC(ExtensionRangeOptions_mutable_uninterpreted_option)(UPB_DESC(ExtensionRangeOptions)* msg, size_t* size) {
  upb_MiniTableField field = *upb_MiniTable_FindFieldByNumber(UPB_DESC(_ExtensionRangeOptions_msg_init)(), 999);
  upb_Array* arr = upb_Message_GetMutableArray(msg, &field);
  if (arr) {
    if (size) *size = arr->size;
    return (UPB_DESC(UninterpretedOption)**)_upb_array_ptr(arr);
  } else {
    if (size) *size = 0;
    return NULL;
  }
}
UPB_INLINE UPB_DESC(UninterpretedOption)** UPB_DESC(ExtensionRangeOptions_resize_uninterpreted_option)(UPB_DESC(ExtensionRangeOptions)* msg, size_t size, upb_Arena* arena) {
  upb_MiniTableField field = *upb_MiniTable_FindFieldByNumber(UPB_DESC(_ExtensionRangeOptions_msg_init)(), 999);
  return (UPB_DESC(UninterpretedOption)**)upb_Message_ResizeArrayUninitialized(msg, &field, size, arena);
}
UPB_INLINE struct UPB_DESC(UninterpretedOption)* UPB_DESC(ExtensionRangeOptions_add_uninterpreted_option)(UPB_DESC(ExtensionRangeOptions)* msg, upb_Arena* arena) {
  upb_MiniTableField field = *upb_MiniTable_FindFieldByNumber(UPB_DESC(_ExtensionRangeOptions_msg_init)(), 999);
  upb_Array* arr = upb_Message_GetOrCreateMutableArray(msg, &field, arena);
  if (!arr || !_upb_Array_ResizeUninitialized(arr, arr->size + 1, arena)) {
    return NULL;
  }
  struct UPB_DESC(UninterpretedOption)* sub = (struct UPB_DESC(UninterpretedOption)*)_upb_Message_New(UPB_DESC(_UninterpretedOption_msg_init)(), arena);
  if (!arr || !sub) return NULL;
  _upb_Array_Set(arr, arr->size - 1, &sub, sizeof(sub));
  return sub;
}

/* google.protobuf.ExtensionRangeOptions.Declaration */

UPB_INLINE UPB_DESC(ExtensionRangeOptions_Declaration)* UPB_DESC(ExtensionRangeOptions_Declaration_new)(upb_Arena* arena) {
  return (UPB_DESC(ExtensionRangeOptions_Declaration)*)_upb_Message_New(UPB_DESC(_ExtensionRangeOptions__Declaration_msg_init)(), arena);
}
UPB_INLINE UPB_DESC(ExtensionRangeOptions_Declaration)* UPB_DESC(ExtensionRangeOptions_Declaration_parse)(const char* buf, size_t size, upb_Arena* arena) {
  UPB_DESC(ExtensionRangeOptions_Declaration)* ret = UPB_DESC(ExtensionRangeOptions_Declaration_new)(arena);
  if (!ret) return NULL;
  if (upb_Decode(buf, size, ret, UPB_DESC(_ExtensionRangeOptions__Declaration_msg_init)(), NULL, 0, arena) != kUpb_DecodeStatus_Ok) {
    return NULL;
  }
  return ret;
}
UPB_INLINE UPB_DESC(ExtensionRangeOptions_Declaration)* UPB_DESC(ExtensionRangeOptions_Declaration_parse_ex)(const char* buf, size_t size,
                           const upb_ExtensionRegistry* extreg,
                           int options, upb_Arena* arena) {
  UPB_DESC(ExtensionRangeOptions_Declaration)* ret = UPB_DESC(ExtensionRangeOptions_Declaration_new)(arena);
  if (!ret) return NULL;
  if (upb_Decode(buf, size, ret, UPB_DESC(_ExtensionRangeOptions__Declaration_msg_init)(), extreg, options, arena) !=
      kUpb_DecodeStatus_Ok) {
    return NULL;
  }
  return ret;
}
UPB_INLINE char* UPB_DESC(ExtensionRangeOptions_Declaration_serialize)(const UPB_DESC(ExtensionRangeOptions_Declaration)* msg, upb_Arena* arena, size_t* len) {
  char* ptr;
  (void)upb_Encode(msg, UPB_DESC(_ExtensionRangeOptions__Declaration_msg_init)(), 0, arena, &ptr, len);
  return ptr;
}
UPB_INLINE char* UPB_DESC(ExtensionRangeOptions_Declaration_serialize_ex)(const UPB_DESC(ExtensionRangeOptions_Declaration)* msg, int options,
                                 upb_Arena* arena, size_t* len) {
  char* ptr;
  (void)upb_Encode(msg, UPB_DESC(_ExtensionRangeOptions__Declaration_msg_init)(), options, arena, &ptr, len);
  return ptr;
}
UPB_INLINE void UPB_DESC(ExtensionRangeOptions_Declaration_clear_number)(UPB_DESC(ExtensionRangeOptions_Declaration)* msg) {
  const upb_MiniTableField field = *upb_MiniTable_FindFieldByNumber(UPB_DESC(_ExtensionRangeOptions__Declaration_msg_init)(), 1);
  _upb_Message_ClearNonExtensionField(msg, &field);
}
UPB_INLINE int32_t UPB_DESC(ExtensionRangeOptions_Declaration_number)(const UPB_DESC(ExtensionRangeOptions_Declaration)* msg) {
  int32_t default_val = (int32_t)0;
  int32_t ret;
  const upb_MiniTableField field = *upb_MiniTable_FindFieldByNumber(UPB_DESC(_ExtensionRangeOptions__Declaration_msg_init)(), 1);
  _upb_Message_GetNonExtensionField(msg, &field, &default_val, &ret);
  return ret;
}
UPB_INLINE bool UPB_DESC(ExtensionRangeOptions_Declaration_has_number)(const UPB_DESC(ExtensionRangeOptions_Declaration)* msg) {
  const upb_MiniTableField field = *upb_MiniTable_FindFieldByNumber(UPB_DESC(_ExtensionRangeOptions__Declaration_msg_init)(), 1);
  return _upb_Message_HasNonExtensionField(msg, &field);
}
UPB_INLINE void UPB_DESC(ExtensionRangeOptions_Declaration_clear_full_name)(UPB_DESC(ExtensionRangeOptions_Declaration)* msg) {
  const upb_MiniTableField field = *upb_MiniTable_FindFieldByNumber(UPB_DESC(_ExtensionRangeOptions__Declaration_msg_init)(), 2);
  _upb_Message_ClearNonExtensionField(msg, &field);
}
UPB_INLINE upb_StringView UPB_DESC(ExtensionRangeOptions_Declaration_full_name)(const UPB_DESC(ExtensionRangeOptions_Declaration)* msg) {
  upb_StringView default_val = upb_StringView_FromString("");
  upb_StringView ret;
  const upb_MiniTableField field = *upb_MiniTable_FindFieldByNumber(UPB_DESC(_ExtensionRangeOptions__Declaration_msg_init)(), 2);
  _upb_Message_GetNonExtensionField(msg, &field, &default_val, &ret);
  return ret;
}
UPB_INLINE bool UPB_DESC(ExtensionRangeOptions_Declaration_has_full_name)(const UPB_DESC(ExtensionRangeOptions_Declaration)* msg) {
  const upb_MiniTableField field = *upb_MiniTable_FindFieldByNumber(UPB_DESC(_ExtensionRangeOptions__Declaration_msg_init)(), 2);
  return _upb_Message_HasNonExtensionField(msg, &field);
}
UPB_INLINE void UPB_DESC(ExtensionRangeOptions_Declaration_clear_type)(UPB_DESC(ExtensionRangeOptions_Declaration)* msg) {
  const upb_MiniTableField field = *upb_MiniTable_FindFieldByNumber(UPB_DESC(_ExtensionRangeOptions__Declaration_msg_init)(), 3);
  _upb_Message_ClearNonExtensionField(msg, &field);
}
UPB_INLINE upb_StringView UPB_DESC(ExtensionRangeOptions_Declaration_type)(const UPB_DESC(ExtensionRangeOptions_Declaration)* msg) {
  upb_StringView default_val = upb_StringView_FromString("");
  upb_StringView ret;
  const upb_MiniTableField field = *upb_MiniTable_FindFieldByNumber(UPB_DESC(_ExtensionRangeOptions__Declaration_msg_init)(), 3);
  _upb_Message_GetNonExtensionField(msg, &field, &default_val, &ret);
  return ret;
}
UPB_INLINE bool UPB_DESC(ExtensionRangeOptions_Declaration_has_type)(const UPB_DESC(ExtensionRangeOptions_Declaration)* msg) {
  const upb_MiniTableField field = *upb_MiniTable_FindFieldByNumber(UPB_DESC(_ExtensionRangeOptions__Declaration_msg_init)(), 3);
  return _upb_Message_HasNonExtensionField(msg, &field);
}
UPB_INLINE void UPB_DESC(ExtensionRangeOptions_Declaration_clear_reserved)(UPB_DESC(ExtensionRangeOptions_Declaration)* msg) {
  const upb_MiniTableField field = *upb_MiniTable_FindFieldByNumber(UPB_DESC(_ExtensionRangeOptions__Declaration_msg_init)(), 5);
  _upb_Message_ClearNonExtensionField(msg, &field);
}
UPB_INLINE bool UPB_DESC(ExtensionRangeOptions_Declaration_reserved)(const UPB_DESC(ExtensionRangeOptions_Declaration)* msg) {
  bool default_val = false;
  bool ret;
  const upb_MiniTableField field = *upb_MiniTable_FindFieldByNumber(UPB_DESC(_ExtensionRangeOptions__Declaration_msg_init)(), 5);
  _upb_Message_GetNonExtensionField(msg, &field, &default_val, &ret);
  return ret;
}
UPB_INLINE bool UPB_DESC(ExtensionRangeOptions_Declaration_has_reserved)(const UPB_DESC(ExtensionRangeOptions_Declaration)* msg) {
  const upb_MiniTableField field = *upb_MiniTable_FindFieldByNumber(UPB_DESC(_ExtensionRangeOptions__Declaration_msg_init)(), 5);
  return _upb_Message_HasNonExtensionField(msg, &field);
}
UPB_INLINE void UPB_DESC(ExtensionRangeOptions_Declaration_clear_repeated)(UPB_DESC(ExtensionRangeOptions_Declaration)* msg) {
  const upb_MiniTableField field = *upb_MiniTable_FindFieldByNumber(UPB_DESC(_ExtensionRangeOptions__Declaration_msg_init)(), 6);
  _upb_Message_ClearNonExtensionField(msg, &field);
}
UPB_INLINE bool UPB_DESC(ExtensionRangeOptions_Declaration_repeated)(const UPB_DESC(ExtensionRangeOptions_Declaration)* msg) {
  bool default_val = false;
  bool ret;
  const upb_MiniTableField field = *upb_MiniTable_FindFieldByNumber(UPB_DESC(_ExtensionRangeOptions__Declaration_msg_init)(), 6);
  _upb_Message_GetNonExtensionField(msg, &field, &default_val, &ret);
  return ret;
}
UPB_INLINE bool UPB_DESC(ExtensionRangeOptions_Declaration_has_repeated)(const UPB_DESC(ExtensionRangeOptions_Declaration)* msg) {
  const upb_MiniTableField field = *upb_MiniTable_FindFieldByNumber(UPB_DESC(_ExtensionRangeOptions__Declaration_msg_init)(), 6);
  return _upb_Message_HasNonExtensionField(msg, &field);
}

UPB_INLINE void UPB_DESC(ExtensionRangeOptions_Declaration_set_number)(UPB_DESC(ExtensionRangeOptions_Declaration) *msg, int32_t value) {
  const upb_MiniTableField field = *upb_MiniTable_FindFieldByNumber(UPB_DESC(_ExtensionRangeOptions__Declaration_msg_init)(), 1);
  _upb_Message_SetNonExtensionField(msg, &field, &value);
}
UPB_INLINE void UPB_DESC(ExtensionRangeOptions_Declaration_set_full_name)(UPB_DESC(ExtensionRangeOptions_Declaration) *msg, upb_StringView value) {
  const upb_MiniTableField field = *upb_MiniTable_FindFieldByNumber(UPB_DESC(_ExtensionRangeOptions__Declaration_msg_init)(), 2);
  _upb_Message_SetNonExtensionField(msg, &field, &value);
}
UPB_INLINE void UPB_DESC(ExtensionRangeOptions_Declaration_set_type)(UPB_DESC(ExtensionRangeOptions_Declaration) *msg, upb_StringView value) {
  const upb_MiniTableField field = *upb_MiniTable_FindFieldByNumber(UPB_DESC(_ExtensionRangeOptions__Declaration_msg_init)(), 3);
  _upb_Message_SetNonExtensionField(msg, &field, &value);
}
UPB_INLINE void UPB_DESC(ExtensionRangeOptions_Declaration_set_reserved)(UPB_DESC(ExtensionRangeOptions_Declaration) *msg, bool value) {
  const upb_MiniTableField field = *upb_MiniTable_FindFieldByNumber(UPB_DESC(_ExtensionRangeOptions__Declaration_msg_init)(), 5);
  _upb_Message_SetNonExtensionField(msg, &field, &value);
}
UPB_INLINE void UPB_DESC(ExtensionRangeOptions_Declaration_set_repeated)(UPB_DESC(ExtensionRangeOptions_Declaration) *msg, bool value) {
  const upb_MiniTableField field = *upb_MiniTable_FindFieldByNumber(UPB_DESC(_ExtensionRangeOptions__Declaration_msg_init)(), 6);
  _upb_Message_SetNonExtensionField(msg, &field, &value);
}

/* google.protobuf.FieldDescriptorProto */

UPB_INLINE UPB_DESC(FieldDescriptorProto)* UPB_DESC(FieldDescriptorProto_new)(upb_Arena* arena) {
  return (UPB_DESC(FieldDescriptorProto)*)_upb_Message_New(UPB_DESC(_FieldDescriptorProto_msg_init)(), arena);
}
UPB_INLINE UPB_DESC(FieldDescriptorProto)* UPB_DESC(FieldDescriptorProto_parse)(const char* buf, size_t size, upb_Arena* arena) {
  UPB_DESC(FieldDescriptorProto)* ret = UPB_DESC(FieldDescriptorProto_new)(arena);
  if (!ret) return NULL;
  if (upb_Decode(buf, size, ret, UPB_DESC(_FieldDescriptorProto_msg_init)(), NULL, 0, arena) != kUpb_DecodeStatus_Ok) {
    return NULL;
  }
  return ret;
}
UPB_INLINE UPB_DESC(FieldDescriptorProto)* UPB_DESC(FieldDescriptorProto_parse_ex)(const char* buf, size_t size,
                           const upb_ExtensionRegistry* extreg,
                           int options, upb_Arena* arena) {
  UPB_DESC(FieldDescriptorProto)* ret = UPB_DESC(FieldDescriptorProto_new)(arena);
  if (!ret) return NULL;
  if (upb_Decode(buf, size, ret, UPB_DESC(_FieldDescriptorProto_msg_init)(), extreg, options, arena) !=
      kUpb_DecodeStatus_Ok) {
    return NULL;
  }
  return ret;
}
UPB_INLINE char* UPB_DESC(FieldDescriptorProto_serialize)(const UPB_DESC(FieldDescriptorProto)* msg, upb_Arena* arena, size_t* len) {
  char* ptr;
  (void)upb_Encode(msg, UPB_DESC(_FieldDescriptorProto_msg_init)(), 0, arena, &ptr, len);
  return ptr;
}
UPB_INLINE char* UPB_DESC(FieldDescriptorProto_serialize_ex)(const UPB_DESC(FieldDescriptorProto)* msg, int options,
                                 upb_Arena* arena, size_t* len) {
  char* ptr;
  (void)upb_Encode(msg, UPB_DESC(_FieldDescriptorProto_msg_init)(), options, arena, &ptr, len);
  return ptr;
}
UPB_INLINE void UPB_DESC(FieldDescriptorProto_clear_name)(UPB_DESC(FieldDescriptorProto)* msg) {
  const upb_MiniTableField field = *upb_MiniTable_FindFieldByNumber(UPB_DESC(_FieldDescriptorProto_msg_init)(), 1);
  _upb_Message_ClearNonExtensionField(msg, &field);
}
UPB_INLINE upb_StringView UPB_DESC(FieldDescriptorProto_name)(const UPB_DESC(FieldDescriptorProto)* msg) {
  upb_StringView default_val = upb_StringView_FromString("");
  upb_StringView ret;
  const upb_MiniTableField field = *upb_MiniTable_FindFieldByNumber(UPB_DESC(_FieldDescriptorProto_msg_init)(), 1);
  _upb_Message_GetNonExtensionField(msg, &field, &default_val, &ret);
  return ret;
}
UPB_INLINE bool UPB_DESC(FieldDescriptorProto_has_name)(const UPB_DESC(FieldDescriptorProto)* msg) {
  const upb_MiniTableField field = *upb_MiniTable_FindFieldByNumber(UPB_DESC(_FieldDescriptorProto_msg_init)(), 1);
  return _upb_Message_HasNonExtensionField(msg, &field);
}
UPB_INLINE void UPB_DESC(FieldDescriptorProto_clear_extendee)(UPB_DESC(FieldDescriptorProto)* msg) {
  const upb_MiniTableField field = *upb_MiniTable_FindFieldByNumber(UPB_DESC(_FieldDescriptorProto_msg_init)(), 2);
  _upb_Message_ClearNonExtensionField(msg, &field);
}
UPB_INLINE upb_StringView UPB_DESC(FieldDescriptorProto_extendee)(const UPB_DESC(FieldDescriptorProto)* msg) {
  upb_StringView default_val = upb_StringView_FromString("");
  upb_StringView ret;
  const upb_MiniTableField field = *upb_MiniTable_FindFieldByNumber(UPB_DESC(_FieldDescriptorProto_msg_init)(), 2);
  _upb_Message_GetNonExtensionField(msg, &field, &default_val, &ret);
  return ret;
}
UPB_INLINE bool UPB_DESC(FieldDescriptorProto_has_extendee)(const UPB_DESC(FieldDescriptorProto)* msg) {
  const upb_MiniTableField field = *upb_MiniTable_FindFieldByNumber(UPB_DESC(_FieldDescriptorProto_msg_init)(), 2);
  return _upb_Message_HasNonExtensionField(msg, &field);
}
UPB_INLINE void UPB_DESC(FieldDescriptorProto_clear_number)(UPB_DESC(FieldDescriptorProto)* msg) {
  const upb_MiniTableField field = *upb_MiniTable_FindFieldByNumber(UPB_DESC(_FieldDescriptorProto_msg_init)(), 3);
  _upb_Message_ClearNonExtensionField(msg, &field);
}
UPB_INLINE int32_t UPB_DESC(FieldDescriptorProto_number)(const UPB_DESC(FieldDescriptorProto)* msg) {
  int32_t default_val = (int32_t)0;
  int32_t ret;
  const upb_MiniTableField field = *upb_MiniTable_FindFieldByNumber(UPB_DESC(_FieldDescriptorProto_msg_init)(), 3);
  _upb_Message_GetNonExtensionField(msg, &field, &default_val, &ret);
  return ret;
}
UPB_INLINE bool UPB_DESC(FieldDescriptorProto_has_number)(const UPB_DESC(FieldDescriptorProto)* msg) {
  const upb_MiniTableField field = *upb_MiniTable_FindFieldByNumber(UPB_DESC(_FieldDescriptorProto_msg_init)(), 3);
  return _upb_Message_HasNonExtensionField(msg, &field);
}
UPB_INLINE void UPB_DESC(FieldDescriptorProto_clear_label)(UPB_DESC(FieldDescriptorProto)* msg) {
  const upb_MiniTableField field = *upb_MiniTable_FindFieldByNumber(UPB_DESC(_FieldDescriptorProto_msg_init)(), 4);
  _upb_Message_ClearNonExtensionField(msg, &field);
}
UPB_INLINE int32_t UPB_DESC(FieldDescriptorProto_label)(const UPB_DESC(FieldDescriptorProto)* msg) {
  int32_t default_val = 1;
  int32_t ret;
  const upb_MiniTableField field = *upb_MiniTable_FindFieldByNumber(UPB_DESC(_FieldDescriptorProto_msg_init)(), 4);
  _upb_Message_GetNonExtensionField(msg, &field, &default_val, &ret);
  return ret;
}
UPB_INLINE bool UPB_DESC(FieldDescriptorProto_has_label)(const UPB_DESC(FieldDescriptorProto)* msg) {
  const upb_MiniTableField field = *upb_MiniTable_FindFieldByNumber(UPB_DESC(_FieldDescriptorProto_msg_init)(), 4);
  return _upb_Message_HasNonExtensionField(msg, &field);
}
UPB_INLINE void UPB_DESC(FieldDescriptorProto_clear_type)(UPB_DESC(FieldDescriptorProto)* msg) {
  const upb_MiniTableField field = *upb_MiniTable_FindFieldByNumber(UPB_DESC(_FieldDescriptorProto_msg_init)(), 5);
  _upb_Message_ClearNonExtensionField(msg, &field);
}
UPB_INLINE int32_t UPB_DESC(FieldDescriptorProto_type)(const UPB_DESC(FieldDescriptorProto)* msg) {
  int32_t default_val = 1;
  int32_t ret;
  const upb_MiniTableField field = *upb_MiniTable_FindFieldByNumber(UPB_DESC(_FieldDescriptorProto_msg_init)(), 5);
  _upb_Message_GetNonExtensionField(msg, &field, &default_val, &ret);
  return ret;
}
UPB_INLINE bool UPB_DESC(FieldDescriptorProto_has_type)(const UPB_DESC(FieldDescriptorProto)* msg) {
  const upb_MiniTableField field = *upb_MiniTable_FindFieldByNumber(UPB_DESC(_FieldDescriptorProto_msg_init)(), 5);
  return _upb_Message_HasNonExtensionField(msg, &field);
}
UPB_INLINE void UPB_DESC(FieldDescriptorProto_clear_type_name)(UPB_DESC(FieldDescriptorProto)* msg) {
  const upb_MiniTableField field = *upb_MiniTable_FindFieldByNumber(UPB_DESC(_FieldDescriptorProto_msg_init)(), 6);
  _upb_Message_ClearNonExtensionField(msg, &field);
}
UPB_INLINE upb_StringView UPB_DESC(FieldDescriptorProto_type_name)(const UPB_DESC(FieldDescriptorProto)* msg) {
  upb_StringView default_val = upb_StringView_FromString("");
  upb_StringView ret;
  const upb_MiniTableField field = *upb_MiniTable_FindFieldByNumber(UPB_DESC(_FieldDescriptorProto_msg_init)(), 6);
  _upb_Message_GetNonExtensionField(msg, &field, &default_val, &ret);
  return ret;
}
UPB_INLINE bool UPB_DESC(FieldDescriptorProto_has_type_name)(const UPB_DESC(FieldDescriptorProto)* msg) {
  const upb_MiniTableField field = *upb_MiniTable_FindFieldByNumber(UPB_DESC(_FieldDescriptorProto_msg_init)(), 6);
  return _upb_Message_HasNonExtensionField(msg, &field);
}
UPB_INLINE void UPB_DESC(FieldDescriptorProto_clear_default_value)(UPB_DESC(FieldDescriptorProto)* msg) {
  const upb_MiniTableField field = *upb_MiniTable_FindFieldByNumber(UPB_DESC(_FieldDescriptorProto_msg_init)(), 7);
  _upb_Message_ClearNonExtensionField(msg, &field);
}
UPB_INLINE upb_StringView UPB_DESC(FieldDescriptorProto_default_value)(const UPB_DESC(FieldDescriptorProto)* msg) {
  upb_StringView default_val = upb_StringView_FromString("");
  upb_StringView ret;
  const upb_MiniTableField field = *upb_MiniTable_FindFieldByNumber(UPB_DESC(_FieldDescriptorProto_msg_init)(), 7);
  _upb_Message_GetNonExtensionField(msg, &field, &default_val, &ret);
  return ret;
}
UPB_INLINE bool UPB_DESC(FieldDescriptorProto_has_default_value)(const UPB_DESC(FieldDescriptorProto)* msg) {
  const upb_MiniTableField field = *upb_MiniTable_FindFieldByNumber(UPB_DESC(_FieldDescriptorProto_msg_init)(), 7);
  return _upb_Message_HasNonExtensionField(msg, &field);
}
UPB_INLINE void UPB_DESC(FieldDescriptorProto_clear_options)(UPB_DESC(FieldDescriptorProto)* msg) {
  const upb_MiniTableField field = *upb_MiniTable_FindFieldByNumber(UPB_DESC(_FieldDescriptorProto_msg_init)(), 8);
  _upb_Message_ClearNonExtensionField(msg, &field);
}
UPB_INLINE const UPB_DESC(FieldOptions)* UPB_DESC(FieldDescriptorProto_options)(const UPB_DESC(FieldDescriptorProto)* msg) {
  const UPB_DESC(FieldOptions)* default_val = NULL;
  const UPB_DESC(FieldOptions)* ret;
  const upb_MiniTableField field = *upb_MiniTable_FindFieldByNumber(UPB_DESC(_FieldDescriptorProto_msg_init)(), 8);
  _upb_Message_GetNonExtensionField(msg, &field, &default_val, &ret);
  return ret;
}
UPB_INLINE bool UPB_DESC(FieldDescriptorProto_has_options)(const UPB_DESC(FieldDescriptorProto)* msg) {
  const upb_MiniTableField field = *upb_MiniTable_FindFieldByNumber(UPB_DESC(_FieldDescriptorProto_msg_init)(), 8);
  return _upb_Message_HasNonExtensionField(msg, &field);
}
UPB_INLINE void UPB_DESC(FieldDescriptorProto_clear_oneof_index)(UPB_DESC(FieldDescriptorProto)* msg) {
  const upb_MiniTableField field = *upb_MiniTable_FindFieldByNumber(UPB_DESC(_FieldDescriptorProto_msg_init)(), 9);
  _upb_Message_ClearNonExtensionField(msg, &field);
}
UPB_INLINE int32_t UPB_DESC(FieldDescriptorProto_oneof_index)(const UPB_DESC(FieldDescriptorProto)* msg) {
  int32_t default_val = (int32_t)0;
  int32_t ret;
  const upb_MiniTableField field = *upb_MiniTable_FindFieldByNumber(UPB_DESC(_FieldDescriptorProto_msg_init)(), 9);
  _upb_Message_GetNonExtensionField(msg, &field, &default_val, &ret);
  return ret;
}
UPB_INLINE bool UPB_DESC(FieldDescriptorProto_has_oneof_index)(const UPB_DESC(FieldDescriptorProto)* msg) {
  const upb_MiniTableField field = *upb_MiniTable_FindFieldByNumber(UPB_DESC(_FieldDescriptorProto_msg_init)(), 9);
  return _upb_Message_HasNonExtensionField(msg, &field);
}
UPB_INLINE void UPB_DESC(FieldDescriptorProto_clear_json_name)(UPB_DESC(FieldDescriptorProto)* msg) {
  const upb_MiniTableField field = *upb_MiniTable_FindFieldByNumber(UPB_DESC(_FieldDescriptorProto_msg_init)(), 10);
  _upb_Message_ClearNonExtensionField(msg, &field);
}
UPB_INLINE upb_StringView UPB_DESC(FieldDescriptorProto_json_name)(const UPB_DESC(FieldDescriptorProto)* msg) {
  upb_StringView default_val = upb_StringView_FromString("");
  upb_StringView ret;
  const upb_MiniTableField field = *upb_MiniTable_FindFieldByNumber(UPB_DESC(_FieldDescriptorProto_msg_init)(), 10);
  _upb_Message_GetNonExtensionField(msg, &field, &default_val, &ret);
  return ret;
}
UPB_INLINE bool UPB_DESC(FieldDescriptorProto_has_json_name)(const UPB_DESC(FieldDescriptorProto)* msg) {
  const upb_MiniTableField field = *upb_MiniTable_FindFieldByNumber(UPB_DESC(_FieldDescriptorProto_msg_init)(), 10);
  return _upb_Message_HasNonExtensionField(msg, &field);
}
UPB_INLINE void UPB_DESC(FieldDescriptorProto_clear_proto3_optional)(UPB_DESC(FieldDescriptorProto)* msg) {
  const upb_MiniTableField field = *upb_MiniTable_FindFieldByNumber(UPB_DESC(_FieldDescriptorProto_msg_init)(), 17);
  _upb_Message_ClearNonExtensionField(msg, &field);
}
UPB_INLINE bool UPB_DESC(FieldDescriptorProto_proto3_optional)(const UPB_DESC(FieldDescriptorProto)* msg) {
  bool default_val = false;
  bool ret;
  const upb_MiniTableField field = *upb_MiniTable_FindFieldByNumber(UPB_DESC(_FieldDescriptorProto_msg_init)(), 17);
  _upb_Message_GetNonExtensionField(msg, &field, &default_val, &ret);
  return ret;
}
UPB_INLINE bool UPB_DESC(FieldDescriptorProto_has_proto3_optional)(const UPB_DESC(FieldDescriptorProto)* msg) {
  const upb_MiniTableField field = *upb_MiniTable_FindFieldByNumber(UPB_DESC(_FieldDescriptorProto_msg_init)(), 17);
  return _upb_Message_HasNonExtensionField(msg, &field);
}

UPB_INLINE void UPB_DESC(FieldDescriptorProto_set_name)(UPB_DESC(FieldDescriptorProto) *msg, upb_StringView value) {
  const upb_MiniTableField field = *upb_MiniTable_FindFieldByNumber(UPB_DESC(_FieldDescriptorProto_msg_init)(), 1);
  _upb_Message_SetNonExtensionField(msg, &field, &value);
}
UPB_INLINE void UPB_DESC(FieldDescriptorProto_set_extendee)(UPB_DESC(FieldDescriptorProto) *msg, upb_StringView value) {
  const upb_MiniTableField field = *upb_MiniTable_FindFieldByNumber(UPB_DESC(_FieldDescriptorProto_msg_init)(), 2);
  _upb_Message_SetNonExtensionField(msg, &field, &value);
}
UPB_INLINE void UPB_DESC(FieldDescriptorProto_set_number)(UPB_DESC(FieldDescriptorProto) *msg, int32_t value) {
  const upb_MiniTableField field = *upb_MiniTable_FindFieldByNumber(UPB_DESC(_FieldDescriptorProto_msg_init)(), 3);
  _upb_Message_SetNonExtensionField(msg, &field, &value);
}
UPB_INLINE void UPB_DESC(FieldDescriptorProto_set_label)(UPB_DESC(FieldDescriptorProto) *msg, int32_t value) {
  const upb_MiniTableField field = *upb_MiniTable_FindFieldByNumber(UPB_DESC(_FieldDescriptorProto_msg_init)(), 4);
  _upb_Message_SetNonExtensionField(msg, &field, &value);
}
UPB_INLINE void UPB_DESC(FieldDescriptorProto_set_type)(UPB_DESC(FieldDescriptorProto) *msg, int32_t value) {
  const upb_MiniTableField field = *upb_MiniTable_FindFieldByNumber(UPB_DESC(_FieldDescriptorProto_msg_init)(), 5);
  _upb_Message_SetNonExtensionField(msg, &field, &value);
}
UPB_INLINE void UPB_DESC(FieldDescriptorProto_set_type_name)(UPB_DESC(FieldDescriptorProto) *msg, upb_StringView value) {
  const upb_MiniTableField field = *upb_MiniTable_FindFieldByNumber(UPB_DESC(_FieldDescriptorProto_msg_init)(), 6);
  _upb_Message_SetNonExtensionField(msg, &field, &value);
}
UPB_INLINE void UPB_DESC(FieldDescriptorProto_set_default_value)(UPB_DESC(FieldDescriptorProto) *msg, upb_StringView value) {
  const upb_MiniTableField field = *upb_MiniTable_FindFieldByNumber(UPB_DESC(_FieldDescriptorProto_msg_init)(), 7);
  _upb_Message_SetNonExtensionField(msg, &field, &value);
}
UPB_INLINE void UPB_DESC(FieldDescriptorProto_set_options)(UPB_DESC(FieldDescriptorProto) *msg, UPB_DESC(FieldOptions)* value) {
  const upb_MiniTableField field = *upb_MiniTable_FindFieldByNumber(UPB_DESC(_FieldDescriptorProto_msg_init)(), 8);
  _upb_Message_SetNonExtensionField(msg, &field, &value);
}
UPB_INLINE struct UPB_DESC(FieldOptions)* UPB_DESC(FieldDescriptorProto_mutable_options)(UPB_DESC(FieldDescriptorProto)* msg, upb_Arena* arena) {
  struct UPB_DESC(FieldOptions)* sub = (struct UPB_DESC(FieldOptions)*)UPB_DESC(FieldDescriptorProto_options)(msg);
  if (sub == NULL) {
    sub = (struct UPB_DESC(FieldOptions)*)_upb_Message_New(UPB_DESC(_FieldOptions_msg_init)(), arena);
    if (sub) UPB_DESC(FieldDescriptorProto_set_options)(msg, sub);
  }
  return sub;
}
UPB_INLINE void UPB_DESC(FieldDescriptorProto_set_oneof_index)(UPB_DESC(FieldDescriptorProto) *msg, int32_t value) {
  const upb_MiniTableField field = *upb_MiniTable_FindFieldByNumber(UPB_DESC(_FieldDescriptorProto_msg_init)(), 9);
  _upb_Message_SetNonExtensionField(msg, &field, &value);
}
UPB_INLINE void UPB_DESC(FieldDescriptorProto_set_json_name)(UPB_DESC(FieldDescriptorProto) *msg, upb_StringView value) {
  const upb_MiniTableField field = *upb_MiniTable_FindFieldByNumber(UPB_DESC(_FieldDescriptorProto_msg_init)(), 10);
  _upb_Message_SetNonExtensionField(msg, &field, &value);
}
UPB_INLINE void UPB_DESC(FieldDescriptorProto_set_proto3_optional)(UPB_DESC(FieldDescriptorProto) *msg, bool value) {
  const upb_MiniTableField field = *upb_MiniTable_FindFieldByNumber(UPB_DESC(_FieldDescriptorProto_msg_init)(), 17);
  _upb_Message_SetNonExtensionField(msg, &field, &value);
}

/* google.protobuf.OneofDescriptorProto */

UPB_INLINE UPB_DESC(OneofDescriptorProto)* UPB_DESC(OneofDescriptorProto_new)(upb_Arena* arena) {
  return (UPB_DESC(OneofDescriptorProto)*)_upb_Message_New(UPB_DESC(_OneofDescriptorProto_msg_init)(), arena);
}
UPB_INLINE UPB_DESC(OneofDescriptorProto)* UPB_DESC(OneofDescriptorProto_parse)(const char* buf, size_t size, upb_Arena* arena) {
  UPB_DESC(OneofDescriptorProto)* ret = UPB_DESC(OneofDescriptorProto_new)(arena);
  if (!ret) return NULL;
  if (upb_Decode(buf, size, ret, UPB_DESC(_OneofDescriptorProto_msg_init)(), NULL, 0, arena) != kUpb_DecodeStatus_Ok) {
    return NULL;
  }
  return ret;
}
UPB_INLINE UPB_DESC(OneofDescriptorProto)* UPB_DESC(OneofDescriptorProto_parse_ex)(const char* buf, size_t size,
                           const upb_ExtensionRegistry* extreg,
                           int options, upb_Arena* arena) {
  UPB_DESC(OneofDescriptorProto)* ret = UPB_DESC(OneofDescriptorProto_new)(arena);
  if (!ret) return NULL;
  if (upb_Decode(buf, size, ret, UPB_DESC(_OneofDescriptorProto_msg_init)(), extreg, options, arena) !=
      kUpb_DecodeStatus_Ok) {
    return NULL;
  }
  return ret;
}
UPB_INLINE char* UPB_DESC(OneofDescriptorProto_serialize)(const UPB_DESC(OneofDescriptorProto)* msg, upb_Arena* arena, size_t* len) {
  char* ptr;
  (void)upb_Encode(msg, UPB_DESC(_OneofDescriptorProto_msg_init)(), 0, arena, &ptr, len);
  return ptr;
}
UPB_INLINE char* UPB_DESC(OneofDescriptorProto_serialize_ex)(const UPB_DESC(OneofDescriptorProto)* msg, int options,
                                 upb_Arena* arena, size_t* len) {
  char* ptr;
  (void)upb_Encode(msg, UPB_DESC(_OneofDescriptorProto_msg_init)(), options, arena, &ptr, len);
  return ptr;
}
UPB_INLINE void UPB_DESC(OneofDescriptorProto_clear_name)(UPB_DESC(OneofDescriptorProto)* msg) {
  const upb_MiniTableField field = *upb_MiniTable_FindFieldByNumber(UPB_DESC(_OneofDescriptorProto_msg_init)(), 1);
  _upb_Message_ClearNonExtensionField(msg, &field);
}
UPB_INLINE upb_StringView UPB_DESC(OneofDescriptorProto_name)(const UPB_DESC(OneofDescriptorProto)* msg) {
  upb_StringView default_val = upb_StringView_FromString("");
  upb_StringView ret;
  const upb_MiniTableField field = *upb_MiniTable_FindFieldByNumber(UPB_DESC(_OneofDescriptorProto_msg_init)(), 1);
  _upb_Message_GetNonExtensionField(msg, &field, &default_val, &ret);
  return ret;
}
UPB_INLINE bool UPB_DESC(OneofDescriptorProto_has_name)(const UPB_DESC(OneofDescriptorProto)* msg) {
  const upb_MiniTableField field = *upb_MiniTable_FindFieldByNumber(UPB_DESC(_OneofDescriptorProto_msg_init)(), 1);
  return _upb_Message_HasNonExtensionField(msg, &field);
}
UPB_INLINE void UPB_DESC(OneofDescriptorProto_clear_options)(UPB_DESC(OneofDescriptorProto)* msg) {
  const upb_MiniTableField field = *upb_MiniTable_FindFieldByNumber(UPB_DESC(_OneofDescriptorProto_msg_init)(), 2);
  _upb_Message_ClearNonExtensionField(msg, &field);
}
UPB_INLINE const UPB_DESC(OneofOptions)* UPB_DESC(OneofDescriptorProto_options)(const UPB_DESC(OneofDescriptorProto)* msg) {
  const UPB_DESC(OneofOptions)* default_val = NULL;
  const UPB_DESC(OneofOptions)* ret;
  const upb_MiniTableField field = *upb_MiniTable_FindFieldByNumber(UPB_DESC(_OneofDescriptorProto_msg_init)(), 2);
  _upb_Message_GetNonExtensionField(msg, &field, &default_val, &ret);
  return ret;
}
UPB_INLINE bool UPB_DESC(OneofDescriptorProto_has_options)(const UPB_DESC(OneofDescriptorProto)* msg) {
  const upb_MiniTableField field = *upb_MiniTable_FindFieldByNumber(UPB_DESC(_OneofDescriptorProto_msg_init)(), 2);
  return _upb_Message_HasNonExtensionField(msg, &field);
}

UPB_INLINE void UPB_DESC(OneofDescriptorProto_set_name)(UPB_DESC(OneofDescriptorProto) *msg, upb_StringView value) {
  const upb_MiniTableField field = *upb_MiniTable_FindFieldByNumber(UPB_DESC(_OneofDescriptorProto_msg_init)(), 1);
  _upb_Message_SetNonExtensionField(msg, &field, &value);
}
UPB_INLINE void UPB_DESC(OneofDescriptorProto_set_options)(UPB_DESC(OneofDescriptorProto) *msg, UPB_DESC(OneofOptions)* value) {
  const upb_MiniTableField field = *upb_MiniTable_FindFieldByNumber(UPB_DESC(_OneofDescriptorProto_msg_init)(), 2);
  _upb_Message_SetNonExtensionField(msg, &field, &value);
}
UPB_INLINE struct UPB_DESC(OneofOptions)* UPB_DESC(OneofDescriptorProto_mutable_options)(UPB_DESC(OneofDescriptorProto)* msg, upb_Arena* arena) {
  struct UPB_DESC(OneofOptions)* sub = (struct UPB_DESC(OneofOptions)*)UPB_DESC(OneofDescriptorProto_options)(msg);
  if (sub == NULL) {
    sub = (struct UPB_DESC(OneofOptions)*)_upb_Message_New(UPB_DESC(_OneofOptions_msg_init)(), arena);
    if (sub) UPB_DESC(OneofDescriptorProto_set_options)(msg, sub);
  }
  return sub;
}

/* google.protobuf.EnumDescriptorProto */

UPB_INLINE UPB_DESC(EnumDescriptorProto)* UPB_DESC(EnumDescriptorProto_new)(upb_Arena* arena) {
  return (UPB_DESC(EnumDescriptorProto)*)_upb_Message_New(UPB_DESC(_EnumDescriptorProto_msg_init)(), arena);
}
UPB_INLINE UPB_DESC(EnumDescriptorProto)* UPB_DESC(EnumDescriptorProto_parse)(const char* buf, size_t size, upb_Arena* arena) {
  UPB_DESC(EnumDescriptorProto)* ret = UPB_DESC(EnumDescriptorProto_new)(arena);
  if (!ret) return NULL;
  if (upb_Decode(buf, size, ret, UPB_DESC(_EnumDescriptorProto_msg_init)(), NULL, 0, arena) != kUpb_DecodeStatus_Ok) {
    return NULL;
  }
  return ret;
}
UPB_INLINE UPB_DESC(EnumDescriptorProto)* UPB_DESC(EnumDescriptorProto_parse_ex)(const char* buf, size_t size,
                           const upb_ExtensionRegistry* extreg,
                           int options, upb_Arena* arena) {
  UPB_DESC(EnumDescriptorProto)* ret = UPB_DESC(EnumDescriptorProto_new)(arena);
  if (!ret) return NULL;
  if (upb_Decode(buf, size, ret, UPB_DESC(_EnumDescriptorProto_msg_init)(), extreg, options, arena) !=
      kUpb_DecodeStatus_Ok) {
    return NULL;
  }
  return ret;
}
UPB_INLINE char* UPB_DESC(EnumDescriptorProto_serialize)(const UPB_DESC(EnumDescriptorProto)* msg, upb_Arena* arena, size_t* len) {
  char* ptr;
  (void)upb_Encode(msg, UPB_DESC(_EnumDescriptorProto_msg_init)(), 0, arena, &ptr, len);
  return ptr;
}
UPB_INLINE char* UPB_DESC(EnumDescriptorProto_serialize_ex)(const UPB_DESC(EnumDescriptorProto)* msg, int options,
                                 upb_Arena* arena, size_t* len) {
  char* ptr;
  (void)upb_Encode(msg, UPB_DESC(_EnumDescriptorProto_msg_init)(), options, arena, &ptr, len);
  return ptr;
}
UPB_INLINE void UPB_DESC(EnumDescriptorProto_clear_name)(UPB_DESC(EnumDescriptorProto)* msg) {
  const upb_MiniTableField field = *upb_MiniTable_FindFieldByNumber(UPB_DESC(_EnumDescriptorProto_msg_init)(), 1);
  _upb_Message_ClearNonExtensionField(msg, &field);
}
UPB_INLINE upb_StringView UPB_DESC(EnumDescriptorProto_name)(const UPB_DESC(EnumDescriptorProto)* msg) {
  upb_StringView default_val = upb_StringView_FromString("");
  upb_StringView ret;
  const upb_MiniTableField field = *upb_MiniTable_FindFieldByNumber(UPB_DESC(_EnumDescriptorProto_msg_init)(), 1);
  _upb_Message_GetNonExtensionField(msg, &field, &default_val, &ret);
  return ret;
}
UPB_INLINE bool UPB_DESC(EnumDescriptorProto_has_name)(const UPB_DESC(EnumDescriptorProto)* msg) {
  const upb_MiniTableField field = *upb_MiniTable_FindFieldByNumber(UPB_DESC(_EnumDescriptorProto_msg_init)(), 1);
  return _upb_Message_HasNonExtensionField(msg, &field);
}
UPB_INLINE void UPB_DESC(EnumDescriptorProto_clear_value)(UPB_DESC(EnumDescriptorProto)* msg) {
  const upb_MiniTableField field = *upb_MiniTable_FindFieldByNumber(UPB_DESC(_EnumDescriptorProto_msg_init)(), 2);
  _upb_Message_ClearNonExtensionField(msg, &field);
}
UPB_INLINE const UPB_DESC(EnumValueDescriptorProto)* const* UPB_DESC(EnumDescriptorProto_value)(const UPB_DESC(EnumDescriptorProto)* msg, size_t* size) {
  const upb_MiniTableField field = *upb_MiniTable_FindFieldByNumber(UPB_DESC(_EnumDescriptorProto_msg_init)(), 2);
  const upb_Array* arr = upb_Message_GetArray(msg, &field);
  if (arr) {
    if (size) *size = arr->size;
    return (const UPB_DESC(EnumValueDescriptorProto)* const*)_upb_array_constptr(arr);
  } else {
    if (size) *size = 0;
    return NULL;
  }
}
UPB_INLINE const upb_Array* _google_protobuf_EnumDescriptorProto_value_upb_array(const UPB_DESC(EnumDescriptorProto)* msg, size_t* size) {
  const upb_MiniTableField field = *upb_MiniTable_FindFieldByNumber(UPB_DESC(_EnumDescriptorProto_msg_init)(), 2);
  const upb_Array* arr = upb_Message_GetArray(msg, &field);
  if (size) {
    *size = arr ? arr->size : 0;
  }
  return arr;
}
UPB_INLINE upb_Array* _google_protobuf_EnumDescriptorProto_value_mutable_upb_array(const UPB_DESC(EnumDescriptorProto)* msg, size_t* size, upb_Arena* arena) {
  const upb_MiniTableField field = *upb_MiniTable_FindFieldByNumber(UPB_DESC(_EnumDescriptorProto_msg_init)(), 2);
  upb_Array* arr = upb_Message_GetOrCreateMutableArray(
      (upb_Message*)msg, &field, arena);
  if (size) {
    *size = arr ? arr->size : 0;
  }
  return arr;
}
UPB_INLINE bool UPB_DESC(EnumDescriptorProto_has_value)(const UPB_DESC(EnumDescriptorProto)* msg) {
  size_t size;
  UPB_DESC(EnumDescriptorProto_value)(msg, &size);
  return size != 0;
}
UPB_INLINE void UPB_DESC(EnumDescriptorProto_clear_options)(UPB_DESC(EnumDescriptorProto)* msg) {
  const upb_MiniTableField field = *upb_MiniTable_FindFieldByNumber(UPB_DESC(_EnumDescriptorProto_msg_init)(), 3);
  _upb_Message_ClearNonExtensionField(msg, &field);
}
UPB_INLINE const UPB_DESC(EnumOptions)* UPB_DESC(EnumDescriptorProto_options)(const UPB_DESC(EnumDescriptorProto)* msg) {
  const UPB_DESC(EnumOptions)* default_val = NULL;
  const UPB_DESC(EnumOptions)* ret;
  const upb_MiniTableField field = *upb_MiniTable_FindFieldByNumber(UPB_DESC(_EnumDescriptorProto_msg_init)(), 3);
  _upb_Message_GetNonExtensionField(msg, &field, &default_val, &ret);
  return ret;
}
UPB_INLINE bool UPB_DESC(EnumDescriptorProto_has_options)(const UPB_DESC(EnumDescriptorProto)* msg) {
  const upb_MiniTableField field = *upb_MiniTable_FindFieldByNumber(UPB_DESC(_EnumDescriptorProto_msg_init)(), 3);
  return _upb_Message_HasNonExtensionField(msg, &field);
}
UPB_INLINE void UPB_DESC(EnumDescriptorProto_clear_reserved_range)(UPB_DESC(EnumDescriptorProto)* msg) {
  const upb_MiniTableField field = *upb_MiniTable_FindFieldByNumber(UPB_DESC(_EnumDescriptorProto_msg_init)(), 4);
  _upb_Message_ClearNonExtensionField(msg, &field);
}
UPB_INLINE const UPB_DESC(EnumDescriptorProto_EnumReservedRange)* const* UPB_DESC(EnumDescriptorProto_reserved_range)(const UPB_DESC(EnumDescriptorProto)* msg, size_t* size) {
  const upb_MiniTableField field = *upb_MiniTable_FindFieldByNumber(UPB_DESC(_EnumDescriptorProto_msg_init)(), 4);
  const upb_Array* arr = upb_Message_GetArray(msg, &field);
  if (arr) {
    if (size) *size = arr->size;
    return (const UPB_DESC(EnumDescriptorProto_EnumReservedRange)* const*)_upb_array_constptr(arr);
  } else {
    if (size) *size = 0;
    return NULL;
  }
}
UPB_INLINE const upb_Array* _google_protobuf_EnumDescriptorProto_reserved_range_upb_array(const UPB_DESC(EnumDescriptorProto)* msg, size_t* size) {
  const upb_MiniTableField field = *upb_MiniTable_FindFieldByNumber(UPB_DESC(_EnumDescriptorProto_msg_init)(), 4);
  const upb_Array* arr = upb_Message_GetArray(msg, &field);
  if (size) {
    *size = arr ? arr->size : 0;
  }
  return arr;
}
UPB_INLINE upb_Array* _google_protobuf_EnumDescriptorProto_reserved_range_mutable_upb_array(const UPB_DESC(EnumDescriptorProto)* msg, size_t* size, upb_Arena* arena) {
  const upb_MiniTableField field = *upb_MiniTable_FindFieldByNumber(UPB_DESC(_EnumDescriptorProto_msg_init)(), 4);
  upb_Array* arr = upb_Message_GetOrCreateMutableArray(
      (upb_Message*)msg, &field, arena);
  if (size) {
    *size = arr ? arr->size : 0;
  }
  return arr;
}
UPB_INLINE bool UPB_DESC(EnumDescriptorProto_has_reserved_range)(const UPB_DESC(EnumDescriptorProto)* msg) {
  size_t size;
  UPB_DESC(EnumDescriptorProto_reserved_range)(msg, &size);
  return size != 0;
}
UPB_INLINE void UPB_DESC(EnumDescriptorProto_clear_reserved_name)(UPB_DESC(EnumDescriptorProto)* msg) {
  const upb_MiniTableField field = *upb_MiniTable_FindFieldByNumber(UPB_DESC(_EnumDescriptorProto_msg_init)(), 5);
  _upb_Message_ClearNonExtensionField(msg, &field);
}
UPB_INLINE upb_StringView const* UPB_DESC(EnumDescriptorProto_reserved_name)(const UPB_DESC(EnumDescriptorProto)* msg, size_t* size) {
  const upb_MiniTableField field = *upb_MiniTable_FindFieldByNumber(UPB_DESC(_EnumDescriptorProto_msg_init)(), 5);
  const upb_Array* arr = upb_Message_GetArray(msg, &field);
  if (arr) {
    if (size) *size = arr->size;
    return (upb_StringView const*)_upb_array_constptr(arr);
  } else {
    if (size) *size = 0;
    return NULL;
  }
}
UPB_INLINE const upb_Array* _google_protobuf_EnumDescriptorProto_reserved_name_upb_array(const UPB_DESC(EnumDescriptorProto)* msg, size_t* size) {
  const upb_MiniTableField field = *upb_MiniTable_FindFieldByNumber(UPB_DESC(_EnumDescriptorProto_msg_init)(), 5);
  const upb_Array* arr = upb_Message_GetArray(msg, &field);
  if (size) {
    *size = arr ? arr->size : 0;
  }
  return arr;
}
UPB_INLINE upb_Array* _google_protobuf_EnumDescriptorProto_reserved_name_mutable_upb_array(const UPB_DESC(EnumDescriptorProto)* msg, size_t* size, upb_Arena* arena) {
  const upb_MiniTableField field = *upb_MiniTable_FindFieldByNumber(UPB_DESC(_EnumDescriptorProto_msg_init)(), 5);
  upb_Array* arr = upb_Message_GetOrCreateMutableArray(
      (upb_Message*)msg, &field, arena);
  if (size) {
    *size = arr ? arr->size : 0;
  }
  return arr;
}
UPB_INLINE bool UPB_DESC(EnumDescriptorProto_has_reserved_name)(const UPB_DESC(EnumDescriptorProto)* msg) {
  size_t size;
  UPB_DESC(EnumDescriptorProto_reserved_name)(msg, &size);
  return size != 0;
}

UPB_INLINE void UPB_DESC(EnumDescriptorProto_set_name)(UPB_DESC(EnumDescriptorProto) *msg, upb_StringView value) {
  const upb_MiniTableField field = *upb_MiniTable_FindFieldByNumber(UPB_DESC(_EnumDescriptorProto_msg_init)(), 1);
  _upb_Message_SetNonExtensionField(msg, &field, &value);
}
UPB_INLINE UPB_DESC(EnumValueDescriptorProto)** UPB_DESC(EnumDescriptorProto_mutable_value)(UPB_DESC(EnumDescriptorProto)* msg, size_t* size) {
  upb_MiniTableField field = *upb_MiniTable_FindFieldByNumber(UPB_DESC(_EnumDescriptorProto_msg_init)(), 2);
  upb_Array* arr = upb_Message_GetMutableArray(msg, &field);
  if (arr) {
    if (size) *size = arr->size;
    return (UPB_DESC(EnumValueDescriptorProto)**)_upb_array_ptr(arr);
  } else {
    if (size) *size = 0;
    return NULL;
  }
}
UPB_INLINE UPB_DESC(EnumValueDescriptorProto)** UPB_DESC(EnumDescriptorProto_resize_value)(UPB_DESC(EnumDescriptorProto)* msg, size_t size, upb_Arena* arena) {
  upb_MiniTableField field = *upb_MiniTable_FindFieldByNumber(UPB_DESC(_EnumDescriptorProto_msg_init)(), 2);
  return (UPB_DESC(EnumValueDescriptorProto)**)upb_Message_ResizeArrayUninitialized(msg, &field, size, arena);
}
UPB_INLINE struct UPB_DESC(EnumValueDescriptorProto)* UPB_DESC(EnumDescriptorProto_add_value)(UPB_DESC(EnumDescriptorProto)* msg, upb_Arena* arena) {
  upb_MiniTableField field = *upb_MiniTable_FindFieldByNumber(UPB_DESC(_EnumDescriptorProto_msg_init)(), 2);
  upb_Array* arr = upb_Message_GetOrCreateMutableArray(msg, &field, arena);
  if (!arr || !_upb_Array_ResizeUninitialized(arr, arr->size + 1, arena)) {
    return NULL;
  }
  struct UPB_DESC(EnumValueDescriptorProto)* sub = (struct UPB_DESC(EnumValueDescriptorProto)*)_upb_Message_New(UPB_DESC(_EnumValueDescriptorProto_msg_init)(), arena);
  if (!arr || !sub) return NULL;
  _upb_Array_Set(arr, arr->size - 1, &sub, sizeof(sub));
  return sub;
}
UPB_INLINE void UPB_DESC(EnumDescriptorProto_set_options)(UPB_DESC(EnumDescriptorProto) *msg, UPB_DESC(EnumOptions)* value) {
  const upb_MiniTableField field = *upb_MiniTable_FindFieldByNumber(UPB_DESC(_EnumDescriptorProto_msg_init)(), 3);
  _upb_Message_SetNonExtensionField(msg, &field, &value);
}
UPB_INLINE struct UPB_DESC(EnumOptions)* UPB_DESC(EnumDescriptorProto_mutable_options)(UPB_DESC(EnumDescriptorProto)* msg, upb_Arena* arena) {
  struct UPB_DESC(EnumOptions)* sub = (struct UPB_DESC(EnumOptions)*)UPB_DESC(EnumDescriptorProto_options)(msg);
  if (sub == NULL) {
    sub = (struct UPB_DESC(EnumOptions)*)_upb_Message_New(UPB_DESC(_EnumOptions_msg_init)(), arena);
    if (sub) UPB_DESC(EnumDescriptorProto_set_options)(msg, sub);
  }
  return sub;
}
UPB_INLINE UPB_DESC(EnumDescriptorProto_EnumReservedRange)** UPB_DESC(EnumDescriptorProto_mutable_reserved_range)(UPB_DESC(EnumDescriptorProto)* msg, size_t* size) {
  upb_MiniTableField field = *upb_MiniTable_FindFieldByNumber(UPB_DESC(_EnumDescriptorProto_msg_init)(), 4);
  upb_Array* arr = upb_Message_GetMutableArray(msg, &field);
  if (arr) {
    if (size) *size = arr->size;
    return (UPB_DESC(EnumDescriptorProto_EnumReservedRange)**)_upb_array_ptr(arr);
  } else {
    if (size) *size = 0;
    return NULL;
  }
}
UPB_INLINE UPB_DESC(EnumDescriptorProto_EnumReservedRange)** UPB_DESC(EnumDescriptorProto_resize_reserved_range)(UPB_DESC(EnumDescriptorProto)* msg, size_t size, upb_Arena* arena) {
  upb_MiniTableField field = *upb_MiniTable_FindFieldByNumber(UPB_DESC(_EnumDescriptorProto_msg_init)(), 4);
  return (UPB_DESC(EnumDescriptorProto_EnumReservedRange)**)upb_Message_ResizeArrayUninitialized(msg, &field, size, arena);
}
UPB_INLINE struct UPB_DESC(EnumDescriptorProto_EnumReservedRange)* UPB_DESC(EnumDescriptorProto_add_reserved_range)(UPB_DESC(EnumDescriptorProto)* msg, upb_Arena* arena) {
  upb_MiniTableField field = *upb_MiniTable_FindFieldByNumber(UPB_DESC(_EnumDescriptorProto_msg_init)(), 4);
  upb_Array* arr = upb_Message_GetOrCreateMutableArray(msg, &field, arena);
  if (!arr || !_upb_Array_ResizeUninitialized(arr, arr->size + 1, arena)) {
    return NULL;
  }
  struct UPB_DESC(EnumDescriptorProto_EnumReservedRange)* sub = (struct UPB_DESC(EnumDescriptorProto_EnumReservedRange)*)_upb_Message_New(UPB_DESC(_EnumDescriptorProto__EnumReservedRange_msg_init)(), arena);
  if (!arr || !sub) return NULL;
  _upb_Array_Set(arr, arr->size - 1, &sub, sizeof(sub));
  return sub;
}
UPB_INLINE upb_StringView* UPB_DESC(EnumDescriptorProto_mutable_reserved_name)(UPB_DESC(EnumDescriptorProto)* msg, size_t* size) {
  upb_MiniTableField field = *upb_MiniTable_FindFieldByNumber(UPB_DESC(_EnumDescriptorProto_msg_init)(), 5);
  upb_Array* arr = upb_Message_GetMutableArray(msg, &field);
  if (arr) {
    if (size) *size = arr->size;
    return (upb_StringView*)_upb_array_ptr(arr);
  } else {
    if (size) *size = 0;
    return NULL;
  }
}
UPB_INLINE upb_StringView* UPB_DESC(EnumDescriptorProto_resize_reserved_name)(UPB_DESC(EnumDescriptorProto)* msg, size_t size, upb_Arena* arena) {
  upb_MiniTableField field = *upb_MiniTable_FindFieldByNumber(UPB_DESC(_EnumDescriptorProto_msg_init)(), 5);
  return (upb_StringView*)upb_Message_ResizeArrayUninitialized(msg, &field, size, arena);
}
UPB_INLINE bool UPB_DESC(EnumDescriptorProto_add_reserved_name)(UPB_DESC(EnumDescriptorProto)* msg, upb_StringView val, upb_Arena* arena) {
  upb_MiniTableField field = *upb_MiniTable_FindFieldByNumber(UPB_DESC(_EnumDescriptorProto_msg_init)(), 5);
  upb_Array* arr = upb_Message_GetOrCreateMutableArray(msg, &field, arena);
  if (!arr || !_upb_Array_ResizeUninitialized(arr, arr->size + 1, arena)) {
    return false;
  }
  _upb_Array_Set(arr, arr->size - 1, &val, sizeof(val));
  return true;
}

/* google.protobuf.EnumDescriptorProto.EnumReservedRange */

UPB_INLINE UPB_DESC(EnumDescriptorProto_EnumReservedRange)* UPB_DESC(EnumDescriptorProto_EnumReservedRange_new)(upb_Arena* arena) {
  return (UPB_DESC(EnumDescriptorProto_EnumReservedRange)*)_upb_Message_New(UPB_DESC(_EnumDescriptorProto__EnumReservedRange_msg_init)(), arena);
}
UPB_INLINE UPB_DESC(EnumDescriptorProto_EnumReservedRange)* UPB_DESC(EnumDescriptorProto_EnumReservedRange_parse)(const char* buf, size_t size, upb_Arena* arena) {
  UPB_DESC(EnumDescriptorProto_EnumReservedRange)* ret = UPB_DESC(EnumDescriptorProto_EnumReservedRange_new)(arena);
  if (!ret) return NULL;
  if (upb_Decode(buf, size, ret, UPB_DESC(_EnumDescriptorProto__EnumReservedRange_msg_init)(), NULL, 0, arena) != kUpb_DecodeStatus_Ok) {
    return NULL;
  }
  return ret;
}
UPB_INLINE UPB_DESC(EnumDescriptorProto_EnumReservedRange)* UPB_DESC(EnumDescriptorProto_EnumReservedRange_parse_ex)(const char* buf, size_t size,
                           const upb_ExtensionRegistry* extreg,
                           int options, upb_Arena* arena) {
  UPB_DESC(EnumDescriptorProto_EnumReservedRange)* ret = UPB_DESC(EnumDescriptorProto_EnumReservedRange_new)(arena);
  if (!ret) return NULL;
  if (upb_Decode(buf, size, ret, UPB_DESC(_EnumDescriptorProto__EnumReservedRange_msg_init)(), extreg, options, arena) !=
      kUpb_DecodeStatus_Ok) {
    return NULL;
  }
  return ret;
}
UPB_INLINE char* UPB_DESC(EnumDescriptorProto_EnumReservedRange_serialize)(const UPB_DESC(EnumDescriptorProto_EnumReservedRange)* msg, upb_Arena* arena, size_t* len) {
  char* ptr;
  (void)upb_Encode(msg, UPB_DESC(_EnumDescriptorProto__EnumReservedRange_msg_init)(), 0, arena, &ptr, len);
  return ptr;
}
UPB_INLINE char* UPB_DESC(EnumDescriptorProto_EnumReservedRange_serialize_ex)(const UPB_DESC(EnumDescriptorProto_EnumReservedRange)* msg, int options,
                                 upb_Arena* arena, size_t* len) {
  char* ptr;
  (void)upb_Encode(msg, UPB_DESC(_EnumDescriptorProto__EnumReservedRange_msg_init)(), options, arena, &ptr, len);
  return ptr;
}
UPB_INLINE void UPB_DESC(EnumDescriptorProto_EnumReservedRange_clear_start)(UPB_DESC(EnumDescriptorProto_EnumReservedRange)* msg) {
  const upb_MiniTableField field = *upb_MiniTable_FindFieldByNumber(UPB_DESC(_EnumDescriptorProto__EnumReservedRange_msg_init)(), 1);
  _upb_Message_ClearNonExtensionField(msg, &field);
}
UPB_INLINE int32_t UPB_DESC(EnumDescriptorProto_EnumReservedRange_start)(const UPB_DESC(EnumDescriptorProto_EnumReservedRange)* msg) {
  int32_t default_val = (int32_t)0;
  int32_t ret;
  const upb_MiniTableField field = *upb_MiniTable_FindFieldByNumber(UPB_DESC(_EnumDescriptorProto__EnumReservedRange_msg_init)(), 1);
  _upb_Message_GetNonExtensionField(msg, &field, &default_val, &ret);
  return ret;
}
UPB_INLINE bool UPB_DESC(EnumDescriptorProto_EnumReservedRange_has_start)(const UPB_DESC(EnumDescriptorProto_EnumReservedRange)* msg) {
  const upb_MiniTableField field = *upb_MiniTable_FindFieldByNumber(UPB_DESC(_EnumDescriptorProto__EnumReservedRange_msg_init)(), 1);
  return _upb_Message_HasNonExtensionField(msg, &field);
}
UPB_INLINE void UPB_DESC(EnumDescriptorProto_EnumReservedRange_clear_end)(UPB_DESC(EnumDescriptorProto_EnumReservedRange)* msg) {
  const upb_MiniTableField field = *upb_MiniTable_FindFieldByNumber(UPB_DESC(_EnumDescriptorProto__EnumReservedRange_msg_init)(), 2);
  _upb_Message_ClearNonExtensionField(msg, &field);
}
UPB_INLINE int32_t UPB_DESC(EnumDescriptorProto_EnumReservedRange_end)(const UPB_DESC(EnumDescriptorProto_EnumReservedRange)* msg) {
  int32_t default_val = (int32_t)0;
  int32_t ret;
  const upb_MiniTableField field = *upb_MiniTable_FindFieldByNumber(UPB_DESC(_EnumDescriptorProto__EnumReservedRange_msg_init)(), 2);
  _upb_Message_GetNonExtensionField(msg, &field, &default_val, &ret);
  return ret;
}
UPB_INLINE bool UPB_DESC(EnumDescriptorProto_EnumReservedRange_has_end)(const UPB_DESC(EnumDescriptorProto_EnumReservedRange)* msg) {
  const upb_MiniTableField field = *upb_MiniTable_FindFieldByNumber(UPB_DESC(_EnumDescriptorProto__EnumReservedRange_msg_init)(), 2);
  return _upb_Message_HasNonExtensionField(msg, &field);
}

UPB_INLINE void UPB_DESC(EnumDescriptorProto_EnumReservedRange_set_start)(UPB_DESC(EnumDescriptorProto_EnumReservedRange) *msg, int32_t value) {
  const upb_MiniTableField field = *upb_MiniTable_FindFieldByNumber(UPB_DESC(_EnumDescriptorProto__EnumReservedRange_msg_init)(), 1);
  _upb_Message_SetNonExtensionField(msg, &field, &value);
}
UPB_INLINE void UPB_DESC(EnumDescriptorProto_EnumReservedRange_set_end)(UPB_DESC(EnumDescriptorProto_EnumReservedRange) *msg, int32_t value) {
  const upb_MiniTableField field = *upb_MiniTable_FindFieldByNumber(UPB_DESC(_EnumDescriptorProto__EnumReservedRange_msg_init)(), 2);
  _upb_Message_SetNonExtensionField(msg, &field, &value);
}

/* google.protobuf.EnumValueDescriptorProto */

UPB_INLINE UPB_DESC(EnumValueDescriptorProto)* UPB_DESC(EnumValueDescriptorProto_new)(upb_Arena* arena) {
  return (UPB_DESC(EnumValueDescriptorProto)*)_upb_Message_New(UPB_DESC(_EnumValueDescriptorProto_msg_init)(), arena);
}
UPB_INLINE UPB_DESC(EnumValueDescriptorProto)* UPB_DESC(EnumValueDescriptorProto_parse)(const char* buf, size_t size, upb_Arena* arena) {
  UPB_DESC(EnumValueDescriptorProto)* ret = UPB_DESC(EnumValueDescriptorProto_new)(arena);
  if (!ret) return NULL;
  if (upb_Decode(buf, size, ret, UPB_DESC(_EnumValueDescriptorProto_msg_init)(), NULL, 0, arena) != kUpb_DecodeStatus_Ok) {
    return NULL;
  }
  return ret;
}
UPB_INLINE UPB_DESC(EnumValueDescriptorProto)* UPB_DESC(EnumValueDescriptorProto_parse_ex)(const char* buf, size_t size,
                           const upb_ExtensionRegistry* extreg,
                           int options, upb_Arena* arena) {
  UPB_DESC(EnumValueDescriptorProto)* ret = UPB_DESC(EnumValueDescriptorProto_new)(arena);
  if (!ret) return NULL;
  if (upb_Decode(buf, size, ret, UPB_DESC(_EnumValueDescriptorProto_msg_init)(), extreg, options, arena) !=
      kUpb_DecodeStatus_Ok) {
    return NULL;
  }
  return ret;
}
UPB_INLINE char* UPB_DESC(EnumValueDescriptorProto_serialize)(const UPB_DESC(EnumValueDescriptorProto)* msg, upb_Arena* arena, size_t* len) {
  char* ptr;
  (void)upb_Encode(msg, UPB_DESC(_EnumValueDescriptorProto_msg_init)(), 0, arena, &ptr, len);
  return ptr;
}
UPB_INLINE char* UPB_DESC(EnumValueDescriptorProto_serialize_ex)(const UPB_DESC(EnumValueDescriptorProto)* msg, int options,
                                 upb_Arena* arena, size_t* len) {
  char* ptr;
  (void)upb_Encode(msg, UPB_DESC(_EnumValueDescriptorProto_msg_init)(), options, arena, &ptr, len);
  return ptr;
}
UPB_INLINE void UPB_DESC(EnumValueDescriptorProto_clear_name)(UPB_DESC(EnumValueDescriptorProto)* msg) {
  const upb_MiniTableField field = *upb_MiniTable_FindFieldByNumber(UPB_DESC(_EnumValueDescriptorProto_msg_init)(), 1);
  _upb_Message_ClearNonExtensionField(msg, &field);
}
UPB_INLINE upb_StringView UPB_DESC(EnumValueDescriptorProto_name)(const UPB_DESC(EnumValueDescriptorProto)* msg) {
  upb_StringView default_val = upb_StringView_FromString("");
  upb_StringView ret;
  const upb_MiniTableField field = *upb_MiniTable_FindFieldByNumber(UPB_DESC(_EnumValueDescriptorProto_msg_init)(), 1);
  _upb_Message_GetNonExtensionField(msg, &field, &default_val, &ret);
  return ret;
}
UPB_INLINE bool UPB_DESC(EnumValueDescriptorProto_has_name)(const UPB_DESC(EnumValueDescriptorProto)* msg) {
  const upb_MiniTableField field = *upb_MiniTable_FindFieldByNumber(UPB_DESC(_EnumValueDescriptorProto_msg_init)(), 1);
  return _upb_Message_HasNonExtensionField(msg, &field);
}
UPB_INLINE void UPB_DESC(EnumValueDescriptorProto_clear_number)(UPB_DESC(EnumValueDescriptorProto)* msg) {
  const upb_MiniTableField field = *upb_MiniTable_FindFieldByNumber(UPB_DESC(_EnumValueDescriptorProto_msg_init)(), 2);
  _upb_Message_ClearNonExtensionField(msg, &field);
}
UPB_INLINE int32_t UPB_DESC(EnumValueDescriptorProto_number)(const UPB_DESC(EnumValueDescriptorProto)* msg) {
  int32_t default_val = (int32_t)0;
  int32_t ret;
  const upb_MiniTableField field = *upb_MiniTable_FindFieldByNumber(UPB_DESC(_EnumValueDescriptorProto_msg_init)(), 2);
  _upb_Message_GetNonExtensionField(msg, &field, &default_val, &ret);
  return ret;
}
UPB_INLINE bool UPB_DESC(EnumValueDescriptorProto_has_number)(const UPB_DESC(EnumValueDescriptorProto)* msg) {
  const upb_MiniTableField field = *upb_MiniTable_FindFieldByNumber(UPB_DESC(_EnumValueDescriptorProto_msg_init)(), 2);
  return _upb_Message_HasNonExtensionField(msg, &field);
}
UPB_INLINE void UPB_DESC(EnumValueDescriptorProto_clear_options)(UPB_DESC(EnumValueDescriptorProto)* msg) {
  const upb_MiniTableField field = *upb_MiniTable_FindFieldByNumber(UPB_DESC(_EnumValueDescriptorProto_msg_init)(), 3);
  _upb_Message_ClearNonExtensionField(msg, &field);
}
UPB_INLINE const UPB_DESC(EnumValueOptions)* UPB_DESC(EnumValueDescriptorProto_options)(const UPB_DESC(EnumValueDescriptorProto)* msg) {
  const UPB_DESC(EnumValueOptions)* default_val = NULL;
  const UPB_DESC(EnumValueOptions)* ret;
  const upb_MiniTableField field = *upb_MiniTable_FindFieldByNumber(UPB_DESC(_EnumValueDescriptorProto_msg_init)(), 3);
  _upb_Message_GetNonExtensionField(msg, &field, &default_val, &ret);
  return ret;
}
UPB_INLINE bool UPB_DESC(EnumValueDescriptorProto_has_options)(const UPB_DESC(EnumValueDescriptorProto)* msg) {
  const upb_MiniTableField field = *upb_MiniTable_FindFieldByNumber(UPB_DESC(_EnumValueDescriptorProto_msg_init)(), 3);
  return _upb_Message_HasNonExtensionField(msg, &field);
}

UPB_INLINE void UPB_DESC(EnumValueDescriptorProto_set_name)(UPB_DESC(EnumValueDescriptorProto) *msg, upb_StringView value) {
  const upb_MiniTableField field = *upb_MiniTable_FindFieldByNumber(UPB_DESC(_EnumValueDescriptorProto_msg_init)(), 1);
  _upb_Message_SetNonExtensionField(msg, &field, &value);
}
UPB_INLINE void UPB_DESC(EnumValueDescriptorProto_set_number)(UPB_DESC(EnumValueDescriptorProto) *msg, int32_t value) {
  const upb_MiniTableField field = *upb_MiniTable_FindFieldByNumber(UPB_DESC(_EnumValueDescriptorProto_msg_init)(), 2);
  _upb_Message_SetNonExtensionField(msg, &field, &value);
}
UPB_INLINE void UPB_DESC(EnumValueDescriptorProto_set_options)(UPB_DESC(EnumValueDescriptorProto) *msg, UPB_DESC(EnumValueOptions)* value) {
  const upb_MiniTableField field = *upb_MiniTable_FindFieldByNumber(UPB_DESC(_EnumValueDescriptorProto_msg_init)(), 3);
  _upb_Message_SetNonExtensionField(msg, &field, &value);
}
UPB_INLINE struct UPB_DESC(EnumValueOptions)* UPB_DESC(EnumValueDescriptorProto_mutable_options)(UPB_DESC(EnumValueDescriptorProto)* msg, upb_Arena* arena) {
  struct UPB_DESC(EnumValueOptions)* sub = (struct UPB_DESC(EnumValueOptions)*)UPB_DESC(EnumValueDescriptorProto_options)(msg);
  if (sub == NULL) {
    sub = (struct UPB_DESC(EnumValueOptions)*)_upb_Message_New(UPB_DESC(_EnumValueOptions_msg_init)(), arena);
    if (sub) UPB_DESC(EnumValueDescriptorProto_set_options)(msg, sub);
  }
  return sub;
}

/* google.protobuf.ServiceDescriptorProto */

UPB_INLINE UPB_DESC(ServiceDescriptorProto)* UPB_DESC(ServiceDescriptorProto_new)(upb_Arena* arena) {
  return (UPB_DESC(ServiceDescriptorProto)*)_upb_Message_New(UPB_DESC(_ServiceDescriptorProto_msg_init)(), arena);
}
UPB_INLINE UPB_DESC(ServiceDescriptorProto)* UPB_DESC(ServiceDescriptorProto_parse)(const char* buf, size_t size, upb_Arena* arena) {
  UPB_DESC(ServiceDescriptorProto)* ret = UPB_DESC(ServiceDescriptorProto_new)(arena);
  if (!ret) return NULL;
  if (upb_Decode(buf, size, ret, UPB_DESC(_ServiceDescriptorProto_msg_init)(), NULL, 0, arena) != kUpb_DecodeStatus_Ok) {
    return NULL;
  }
  return ret;
}
UPB_INLINE UPB_DESC(ServiceDescriptorProto)* UPB_DESC(ServiceDescriptorProto_parse_ex)(const char* buf, size_t size,
                           const upb_ExtensionRegistry* extreg,
                           int options, upb_Arena* arena) {
  UPB_DESC(ServiceDescriptorProto)* ret = UPB_DESC(ServiceDescriptorProto_new)(arena);
  if (!ret) return NULL;
  if (upb_Decode(buf, size, ret, UPB_DESC(_ServiceDescriptorProto_msg_init)(), extreg, options, arena) !=
      kUpb_DecodeStatus_Ok) {
    return NULL;
  }
  return ret;
}
UPB_INLINE char* UPB_DESC(ServiceDescriptorProto_serialize)(const UPB_DESC(ServiceDescriptorProto)* msg, upb_Arena* arena, size_t* len) {
  char* ptr;
  (void)upb_Encode(msg, UPB_DESC(_ServiceDescriptorProto_msg_init)(), 0, arena, &ptr, len);
  return ptr;
}
UPB_INLINE char* UPB_DESC(ServiceDescriptorProto_serialize_ex)(const UPB_DESC(ServiceDescriptorProto)* msg, int options,
                                 upb_Arena* arena, size_t* len) {
  char* ptr;
  (void)upb_Encode(msg, UPB_DESC(_ServiceDescriptorProto_msg_init)(), options, arena, &ptr, len);
  return ptr;
}
UPB_INLINE void UPB_DESC(ServiceDescriptorProto_clear_name)(UPB_DESC(ServiceDescriptorProto)* msg) {
  const upb_MiniTableField field = *upb_MiniTable_FindFieldByNumber(UPB_DESC(_ServiceDescriptorProto_msg_init)(), 1);
  _upb_Message_ClearNonExtensionField(msg, &field);
}
UPB_INLINE upb_StringView UPB_DESC(ServiceDescriptorProto_name)(const UPB_DESC(ServiceDescriptorProto)* msg) {
  upb_StringView default_val = upb_StringView_FromString("");
  upb_StringView ret;
  const upb_MiniTableField field = *upb_MiniTable_FindFieldByNumber(UPB_DESC(_ServiceDescriptorProto_msg_init)(), 1);
  _upb_Message_GetNonExtensionField(msg, &field, &default_val, &ret);
  return ret;
}
UPB_INLINE bool UPB_DESC(ServiceDescriptorProto_has_name)(const UPB_DESC(ServiceDescriptorProto)* msg) {
  const upb_MiniTableField field = *upb_MiniTable_FindFieldByNumber(UPB_DESC(_ServiceDescriptorProto_msg_init)(), 1);
  return _upb_Message_HasNonExtensionField(msg, &field);
}
UPB_INLINE void UPB_DESC(ServiceDescriptorProto_clear_method)(UPB_DESC(ServiceDescriptorProto)* msg) {
  const upb_MiniTableField field = *upb_MiniTable_FindFieldByNumber(UPB_DESC(_ServiceDescriptorProto_msg_init)(), 2);
  _upb_Message_ClearNonExtensionField(msg, &field);
}
UPB_INLINE const UPB_DESC(MethodDescriptorProto)* const* UPB_DESC(ServiceDescriptorProto_method)(const UPB_DESC(ServiceDescriptorProto)* msg, size_t* size) {
  const upb_MiniTableField field = *upb_MiniTable_FindFieldByNumber(UPB_DESC(_ServiceDescriptorProto_msg_init)(), 2);
  const upb_Array* arr = upb_Message_GetArray(msg, &field);
  if (arr) {
    if (size) *size = arr->size;
    return (const UPB_DESC(MethodDescriptorProto)* const*)_upb_array_constptr(arr);
  } else {
    if (size) *size = 0;
    return NULL;
  }
}
UPB_INLINE const upb_Array* _google_protobuf_ServiceDescriptorProto_method_upb_array(const UPB_DESC(ServiceDescriptorProto)* msg, size_t* size) {
  const upb_MiniTableField field = *upb_MiniTable_FindFieldByNumber(UPB_DESC(_ServiceDescriptorProto_msg_init)(), 2);
  const upb_Array* arr = upb_Message_GetArray(msg, &field);
  if (size) {
    *size = arr ? arr->size : 0;
  }
  return arr;
}
UPB_INLINE upb_Array* _google_protobuf_ServiceDescriptorProto_method_mutable_upb_array(const UPB_DESC(ServiceDescriptorProto)* msg, size_t* size, upb_Arena* arena) {
  const upb_MiniTableField field = *upb_MiniTable_FindFieldByNumber(UPB_DESC(_ServiceDescriptorProto_msg_init)(), 2);
  upb_Array* arr = upb_Message_GetOrCreateMutableArray(
      (upb_Message*)msg, &field, arena);
  if (size) {
    *size = arr ? arr->size : 0;
  }
  return arr;
}
UPB_INLINE bool UPB_DESC(ServiceDescriptorProto_has_method)(const UPB_DESC(ServiceDescriptorProto)* msg) {
  size_t size;
  UPB_DESC(ServiceDescriptorProto_method)(msg, &size);
  return size != 0;
}
UPB_INLINE void UPB_DESC(ServiceDescriptorProto_clear_options)(UPB_DESC(ServiceDescriptorProto)* msg) {
  const upb_MiniTableField field = *upb_MiniTable_FindFieldByNumber(UPB_DESC(_ServiceDescriptorProto_msg_init)(), 3);
  _upb_Message_ClearNonExtensionField(msg, &field);
}
UPB_INLINE const UPB_DESC(ServiceOptions)* UPB_DESC(ServiceDescriptorProto_options)(const UPB_DESC(ServiceDescriptorProto)* msg) {
  const UPB_DESC(ServiceOptions)* default_val = NULL;
  const UPB_DESC(ServiceOptions)* ret;
  const upb_MiniTableField field = *upb_MiniTable_FindFieldByNumber(UPB_DESC(_ServiceDescriptorProto_msg_init)(), 3);
  _upb_Message_GetNonExtensionField(msg, &field, &default_val, &ret);
  return ret;
}
UPB_INLINE bool UPB_DESC(ServiceDescriptorProto_has_options)(const UPB_DESC(ServiceDescriptorProto)* msg) {
  const upb_MiniTableField field = *upb_MiniTable_FindFieldByNumber(UPB_DESC(_ServiceDescriptorProto_msg_init)(), 3);
  return _upb_Message_HasNonExtensionField(msg, &field);
}

UPB_INLINE void UPB_DESC(ServiceDescriptorProto_set_name)(UPB_DESC(ServiceDescriptorProto) *msg, upb_StringView value) {
  const upb_MiniTableField field = *upb_MiniTable_FindFieldByNumber(UPB_DESC(_ServiceDescriptorProto_msg_init)(), 1);
  _upb_Message_SetNonExtensionField(msg, &field, &value);
}
UPB_INLINE UPB_DESC(MethodDescriptorProto)** UPB_DESC(ServiceDescriptorProto_mutable_method)(UPB_DESC(ServiceDescriptorProto)* msg, size_t* size) {
  upb_MiniTableField field = *upb_MiniTable_FindFieldByNumber(UPB_DESC(_ServiceDescriptorProto_msg_init)(), 2);
  upb_Array* arr = upb_Message_GetMutableArray(msg, &field);
  if (arr) {
    if (size) *size = arr->size;
    return (UPB_DESC(MethodDescriptorProto)**)_upb_array_ptr(arr);
  } else {
    if (size) *size = 0;
    return NULL;
  }
}
UPB_INLINE UPB_DESC(MethodDescriptorProto)** UPB_DESC(ServiceDescriptorProto_resize_method)(UPB_DESC(ServiceDescriptorProto)* msg, size_t size, upb_Arena* arena) {
  upb_MiniTableField field = *upb_MiniTable_FindFieldByNumber(UPB_DESC(_ServiceDescriptorProto_msg_init)(), 2);
  return (UPB_DESC(MethodDescriptorProto)**)upb_Message_ResizeArrayUninitialized(msg, &field, size, arena);
}
UPB_INLINE struct UPB_DESC(MethodDescriptorProto)* UPB_DESC(ServiceDescriptorProto_add_method)(UPB_DESC(ServiceDescriptorProto)* msg, upb_Arena* arena) {
  upb_MiniTableField field = *upb_MiniTable_FindFieldByNumber(UPB_DESC(_ServiceDescriptorProto_msg_init)(), 2);
  upb_Array* arr = upb_Message_GetOrCreateMutableArray(msg, &field, arena);
  if (!arr || !_upb_Array_ResizeUninitialized(arr, arr->size + 1, arena)) {
    return NULL;
  }
  struct UPB_DESC(MethodDescriptorProto)* sub = (struct UPB_DESC(MethodDescriptorProto)*)_upb_Message_New(UPB_DESC(_MethodDescriptorProto_msg_init)(), arena);
  if (!arr || !sub) return NULL;
  _upb_Array_Set(arr, arr->size - 1, &sub, sizeof(sub));
  return sub;
}
UPB_INLINE void UPB_DESC(ServiceDescriptorProto_set_options)(UPB_DESC(ServiceDescriptorProto) *msg, UPB_DESC(ServiceOptions)* value) {
  const upb_MiniTableField field = *upb_MiniTable_FindFieldByNumber(UPB_DESC(_ServiceDescriptorProto_msg_init)(), 3);
  _upb_Message_SetNonExtensionField(msg, &field, &value);
}
UPB_INLINE struct UPB_DESC(ServiceOptions)* UPB_DESC(ServiceDescriptorProto_mutable_options)(UPB_DESC(ServiceDescriptorProto)* msg, upb_Arena* arena) {
  struct UPB_DESC(ServiceOptions)* sub = (struct UPB_DESC(ServiceOptions)*)UPB_DESC(ServiceDescriptorProto_options)(msg);
  if (sub == NULL) {
    sub = (struct UPB_DESC(ServiceOptions)*)_upb_Message_New(UPB_DESC(_ServiceOptions_msg_init)(), arena);
    if (sub) UPB_DESC(ServiceDescriptorProto_set_options)(msg, sub);
  }
  return sub;
}

/* google.protobuf.MethodDescriptorProto */

UPB_INLINE UPB_DESC(MethodDescriptorProto)* UPB_DESC(MethodDescriptorProto_new)(upb_Arena* arena) {
  return (UPB_DESC(MethodDescriptorProto)*)_upb_Message_New(UPB_DESC(_MethodDescriptorProto_msg_init)(), arena);
}
UPB_INLINE UPB_DESC(MethodDescriptorProto)* UPB_DESC(MethodDescriptorProto_parse)(const char* buf, size_t size, upb_Arena* arena) {
  UPB_DESC(MethodDescriptorProto)* ret = UPB_DESC(MethodDescriptorProto_new)(arena);
  if (!ret) return NULL;
  if (upb_Decode(buf, size, ret, UPB_DESC(_MethodDescriptorProto_msg_init)(), NULL, 0, arena) != kUpb_DecodeStatus_Ok) {
    return NULL;
  }
  return ret;
}
UPB_INLINE UPB_DESC(MethodDescriptorProto)* UPB_DESC(MethodDescriptorProto_parse_ex)(const char* buf, size_t size,
                           const upb_ExtensionRegistry* extreg,
                           int options, upb_Arena* arena) {
  UPB_DESC(MethodDescriptorProto)* ret = UPB_DESC(MethodDescriptorProto_new)(arena);
  if (!ret) return NULL;
  if (upb_Decode(buf, size, ret, UPB_DESC(_MethodDescriptorProto_msg_init)(), extreg, options, arena) !=
      kUpb_DecodeStatus_Ok) {
    return NULL;
  }
  return ret;
}
UPB_INLINE char* UPB_DESC(MethodDescriptorProto_serialize)(const UPB_DESC(MethodDescriptorProto)* msg, upb_Arena* arena, size_t* len) {
  char* ptr;
  (void)upb_Encode(msg, UPB_DESC(_MethodDescriptorProto_msg_init)(), 0, arena, &ptr, len);
  return ptr;
}
UPB_INLINE char* UPB_DESC(MethodDescriptorProto_serialize_ex)(const UPB_DESC(MethodDescriptorProto)* msg, int options,
                                 upb_Arena* arena, size_t* len) {
  char* ptr;
  (void)upb_Encode(msg, UPB_DESC(_MethodDescriptorProto_msg_init)(), options, arena, &ptr, len);
  return ptr;
}
UPB_INLINE void UPB_DESC(MethodDescriptorProto_clear_name)(UPB_DESC(MethodDescriptorProto)* msg) {
  const upb_MiniTableField field = *upb_MiniTable_FindFieldByNumber(UPB_DESC(_MethodDescriptorProto_msg_init)(), 1);
  _upb_Message_ClearNonExtensionField(msg, &field);
}
UPB_INLINE upb_StringView UPB_DESC(MethodDescriptorProto_name)(const UPB_DESC(MethodDescriptorProto)* msg) {
  upb_StringView default_val = upb_StringView_FromString("");
  upb_StringView ret;
  const upb_MiniTableField field = *upb_MiniTable_FindFieldByNumber(UPB_DESC(_MethodDescriptorProto_msg_init)(), 1);
  _upb_Message_GetNonExtensionField(msg, &field, &default_val, &ret);
  return ret;
}
UPB_INLINE bool UPB_DESC(MethodDescriptorProto_has_name)(const UPB_DESC(MethodDescriptorProto)* msg) {
  const upb_MiniTableField field = *upb_MiniTable_FindFieldByNumber(UPB_DESC(_MethodDescriptorProto_msg_init)(), 1);
  return _upb_Message_HasNonExtensionField(msg, &field);
}
UPB_INLINE void UPB_DESC(MethodDescriptorProto_clear_input_type)(UPB_DESC(MethodDescriptorProto)* msg) {
  const upb_MiniTableField field = *upb_MiniTable_FindFieldByNumber(UPB_DESC(_MethodDescriptorProto_msg_init)(), 2);
  _upb_Message_ClearNonExtensionField(msg, &field);
}
UPB_INLINE upb_StringView UPB_DESC(MethodDescriptorProto_input_type)(const UPB_DESC(MethodDescriptorProto)* msg) {
  upb_StringView default_val = upb_StringView_FromString("");
  upb_StringView ret;
  const upb_MiniTableField field = *upb_MiniTable_FindFieldByNumber(UPB_DESC(_MethodDescriptorProto_msg_init)(), 2);
  _upb_Message_GetNonExtensionField(msg, &field, &default_val, &ret);
  return ret;
}
UPB_INLINE bool UPB_DESC(MethodDescriptorProto_has_input_type)(const UPB_DESC(MethodDescriptorProto)* msg) {
  const upb_MiniTableField field = *upb_MiniTable_FindFieldByNumber(UPB_DESC(_MethodDescriptorProto_msg_init)(), 2);
  return _upb_Message_HasNonExtensionField(msg, &field);
}
UPB_INLINE void UPB_DESC(MethodDescriptorProto_clear_output_type)(UPB_DESC(MethodDescriptorProto)* msg) {
  const upb_MiniTableField field = *upb_MiniTable_FindFieldByNumber(UPB_DESC(_MethodDescriptorProto_msg_init)(), 3);
  _upb_Message_ClearNonExtensionField(msg, &field);
}
UPB_INLINE upb_StringView UPB_DESC(MethodDescriptorProto_output_type)(const UPB_DESC(MethodDescriptorProto)* msg) {
  upb_StringView default_val = upb_StringView_FromString("");
  upb_StringView ret;
  const upb_MiniTableField field = *upb_MiniTable_FindFieldByNumber(UPB_DESC(_MethodDescriptorProto_msg_init)(), 3);
  _upb_Message_GetNonExtensionField(msg, &field, &default_val, &ret);
  return ret;
}
UPB_INLINE bool UPB_DESC(MethodDescriptorProto_has_output_type)(const UPB_DESC(MethodDescriptorProto)* msg) {
  const upb_MiniTableField field = *upb_MiniTable_FindFieldByNumber(UPB_DESC(_MethodDescriptorProto_msg_init)(), 3);
  return _upb_Message_HasNonExtensionField(msg, &field);
}
UPB_INLINE void UPB_DESC(MethodDescriptorProto_clear_options)(UPB_DESC(MethodDescriptorProto)* msg) {
  const upb_MiniTableField field = *upb_MiniTable_FindFieldByNumber(UPB_DESC(_MethodDescriptorProto_msg_init)(), 4);
  _upb_Message_ClearNonExtensionField(msg, &field);
}
UPB_INLINE const UPB_DESC(MethodOptions)* UPB_DESC(MethodDescriptorProto_options)(const UPB_DESC(MethodDescriptorProto)* msg) {
  const UPB_DESC(MethodOptions)* default_val = NULL;
  const UPB_DESC(MethodOptions)* ret;
  const upb_MiniTableField field = *upb_MiniTable_FindFieldByNumber(UPB_DESC(_MethodDescriptorProto_msg_init)(), 4);
  _upb_Message_GetNonExtensionField(msg, &field, &default_val, &ret);
  return ret;
}
UPB_INLINE bool UPB_DESC(MethodDescriptorProto_has_options)(const UPB_DESC(MethodDescriptorProto)* msg) {
  const upb_MiniTableField field = *upb_MiniTable_FindFieldByNumber(UPB_DESC(_MethodDescriptorProto_msg_init)(), 4);
  return _upb_Message_HasNonExtensionField(msg, &field);
}
UPB_INLINE void UPB_DESC(MethodDescriptorProto_clear_client_streaming)(UPB_DESC(MethodDescriptorProto)* msg) {
  const upb_MiniTableField field = *upb_MiniTable_FindFieldByNumber(UPB_DESC(_MethodDescriptorProto_msg_init)(), 5);
  _upb_Message_ClearNonExtensionField(msg, &field);
}
UPB_INLINE bool UPB_DESC(MethodDescriptorProto_client_streaming)(const UPB_DESC(MethodDescriptorProto)* msg) {
  bool default_val = false;
  bool ret;
  const upb_MiniTableField field = *upb_MiniTable_FindFieldByNumber(UPB_DESC(_MethodDescriptorProto_msg_init)(), 5);
  _upb_Message_GetNonExtensionField(msg, &field, &default_val, &ret);
  return ret;
}
UPB_INLINE bool UPB_DESC(MethodDescriptorProto_has_client_streaming)(const UPB_DESC(MethodDescriptorProto)* msg) {
  const upb_MiniTableField field = *upb_MiniTable_FindFieldByNumber(UPB_DESC(_MethodDescriptorProto_msg_init)(), 5);
  return _upb_Message_HasNonExtensionField(msg, &field);
}
UPB_INLINE void UPB_DESC(MethodDescriptorProto_clear_server_streaming)(UPB_DESC(MethodDescriptorProto)* msg) {
  const upb_MiniTableField field = *upb_MiniTable_FindFieldByNumber(UPB_DESC(_MethodDescriptorProto_msg_init)(), 6);
  _upb_Message_ClearNonExtensionField(msg, &field);
}
UPB_INLINE bool UPB_DESC(MethodDescriptorProto_server_streaming)(const UPB_DESC(MethodDescriptorProto)* msg) {
  bool default_val = false;
  bool ret;
  const upb_MiniTableField field = *upb_MiniTable_FindFieldByNumber(UPB_DESC(_MethodDescriptorProto_msg_init)(), 6);
  _upb_Message_GetNonExtensionField(msg, &field, &default_val, &ret);
  return ret;
}
UPB_INLINE bool UPB_DESC(MethodDescriptorProto_has_server_streaming)(const UPB_DESC(MethodDescriptorProto)* msg) {
  const upb_MiniTableField field = *upb_MiniTable_FindFieldByNumber(UPB_DESC(_MethodDescriptorProto_msg_init)(), 6);
  return _upb_Message_HasNonExtensionField(msg, &field);
}

UPB_INLINE void UPB_DESC(MethodDescriptorProto_set_name)(UPB_DESC(MethodDescriptorProto) *msg, upb_StringView value) {
  const upb_MiniTableField field = *upb_MiniTable_FindFieldByNumber(UPB_DESC(_MethodDescriptorProto_msg_init)(), 1);
  _upb_Message_SetNonExtensionField(msg, &field, &value);
}
UPB_INLINE void UPB_DESC(MethodDescriptorProto_set_input_type)(UPB_DESC(MethodDescriptorProto) *msg, upb_StringView value) {
  const upb_MiniTableField field = *upb_MiniTable_FindFieldByNumber(UPB_DESC(_MethodDescriptorProto_msg_init)(), 2);
  _upb_Message_SetNonExtensionField(msg, &field, &value);
}
UPB_INLINE void UPB_DESC(MethodDescriptorProto_set_output_type)(UPB_DESC(MethodDescriptorProto) *msg, upb_StringView value) {
  const upb_MiniTableField field = *upb_MiniTable_FindFieldByNumber(UPB_DESC(_MethodDescriptorProto_msg_init)(), 3);
  _upb_Message_SetNonExtensionField(msg, &field, &value);
}
UPB_INLINE void UPB_DESC(MethodDescriptorProto_set_options)(UPB_DESC(MethodDescriptorProto) *msg, UPB_DESC(MethodOptions)* value) {
  const upb_MiniTableField field = *upb_MiniTable_FindFieldByNumber(UPB_DESC(_MethodDescriptorProto_msg_init)(), 4);
  _upb_Message_SetNonExtensionField(msg, &field, &value);
}
UPB_INLINE struct UPB_DESC(MethodOptions)* UPB_DESC(MethodDescriptorProto_mutable_options)(UPB_DESC(MethodDescriptorProto)* msg, upb_Arena* arena) {
  struct UPB_DESC(MethodOptions)* sub = (struct UPB_DESC(MethodOptions)*)UPB_DESC(MethodDescriptorProto_options)(msg);
  if (sub == NULL) {
    sub = (struct UPB_DESC(MethodOptions)*)_upb_Message_New(UPB_DESC(_MethodOptions_msg_init)(), arena);
    if (sub) UPB_DESC(MethodDescriptorProto_set_options)(msg, sub);
  }
  return sub;
}
UPB_INLINE void UPB_DESC(MethodDescriptorProto_set_client_streaming)(UPB_DESC(MethodDescriptorProto) *msg, bool value) {
  const upb_MiniTableField field = *upb_MiniTable_FindFieldByNumber(UPB_DESC(_MethodDescriptorProto_msg_init)(), 5);
  _upb_Message_SetNonExtensionField(msg, &field, &value);
}
UPB_INLINE void UPB_DESC(MethodDescriptorProto_set_server_streaming)(UPB_DESC(MethodDescriptorProto) *msg, bool value) {
  const upb_MiniTableField field = *upb_MiniTable_FindFieldByNumber(UPB_DESC(_MethodDescriptorProto_msg_init)(), 6);
  _upb_Message_SetNonExtensionField(msg, &field, &value);
}

/* google.protobuf.FileOptions */

UPB_INLINE UPB_DESC(FileOptions)* UPB_DESC(FileOptions_new)(upb_Arena* arena) {
  return (UPB_DESC(FileOptions)*)_upb_Message_New(UPB_DESC(_FileOptions_msg_init)(), arena);
}
UPB_INLINE UPB_DESC(FileOptions)* UPB_DESC(FileOptions_parse)(const char* buf, size_t size, upb_Arena* arena) {
  UPB_DESC(FileOptions)* ret = UPB_DESC(FileOptions_new)(arena);
  if (!ret) return NULL;
  if (upb_Decode(buf, size, ret, UPB_DESC(_FileOptions_msg_init)(), NULL, 0, arena) != kUpb_DecodeStatus_Ok) {
    return NULL;
  }
  return ret;
}
UPB_INLINE UPB_DESC(FileOptions)* UPB_DESC(FileOptions_parse_ex)(const char* buf, size_t size,
                           const upb_ExtensionRegistry* extreg,
                           int options, upb_Arena* arena) {
  UPB_DESC(FileOptions)* ret = UPB_DESC(FileOptions_new)(arena);
  if (!ret) return NULL;
  if (upb_Decode(buf, size, ret, UPB_DESC(_FileOptions_msg_init)(), extreg, options, arena) !=
      kUpb_DecodeStatus_Ok) {
    return NULL;
  }
  return ret;
}
UPB_INLINE char* UPB_DESC(FileOptions_serialize)(const UPB_DESC(FileOptions)* msg, upb_Arena* arena, size_t* len) {
  char* ptr;
  (void)upb_Encode(msg, UPB_DESC(_FileOptions_msg_init)(), 0, arena, &ptr, len);
  return ptr;
}
UPB_INLINE char* UPB_DESC(FileOptions_serialize_ex)(const UPB_DESC(FileOptions)* msg, int options,
                                 upb_Arena* arena, size_t* len) {
  char* ptr;
  (void)upb_Encode(msg, UPB_DESC(_FileOptions_msg_init)(), options, arena, &ptr, len);
  return ptr;
}
UPB_INLINE void UPB_DESC(FileOptions_clear_java_package)(UPB_DESC(FileOptions)* msg) {
  const upb_MiniTableField field = *upb_MiniTable_FindFieldByNumber(UPB_DESC(_FileOptions_msg_init)(), 1);
  _upb_Message_ClearNonExtensionField(msg, &field);
}
UPB_INLINE upb_StringView UPB_DESC(FileOptions_java_package)(const UPB_DESC(FileOptions)* msg) {
  upb_StringView default_val = upb_StringView_FromString("");
  upb_StringView ret;
  const upb_MiniTableField field = *upb_MiniTable_FindFieldByNumber(UPB_DESC(_FileOptions_msg_init)(), 1);
  _upb_Message_GetNonExtensionField(msg, &field, &default_val, &ret);
  return ret;
}
UPB_INLINE bool UPB_DESC(FileOptions_has_java_package)(const UPB_DESC(FileOptions)* msg) {
  const upb_MiniTableField field = *upb_MiniTable_FindFieldByNumber(UPB_DESC(_FileOptions_msg_init)(), 1);
  return _upb_Message_HasNonExtensionField(msg, &field);
}
UPB_INLINE void UPB_DESC(FileOptions_clear_java_outer_classname)(UPB_DESC(FileOptions)* msg) {
  const upb_MiniTableField field = *upb_MiniTable_FindFieldByNumber(UPB_DESC(_FileOptions_msg_init)(), 8);
  _upb_Message_ClearNonExtensionField(msg, &field);
}
UPB_INLINE upb_StringView UPB_DESC(FileOptions_java_outer_classname)(const UPB_DESC(FileOptions)* msg) {
  upb_StringView default_val = upb_StringView_FromString("");
  upb_StringView ret;
  const upb_MiniTableField field = *upb_MiniTable_FindFieldByNumber(UPB_DESC(_FileOptions_msg_init)(), 8);
  _upb_Message_GetNonExtensionField(msg, &field, &default_val, &ret);
  return ret;
}
UPB_INLINE bool UPB_DESC(FileOptions_has_java_outer_classname)(const UPB_DESC(FileOptions)* msg) {
  const upb_MiniTableField field = *upb_MiniTable_FindFieldByNumber(UPB_DESC(_FileOptions_msg_init)(), 8);
  return _upb_Message_HasNonExtensionField(msg, &field);
}
UPB_INLINE void UPB_DESC(FileOptions_clear_optimize_for)(UPB_DESC(FileOptions)* msg) {
  const upb_MiniTableField field = *upb_MiniTable_FindFieldByNumber(UPB_DESC(_FileOptions_msg_init)(), 9);
  _upb_Message_ClearNonExtensionField(msg, &field);
}
UPB_INLINE int32_t UPB_DESC(FileOptions_optimize_for)(const UPB_DESC(FileOptions)* msg) {
  int32_t default_val = 1;
  int32_t ret;
  const upb_MiniTableField field = *upb_MiniTable_FindFieldByNumber(UPB_DESC(_FileOptions_msg_init)(), 9);
  _upb_Message_GetNonExtensionField(msg, &field, &default_val, &ret);
  return ret;
}
UPB_INLINE bool UPB_DESC(FileOptions_has_optimize_for)(const UPB_DESC(FileOptions)* msg) {
  const upb_MiniTableField field = *upb_MiniTable_FindFieldByNumber(UPB_DESC(_FileOptions_msg_init)(), 9);
  return _upb_Message_HasNonExtensionField(msg, &field);
}
UPB_INLINE void UPB_DESC(FileOptions_clear_java_multiple_files)(UPB_DESC(FileOptions)* msg) {
  const upb_MiniTableField field = *upb_MiniTable_FindFieldByNumber(UPB_DESC(_FileOptions_msg_init)(), 10);
  _upb_Message_ClearNonExtensionField(msg, &field);
}
UPB_INLINE bool UPB_DESC(FileOptions_java_multiple_files)(const UPB_DESC(FileOptions)* msg) {
  bool default_val = false;
  bool ret;
  const upb_MiniTableField field = *upb_MiniTable_FindFieldByNumber(UPB_DESC(_FileOptions_msg_init)(), 10);
  _upb_Message_GetNonExtensionField(msg, &field, &default_val, &ret);
  return ret;
}
UPB_INLINE bool UPB_DESC(FileOptions_has_java_multiple_files)(const UPB_DESC(FileOptions)* msg) {
  const upb_MiniTableField field = *upb_MiniTable_FindFieldByNumber(UPB_DESC(_FileOptions_msg_init)(), 10);
  return _upb_Message_HasNonExtensionField(msg, &field);
}
UPB_INLINE void UPB_DESC(FileOptions_clear_go_package)(UPB_DESC(FileOptions)* msg) {
  const upb_MiniTableField field = *upb_MiniTable_FindFieldByNumber(UPB_DESC(_FileOptions_msg_init)(), 11);
  _upb_Message_ClearNonExtensionField(msg, &field);
}
UPB_INLINE upb_StringView UPB_DESC(FileOptions_go_package)(const UPB_DESC(FileOptions)* msg) {
  upb_StringView default_val = upb_StringView_FromString("");
  upb_StringView ret;
  const upb_MiniTableField field = *upb_MiniTable_FindFieldByNumber(UPB_DESC(_FileOptions_msg_init)(), 11);
  _upb_Message_GetNonExtensionField(msg, &field, &default_val, &ret);
  return ret;
}
UPB_INLINE bool UPB_DESC(FileOptions_has_go_package)(const UPB_DESC(FileOptions)* msg) {
  const upb_MiniTableField field = *upb_MiniTable_FindFieldByNumber(UPB_DESC(_FileOptions_msg_init)(), 11);
  return _upb_Message_HasNonExtensionField(msg, &field);
}
UPB_INLINE void UPB_DESC(FileOptions_clear_cc_generic_services)(UPB_DESC(FileOptions)* msg) {
  const upb_MiniTableField field = *upb_MiniTable_FindFieldByNumber(UPB_DESC(_FileOptions_msg_init)(), 16);
  _upb_Message_ClearNonExtensionField(msg, &field);
}
UPB_INLINE bool UPB_DESC(FileOptions_cc_generic_services)(const UPB_DESC(FileOptions)* msg) {
  bool default_val = false;
  bool ret;
  const upb_MiniTableField field = *upb_MiniTable_FindFieldByNumber(UPB_DESC(_FileOptions_msg_init)(), 16);
  _upb_Message_GetNonExtensionField(msg, &field, &default_val, &ret);
  return ret;
}
UPB_INLINE bool UPB_DESC(FileOptions_has_cc_generic_services)(const UPB_DESC(FileOptions)* msg) {
  const upb_MiniTableField field = *upb_MiniTable_FindFieldByNumber(UPB_DESC(_FileOptions_msg_init)(), 16);
  return _upb_Message_HasNonExtensionField(msg, &field);
}
UPB_INLINE void UPB_DESC(FileOptions_clear_java_generic_services)(UPB_DESC(FileOptions)* msg) {
  const upb_MiniTableField field = *upb_MiniTable_FindFieldByNumber(UPB_DESC(_FileOptions_msg_init)(), 17);
  _upb_Message_ClearNonExtensionField(msg, &field);
}
UPB_INLINE bool UPB_DESC(FileOptions_java_generic_services)(const UPB_DESC(FileOptions)* msg) {
  bool default_val = false;
  bool ret;
  const upb_MiniTableField field = *upb_MiniTable_FindFieldByNumber(UPB_DESC(_FileOptions_msg_init)(), 17);
  _upb_Message_GetNonExtensionField(msg, &field, &default_val, &ret);
  return ret;
}
UPB_INLINE bool UPB_DESC(FileOptions_has_java_generic_services)(const UPB_DESC(FileOptions)* msg) {
  const upb_MiniTableField field = *upb_MiniTable_FindFieldByNumber(UPB_DESC(_FileOptions_msg_init)(), 17);
  return _upb_Message_HasNonExtensionField(msg, &field);
}
UPB_INLINE void UPB_DESC(FileOptions_clear_py_generic_services)(UPB_DESC(FileOptions)* msg) {
  const upb_MiniTableField field = *upb_MiniTable_FindFieldByNumber(UPB_DESC(_FileOptions_msg_init)(), 18);
  _upb_Message_ClearNonExtensionField(msg, &field);
}
UPB_INLINE bool UPB_DESC(FileOptions_py_generic_services)(const UPB_DESC(FileOptions)* msg) {
  bool default_val = false;
  bool ret;
  const upb_MiniTableField field = *upb_MiniTable_FindFieldByNumber(UPB_DESC(_FileOptions_msg_init)(), 18);
  _upb_Message_GetNonExtensionField(msg, &field, &default_val, &ret);
  return ret;
}
UPB_INLINE bool UPB_DESC(FileOptions_has_py_generic_services)(const UPB_DESC(FileOptions)* msg) {
  const upb_MiniTableField field = *upb_MiniTable_FindFieldByNumber(UPB_DESC(_FileOptions_msg_init)(), 18);
  return _upb_Message_HasNonExtensionField(msg, &field);
}
UPB_INLINE void UPB_DESC(FileOptions_clear_java_generate_equals_and_hash)(UPB_DESC(FileOptions)* msg) {
  const upb_MiniTableField field = *upb_MiniTable_FindFieldByNumber(UPB_DESC(_FileOptions_msg_init)(), 20);
  _upb_Message_ClearNonExtensionField(msg, &field);
}
UPB_INLINE bool UPB_DESC(FileOptions_java_generate_equals_and_hash)(const UPB_DESC(FileOptions)* msg) {
  bool default_val = false;
  bool ret;
  const upb_MiniTableField field = *upb_MiniTable_FindFieldByNumber(UPB_DESC(_FileOptions_msg_init)(), 20);
  _upb_Message_GetNonExtensionField(msg, &field, &default_val, &ret);
  return ret;
}
UPB_INLINE bool UPB_DESC(FileOptions_has_java_generate_equals_and_hash)(const UPB_DESC(FileOptions)* msg) {
  const upb_MiniTableField field = *upb_MiniTable_FindFieldByNumber(UPB_DESC(_FileOptions_msg_init)(), 20);
  return _upb_Message_HasNonExtensionField(msg, &field);
}
UPB_INLINE void UPB_DESC(FileOptions_clear_deprecated)(UPB_DESC(FileOptions)* msg) {
  const upb_MiniTableField field = *upb_MiniTable_FindFieldByNumber(UPB_DESC(_FileOptions_msg_init)(), 23);
  _upb_Message_ClearNonExtensionField(msg, &field);
}
UPB_INLINE bool UPB_DESC(FileOptions_deprecated)(const UPB_DESC(FileOptions)* msg) {
  bool default_val = false;
  bool ret;
  const upb_MiniTableField field = *upb_MiniTable_FindFieldByNumber(UPB_DESC(_FileOptions_msg_init)(), 23);
  _upb_Message_GetNonExtensionField(msg, &field, &default_val, &ret);
  return ret;
}
UPB_INLINE bool UPB_DESC(FileOptions_has_deprecated)(const UPB_DESC(FileOptions)* msg) {
  const upb_MiniTableField field = *upb_MiniTable_FindFieldByNumber(UPB_DESC(_FileOptions_msg_init)(), 23);
  return _upb_Message_HasNonExtensionField(msg, &field);
}
UPB_INLINE void UPB_DESC(FileOptions_clear_java_string_check_utf8)(UPB_DESC(FileOptions)* msg) {
  const upb_MiniTableField field = *upb_MiniTable_FindFieldByNumber(UPB_DESC(_FileOptions_msg_init)(), 27);
  _upb_Message_ClearNonExtensionField(msg, &field);
}
UPB_INLINE bool UPB_DESC(FileOptions_java_string_check_utf8)(const UPB_DESC(FileOptions)* msg) {
  bool default_val = false;
  bool ret;
  const upb_MiniTableField field = *upb_MiniTable_FindFieldByNumber(UPB_DESC(_FileOptions_msg_init)(), 27);
  _upb_Message_GetNonExtensionField(msg, &field, &default_val, &ret);
  return ret;
}
UPB_INLINE bool UPB_DESC(FileOptions_has_java_string_check_utf8)(const UPB_DESC(FileOptions)* msg) {
  const upb_MiniTableField field = *upb_MiniTable_FindFieldByNumber(UPB_DESC(_FileOptions_msg_init)(), 27);
  return _upb_Message_HasNonExtensionField(msg, &field);
}
UPB_INLINE void UPB_DESC(FileOptions_clear_cc_enable_arenas)(UPB_DESC(FileOptions)* msg) {
  const upb_MiniTableField field = *upb_MiniTable_FindFieldByNumber(UPB_DESC(_FileOptions_msg_init)(), 31);
  _upb_Message_ClearNonExtensionField(msg, &field);
}
UPB_INLINE bool UPB_DESC(FileOptions_cc_enable_arenas)(const UPB_DESC(FileOptions)* msg) {
  bool default_val = true;
  bool ret;
  const upb_MiniTableField field = *upb_MiniTable_FindFieldByNumber(UPB_DESC(_FileOptions_msg_init)(), 31);
  _upb_Message_GetNonExtensionField(msg, &field, &default_val, &ret);
  return ret;
}
UPB_INLINE bool UPB_DESC(FileOptions_has_cc_enable_arenas)(const UPB_DESC(FileOptions)* msg) {
  const upb_MiniTableField field = *upb_MiniTable_FindFieldByNumber(UPB_DESC(_FileOptions_msg_init)(), 31);
  return _upb_Message_HasNonExtensionField(msg, &field);
}
UPB_INLINE void UPB_DESC(FileOptions_clear_objc_class_prefix)(UPB_DESC(FileOptions)* msg) {
  const upb_MiniTableField field = *upb_MiniTable_FindFieldByNumber(UPB_DESC(_FileOptions_msg_init)(), 36);
  _upb_Message_ClearNonExtensionField(msg, &field);
}
UPB_INLINE upb_StringView UPB_DESC(FileOptions_objc_class_prefix)(const UPB_DESC(FileOptions)* msg) {
  upb_StringView default_val = upb_StringView_FromString("");
  upb_StringView ret;
  const upb_MiniTableField field = *upb_MiniTable_FindFieldByNumber(UPB_DESC(_FileOptions_msg_init)(), 36);
  _upb_Message_GetNonExtensionField(msg, &field, &default_val, &ret);
  return ret;
}
UPB_INLINE bool UPB_DESC(FileOptions_has_objc_class_prefix)(const UPB_DESC(FileOptions)* msg) {
  const upb_MiniTableField field = *upb_MiniTable_FindFieldByNumber(UPB_DESC(_FileOptions_msg_init)(), 36);
  return _upb_Message_HasNonExtensionField(msg, &field);
}
UPB_INLINE void UPB_DESC(FileOptions_clear_csharp_namespace)(UPB_DESC(FileOptions)* msg) {
  const upb_MiniTableField field = *upb_MiniTable_FindFieldByNumber(UPB_DESC(_FileOptions_msg_init)(), 37);
  _upb_Message_ClearNonExtensionField(msg, &field);
}
UPB_INLINE upb_StringView UPB_DESC(FileOptions_csharp_namespace)(const UPB_DESC(FileOptions)* msg) {
  upb_StringView default_val = upb_StringView_FromString("");
  upb_StringView ret;
  const upb_MiniTableField field = *upb_MiniTable_FindFieldByNumber(UPB_DESC(_FileOptions_msg_init)(), 37);
  _upb_Message_GetNonExtensionField(msg, &field, &default_val, &ret);
  return ret;
}
UPB_INLINE bool UPB_DESC(FileOptions_has_csharp_namespace)(const UPB_DESC(FileOptions)* msg) {
  const upb_MiniTableField field = *upb_MiniTable_FindFieldByNumber(UPB_DESC(_FileOptions_msg_init)(), 37);
  return _upb_Message_HasNonExtensionField(msg, &field);
}
UPB_INLINE void UPB_DESC(FileOptions_clear_swift_prefix)(UPB_DESC(FileOptions)* msg) {
  const upb_MiniTableField field = *upb_MiniTable_FindFieldByNumber(UPB_DESC(_FileOptions_msg_init)(), 39);
  _upb_Message_ClearNonExtensionField(msg, &field);
}
UPB_INLINE upb_StringView UPB_DESC(FileOptions_swift_prefix)(const UPB_DESC(FileOptions)* msg) {
  upb_StringView default_val = upb_StringView_FromString("");
  upb_StringView ret;
  const upb_MiniTableField field = *upb_MiniTable_FindFieldByNumber(UPB_DESC(_FileOptions_msg_init)(), 39);
  _upb_Message_GetNonExtensionField(msg, &field, &default_val, &ret);
  return ret;
}
UPB_INLINE bool UPB_DESC(FileOptions_has_swift_prefix)(const UPB_DESC(FileOptions)* msg) {
  const upb_MiniTableField field = *upb_MiniTable_FindFieldByNumber(UPB_DESC(_FileOptions_msg_init)(), 39);
  return _upb_Message_HasNonExtensionField(msg, &field);
}
UPB_INLINE void UPB_DESC(FileOptions_clear_php_class_prefix)(UPB_DESC(FileOptions)* msg) {
  const upb_MiniTableField field = *upb_MiniTable_FindFieldByNumber(UPB_DESC(_FileOptions_msg_init)(), 40);
  _upb_Message_ClearNonExtensionField(msg, &field);
}
UPB_INLINE upb_StringView UPB_DESC(FileOptions_php_class_prefix)(const UPB_DESC(FileOptions)* msg) {
  upb_StringView default_val = upb_StringView_FromString("");
  upb_StringView ret;
  const upb_MiniTableField field = *upb_MiniTable_FindFieldByNumber(UPB_DESC(_FileOptions_msg_init)(), 40);
  _upb_Message_GetNonExtensionField(msg, &field, &default_val, &ret);
  return ret;
}
UPB_INLINE bool UPB_DESC(FileOptions_has_php_class_prefix)(const UPB_DESC(FileOptions)* msg) {
  const upb_MiniTableField field = *upb_MiniTable_FindFieldByNumber(UPB_DESC(_FileOptions_msg_init)(), 40);
  return _upb_Message_HasNonExtensionField(msg, &field);
}
UPB_INLINE void UPB_DESC(FileOptions_clear_php_namespace)(UPB_DESC(FileOptions)* msg) {
  const upb_MiniTableField field = *upb_MiniTable_FindFieldByNumber(UPB_DESC(_FileOptions_msg_init)(), 41);
  _upb_Message_ClearNonExtensionField(msg, &field);
}
UPB_INLINE upb_StringView UPB_DESC(FileOptions_php_namespace)(const UPB_DESC(FileOptions)* msg) {
  upb_StringView default_val = upb_StringView_FromString("");
  upb_StringView ret;
  const upb_MiniTableField field = *upb_MiniTable_FindFieldByNumber(UPB_DESC(_FileOptions_msg_init)(), 41);
  _upb_Message_GetNonExtensionField(msg, &field, &default_val, &ret);
  return ret;
}
UPB_INLINE bool UPB_DESC(FileOptions_has_php_namespace)(const UPB_DESC(FileOptions)* msg) {
  const upb_MiniTableField field = *upb_MiniTable_FindFieldByNumber(UPB_DESC(_FileOptions_msg_init)(), 41);
  return _upb_Message_HasNonExtensionField(msg, &field);
}
UPB_INLINE void UPB_DESC(FileOptions_clear_php_generic_services)(UPB_DESC(FileOptions)* msg) {
  const upb_MiniTableField field = *upb_MiniTable_FindFieldByNumber(UPB_DESC(_FileOptions_msg_init)(), 42);
  _upb_Message_ClearNonExtensionField(msg, &field);
}
UPB_INLINE bool UPB_DESC(FileOptions_php_generic_services)(const UPB_DESC(FileOptions)* msg) {
  bool default_val = false;
  bool ret;
  const upb_MiniTableField field = *upb_MiniTable_FindFieldByNumber(UPB_DESC(_FileOptions_msg_init)(), 42);
  _upb_Message_GetNonExtensionField(msg, &field, &default_val, &ret);
  return ret;
}
UPB_INLINE bool UPB_DESC(FileOptions_has_php_generic_services)(const UPB_DESC(FileOptions)* msg) {
  const upb_MiniTableField field = *upb_MiniTable_FindFieldByNumber(UPB_DESC(_FileOptions_msg_init)(), 42);
  return _upb_Message_HasNonExtensionField(msg, &field);
}
UPB_INLINE void UPB_DESC(FileOptions_clear_php_metadata_namespace)(UPB_DESC(FileOptions)* msg) {
  const upb_MiniTableField field = *upb_MiniTable_FindFieldByNumber(UPB_DESC(_FileOptions_msg_init)(), 44);
  _upb_Message_ClearNonExtensionField(msg, &field);
}
UPB_INLINE upb_StringView UPB_DESC(FileOptions_php_metadata_namespace)(const UPB_DESC(FileOptions)* msg) {
  upb_StringView default_val = upb_StringView_FromString("");
  upb_StringView ret;
  const upb_MiniTableField field = *upb_MiniTable_FindFieldByNumber(UPB_DESC(_FileOptions_msg_init)(), 44);
  _upb_Message_GetNonExtensionField(msg, &field, &default_val, &ret);
  return ret;
}
UPB_INLINE bool UPB_DESC(FileOptions_has_php_metadata_namespace)(const UPB_DESC(FileOptions)* msg) {
  const upb_MiniTableField field = *upb_MiniTable_FindFieldByNumber(UPB_DESC(_FileOptions_msg_init)(), 44);
  return _upb_Message_HasNonExtensionField(msg, &field);
}
UPB_INLINE void UPB_DESC(FileOptions_clear_ruby_package)(UPB_DESC(FileOptions)* msg) {
  const upb_MiniTableField field = *upb_MiniTable_FindFieldByNumber(UPB_DESC(_FileOptions_msg_init)(), 45);
  _upb_Message_ClearNonExtensionField(msg, &field);
}
UPB_INLINE upb_StringView UPB_DESC(FileOptions_ruby_package)(const UPB_DESC(FileOptions)* msg) {
  upb_StringView default_val = upb_StringView_FromString("");
  upb_StringView ret;
  const upb_MiniTableField field = *upb_MiniTable_FindFieldByNumber(UPB_DESC(_FileOptions_msg_init)(), 45);
  _upb_Message_GetNonExtensionField(msg, &field, &default_val, &ret);
  return ret;
}
UPB_INLINE bool UPB_DESC(FileOptions_has_ruby_package)(const UPB_DESC(FileOptions)* msg) {
  const upb_MiniTableField field = *upb_MiniTable_FindFieldByNumber(UPB_DESC(_FileOptions_msg_init)(), 45);
  return _upb_Message_HasNonExtensionField(msg, &field);
}
UPB_INLINE void UPB_DESC(FileOptions_clear_features)(UPB_DESC(FileOptions)* msg) {
  const upb_MiniTableField field = *upb_MiniTable_FindFieldByNumber(UPB_DESC(_FileOptions_msg_init)(), 50);
  _upb_Message_ClearNonExtensionField(msg, &field);
}
UPB_INLINE const UPB_DESC(FeatureSet)* UPB_DESC(FileOptions_features)(const UPB_DESC(FileOptions)* msg) {
  const UPB_DESC(FeatureSet)* default_val = NULL;
  const UPB_DESC(FeatureSet)* ret;
  const upb_MiniTableField field = *upb_MiniTable_FindFieldByNumber(UPB_DESC(_FileOptions_msg_init)(), 50);
  _upb_Message_GetNonExtensionField(msg, &field, &default_val, &ret);
  return ret;
}
UPB_INLINE bool UPB_DESC(FileOptions_has_features)(const UPB_DESC(FileOptions)* msg) {
  const upb_MiniTableField field = *upb_MiniTable_FindFieldByNumber(UPB_DESC(_FileOptions_msg_init)(), 50);
  return _upb_Message_HasNonExtensionField(msg, &field);
}
UPB_INLINE void UPB_DESC(FileOptions_clear_uninterpreted_option)(UPB_DESC(FileOptions)* msg) {
  const upb_MiniTableField field = *upb_MiniTable_FindFieldByNumber(UPB_DESC(_FileOptions_msg_init)(), 999);
  _upb_Message_ClearNonExtensionField(msg, &field);
}
UPB_INLINE const UPB_DESC(UninterpretedOption)* const* UPB_DESC(FileOptions_uninterpreted_option)(const UPB_DESC(FileOptions)* msg, size_t* size) {
  const upb_MiniTableField field = *upb_MiniTable_FindFieldByNumber(UPB_DESC(_FileOptions_msg_init)(), 999);
  const upb_Array* arr = upb_Message_GetArray(msg, &field);
  if (arr) {
    if (size) *size = arr->size;
    return (const UPB_DESC(UninterpretedOption)* const*)_upb_array_constptr(arr);
  } else {
    if (size) *size = 0;
    return NULL;
  }
}
UPB_INLINE const upb_Array* _google_protobuf_FileOptions_uninterpreted_option_upb_array(const UPB_DESC(FileOptions)* msg, size_t* size) {
  const upb_MiniTableField field = *upb_MiniTable_FindFieldByNumber(UPB_DESC(_FileOptions_msg_init)(), 999);
  const upb_Array* arr = upb_Message_GetArray(msg, &field);
  if (size) {
    *size = arr ? arr->size : 0;
  }
  return arr;
}
UPB_INLINE upb_Array* _google_protobuf_FileOptions_uninterpreted_option_mutable_upb_array(const UPB_DESC(FileOptions)* msg, size_t* size, upb_Arena* arena) {
  const upb_MiniTableField field = *upb_MiniTable_FindFieldByNumber(UPB_DESC(_FileOptions_msg_init)(), 999);
  upb_Array* arr = upb_Message_GetOrCreateMutableArray(
      (upb_Message*)msg, &field, arena);
  if (size) {
    *size = arr ? arr->size : 0;
  }
  return arr;
}
UPB_INLINE bool UPB_DESC(FileOptions_has_uninterpreted_option)(const UPB_DESC(FileOptions)* msg) {
  size_t size;
  UPB_DESC(FileOptions_uninterpreted_option)(msg, &size);
  return size != 0;
}

UPB_INLINE void UPB_DESC(FileOptions_set_java_package)(UPB_DESC(FileOptions) *msg, upb_StringView value) {
  const upb_MiniTableField field = *upb_MiniTable_FindFieldByNumber(UPB_DESC(_FileOptions_msg_init)(), 1);
  _upb_Message_SetNonExtensionField(msg, &field, &value);
}
UPB_INLINE void UPB_DESC(FileOptions_set_java_outer_classname)(UPB_DESC(FileOptions) *msg, upb_StringView value) {
  const upb_MiniTableField field = *upb_MiniTable_FindFieldByNumber(UPB_DESC(_FileOptions_msg_init)(), 8);
  _upb_Message_SetNonExtensionField(msg, &field, &value);
}
UPB_INLINE void UPB_DESC(FileOptions_set_optimize_for)(UPB_DESC(FileOptions) *msg, int32_t value) {
  const upb_MiniTableField field = *upb_MiniTable_FindFieldByNumber(UPB_DESC(_FileOptions_msg_init)(), 9);
  _upb_Message_SetNonExtensionField(msg, &field, &value);
}
UPB_INLINE void UPB_DESC(FileOptions_set_java_multiple_files)(UPB_DESC(FileOptions) *msg, bool value) {
  const upb_MiniTableField field = *upb_MiniTable_FindFieldByNumber(UPB_DESC(_FileOptions_msg_init)(), 10);
  _upb_Message_SetNonExtensionField(msg, &field, &value);
}
UPB_INLINE void UPB_DESC(FileOptions_set_go_package)(UPB_DESC(FileOptions) *msg, upb_StringView value) {
  const upb_MiniTableField field = *upb_MiniTable_FindFieldByNumber(UPB_DESC(_FileOptions_msg_init)(), 11);
  _upb_Message_SetNonExtensionField(msg, &field, &value);
}
UPB_INLINE void UPB_DESC(FileOptions_set_cc_generic_services)(UPB_DESC(FileOptions) *msg, bool value) {
  const upb_MiniTableField field = *upb_MiniTable_FindFieldByNumber(UPB_DESC(_FileOptions_msg_init)(), 16);
  _upb_Message_SetNonExtensionField(msg, &field, &value);
}
UPB_INLINE void UPB_DESC(FileOptions_set_java_generic_services)(UPB_DESC(FileOptions) *msg, bool value) {
  const upb_MiniTableField field = *upb_MiniTable_FindFieldByNumber(UPB_DESC(_FileOptions_msg_init)(), 17);
  _upb_Message_SetNonExtensionField(msg, &field, &value);
}
UPB_INLINE void UPB_DESC(FileOptions_set_py_generic_services)(UPB_DESC(FileOptions) *msg, bool value) {
  const upb_MiniTableField field = *upb_MiniTable_FindFieldByNumber(UPB_DESC(_FileOptions_msg_init)(), 18);
  _upb_Message_SetNonExtensionField(msg, &field, &value);
}
UPB_INLINE void UPB_DESC(FileOptions_set_java_generate_equals_and_hash)(UPB_DESC(FileOptions) *msg, bool value) {
  const upb_MiniTableField field = *upb_MiniTable_FindFieldByNumber(UPB_DESC(_FileOptions_msg_init)(), 20);
  _upb_Message_SetNonExtensionField(msg, &field, &value);
}
UPB_INLINE void UPB_DESC(FileOptions_set_deprecated)(UPB_DESC(FileOptions) *msg, bool value) {
  const upb_MiniTableField field = *upb_MiniTable_FindFieldByNumber(UPB_DESC(_FileOptions_msg_init)(), 23);
  _upb_Message_SetNonExtensionField(msg, &field, &value);
}
UPB_INLINE void UPB_DESC(FileOptions_set_java_string_check_utf8)(UPB_DESC(FileOptions) *msg, bool value) {
  const upb_MiniTableField field = *upb_MiniTable_FindFieldByNumber(UPB_DESC(_FileOptions_msg_init)(), 27);
  _upb_Message_SetNonExtensionField(msg, &field, &value);
}
UPB_INLINE void UPB_DESC(FileOptions_set_cc_enable_arenas)(UPB_DESC(FileOptions) *msg, bool value) {
  const upb_MiniTableField field = *upb_MiniTable_FindFieldByNumber(UPB_DESC(_FileOptions_msg_init)(), 31);
  _upb_Message_SetNonExtensionField(msg, &field, &value);
}
UPB_INLINE void UPB_DESC(FileOptions_set_objc_class_prefix)(UPB_DESC(FileOptions) *msg, upb_StringView value) {
  const upb_MiniTableField field = *upb_MiniTable_FindFieldByNumber(UPB_DESC(_FileOptions_msg_init)(), 36);
  _upb_Message_SetNonExtensionField(msg, &field, &value);
}
UPB_INLINE void UPB_DESC(FileOptions_set_csharp_namespace)(UPB_DESC(FileOptions) *msg, upb_StringView value) {
  const upb_MiniTableField field = *upb_MiniTable_FindFieldByNumber(UPB_DESC(_FileOptions_msg_init)(), 37);
  _upb_Message_SetNonExtensionField(msg, &field, &value);
}
UPB_INLINE void UPB_DESC(FileOptions_set_swift_prefix)(UPB_DESC(FileOptions) *msg, upb_StringView value) {
  const upb_MiniTableField field = *upb_MiniTable_FindFieldByNumber(UPB_DESC(_FileOptions_msg_init)(), 39);
  _upb_Message_SetNonExtensionField(msg, &field, &value);
}
UPB_INLINE void UPB_DESC(FileOptions_set_php_class_prefix)(UPB_DESC(FileOptions) *msg, upb_StringView value) {
  const upb_MiniTableField field = *upb_MiniTable_FindFieldByNumber(UPB_DESC(_FileOptions_msg_init)(), 40);
  _upb_Message_SetNonExtensionField(msg, &field, &value);
}
UPB_INLINE void UPB_DESC(FileOptions_set_php_namespace)(UPB_DESC(FileOptions) *msg, upb_StringView value) {
  const upb_MiniTableField field = *upb_MiniTable_FindFieldByNumber(UPB_DESC(_FileOptions_msg_init)(), 41);
  _upb_Message_SetNonExtensionField(msg, &field, &value);
}
UPB_INLINE void UPB_DESC(FileOptions_set_php_generic_services)(UPB_DESC(FileOptions) *msg, bool value) {
  const upb_MiniTableField field = *upb_MiniTable_FindFieldByNumber(UPB_DESC(_FileOptions_msg_init)(), 42);
  _upb_Message_SetNonExtensionField(msg, &field, &value);
}
UPB_INLINE void UPB_DESC(FileOptions_set_php_metadata_namespace)(UPB_DESC(FileOptions) *msg, upb_StringView value) {
  const upb_MiniTableField field = *upb_MiniTable_FindFieldByNumber(UPB_DESC(_FileOptions_msg_init)(), 44);
  _upb_Message_SetNonExtensionField(msg, &field, &value);
}
UPB_INLINE void UPB_DESC(FileOptions_set_ruby_package)(UPB_DESC(FileOptions) *msg, upb_StringView value) {
  const upb_MiniTableField field = *upb_MiniTable_FindFieldByNumber(UPB_DESC(_FileOptions_msg_init)(), 45);
  _upb_Message_SetNonExtensionField(msg, &field, &value);
}
UPB_INLINE void UPB_DESC(FileOptions_set_features)(UPB_DESC(FileOptions) *msg, UPB_DESC(FeatureSet)* value) {
  const upb_MiniTableField field = *upb_MiniTable_FindFieldByNumber(UPB_DESC(_FileOptions_msg_init)(), 50);
  _upb_Message_SetNonExtensionField(msg, &field, &value);
}
UPB_INLINE struct UPB_DESC(FeatureSet)* UPB_DESC(FileOptions_mutable_features)(UPB_DESC(FileOptions)* msg, upb_Arena* arena) {
  struct UPB_DESC(FeatureSet)* sub = (struct UPB_DESC(FeatureSet)*)UPB_DESC(FileOptions_features)(msg);
  if (sub == NULL) {
    sub = (struct UPB_DESC(FeatureSet)*)_upb_Message_New(UPB_DESC(_FeatureSet_msg_init)(), arena);
    if (sub) UPB_DESC(FileOptions_set_features)(msg, sub);
  }
  return sub;
}
UPB_INLINE UPB_DESC(UninterpretedOption)** UPB_DESC(FileOptions_mutable_uninterpreted_option)(UPB_DESC(FileOptions)* msg, size_t* size) {
  upb_MiniTableField field = *upb_MiniTable_FindFieldByNumber(UPB_DESC(_FileOptions_msg_init)(), 999);
  upb_Array* arr = upb_Message_GetMutableArray(msg, &field);
  if (arr) {
    if (size) *size = arr->size;
    return (UPB_DESC(UninterpretedOption)**)_upb_array_ptr(arr);
  } else {
    if (size) *size = 0;
    return NULL;
  }
}
UPB_INLINE UPB_DESC(UninterpretedOption)** UPB_DESC(FileOptions_resize_uninterpreted_option)(UPB_DESC(FileOptions)* msg, size_t size, upb_Arena* arena) {
  upb_MiniTableField field = *upb_MiniTable_FindFieldByNumber(UPB_DESC(_FileOptions_msg_init)(), 999);
  return (UPB_DESC(UninterpretedOption)**)upb_Message_ResizeArrayUninitialized(msg, &field, size, arena);
}
UPB_INLINE struct UPB_DESC(UninterpretedOption)* UPB_DESC(FileOptions_add_uninterpreted_option)(UPB_DESC(FileOptions)* msg, upb_Arena* arena) {
  upb_MiniTableField field = *upb_MiniTable_FindFieldByNumber(UPB_DESC(_FileOptions_msg_init)(), 999);
  upb_Array* arr = upb_Message_GetOrCreateMutableArray(msg, &field, arena);
  if (!arr || !_upb_Array_ResizeUninitialized(arr, arr->size + 1, arena)) {
    return NULL;
  }
  struct UPB_DESC(UninterpretedOption)* sub = (struct UPB_DESC(UninterpretedOption)*)_upb_Message_New(UPB_DESC(_UninterpretedOption_msg_init)(), arena);
  if (!arr || !sub) return NULL;
  _upb_Array_Set(arr, arr->size - 1, &sub, sizeof(sub));
  return sub;
}

/* google.protobuf.MessageOptions */

UPB_INLINE UPB_DESC(MessageOptions)* UPB_DESC(MessageOptions_new)(upb_Arena* arena) {
  return (UPB_DESC(MessageOptions)*)_upb_Message_New(UPB_DESC(_MessageOptions_msg_init)(), arena);
}
UPB_INLINE UPB_DESC(MessageOptions)* UPB_DESC(MessageOptions_parse)(const char* buf, size_t size, upb_Arena* arena) {
  UPB_DESC(MessageOptions)* ret = UPB_DESC(MessageOptions_new)(arena);
  if (!ret) return NULL;
  if (upb_Decode(buf, size, ret, UPB_DESC(_MessageOptions_msg_init)(), NULL, 0, arena) != kUpb_DecodeStatus_Ok) {
    return NULL;
  }
  return ret;
}
UPB_INLINE UPB_DESC(MessageOptions)* UPB_DESC(MessageOptions_parse_ex)(const char* buf, size_t size,
                           const upb_ExtensionRegistry* extreg,
                           int options, upb_Arena* arena) {
  UPB_DESC(MessageOptions)* ret = UPB_DESC(MessageOptions_new)(arena);
  if (!ret) return NULL;
  if (upb_Decode(buf, size, ret, UPB_DESC(_MessageOptions_msg_init)(), extreg, options, arena) !=
      kUpb_DecodeStatus_Ok) {
    return NULL;
  }
  return ret;
}
UPB_INLINE char* UPB_DESC(MessageOptions_serialize)(const UPB_DESC(MessageOptions)* msg, upb_Arena* arena, size_t* len) {
  char* ptr;
  (void)upb_Encode(msg, UPB_DESC(_MessageOptions_msg_init)(), 0, arena, &ptr, len);
  return ptr;
}
UPB_INLINE char* UPB_DESC(MessageOptions_serialize_ex)(const UPB_DESC(MessageOptions)* msg, int options,
                                 upb_Arena* arena, size_t* len) {
  char* ptr;
  (void)upb_Encode(msg, UPB_DESC(_MessageOptions_msg_init)(), options, arena, &ptr, len);
  return ptr;
}
UPB_INLINE void UPB_DESC(MessageOptions_clear_message_set_wire_format)(UPB_DESC(MessageOptions)* msg) {
  const upb_MiniTableField field = *upb_MiniTable_FindFieldByNumber(UPB_DESC(_MessageOptions_msg_init)(), 1);
  _upb_Message_ClearNonExtensionField(msg, &field);
}
UPB_INLINE bool UPB_DESC(MessageOptions_message_set_wire_format)(const UPB_DESC(MessageOptions)* msg) {
  bool default_val = false;
  bool ret;
  const upb_MiniTableField field = *upb_MiniTable_FindFieldByNumber(UPB_DESC(_MessageOptions_msg_init)(), 1);
  _upb_Message_GetNonExtensionField(msg, &field, &default_val, &ret);
  return ret;
}
UPB_INLINE bool UPB_DESC(MessageOptions_has_message_set_wire_format)(const UPB_DESC(MessageOptions)* msg) {
  const upb_MiniTableField field = *upb_MiniTable_FindFieldByNumber(UPB_DESC(_MessageOptions_msg_init)(), 1);
  return _upb_Message_HasNonExtensionField(msg, &field);
}
UPB_INLINE void UPB_DESC(MessageOptions_clear_no_standard_descriptor_accessor)(UPB_DESC(MessageOptions)* msg) {
  const upb_MiniTableField field = *upb_MiniTable_FindFieldByNumber(UPB_DESC(_MessageOptions_msg_init)(), 2);
  _upb_Message_ClearNonExtensionField(msg, &field);
}
UPB_INLINE bool UPB_DESC(MessageOptions_no_standard_descriptor_accessor)(const UPB_DESC(MessageOptions)* msg) {
  bool default_val = false;
  bool ret;
  const upb_MiniTableField field = *upb_MiniTable_FindFieldByNumber(UPB_DESC(_MessageOptions_msg_init)(), 2);
  _upb_Message_GetNonExtensionField(msg, &field, &default_val, &ret);
  return ret;
}
UPB_INLINE bool UPB_DESC(MessageOptions_has_no_standard_descriptor_accessor)(const UPB_DESC(MessageOptions)* msg) {
  const upb_MiniTableField field = *upb_MiniTable_FindFieldByNumber(UPB_DESC(_MessageOptions_msg_init)(), 2);
  return _upb_Message_HasNonExtensionField(msg, &field);
}
UPB_INLINE void UPB_DESC(MessageOptions_clear_deprecated)(UPB_DESC(MessageOptions)* msg) {
  const upb_MiniTableField field = *upb_MiniTable_FindFieldByNumber(UPB_DESC(_MessageOptions_msg_init)(), 3);
  _upb_Message_ClearNonExtensionField(msg, &field);
}
UPB_INLINE bool UPB_DESC(MessageOptions_deprecated)(const UPB_DESC(MessageOptions)* msg) {
  bool default_val = false;
  bool ret;
  const upb_MiniTableField field = *upb_MiniTable_FindFieldByNumber(UPB_DESC(_MessageOptions_msg_init)(), 3);
  _upb_Message_GetNonExtensionField(msg, &field, &default_val, &ret);
  return ret;
}
UPB_INLINE bool UPB_DESC(MessageOptions_has_deprecated)(const UPB_DESC(MessageOptions)* msg) {
  const upb_MiniTableField field = *upb_MiniTable_FindFieldByNumber(UPB_DESC(_MessageOptions_msg_init)(), 3);
  return _upb_Message_HasNonExtensionField(msg, &field);
}
UPB_INLINE void UPB_DESC(MessageOptions_clear_map_entry)(UPB_DESC(MessageOptions)* msg) {
  const upb_MiniTableField field = *upb_MiniTable_FindFieldByNumber(UPB_DESC(_MessageOptions_msg_init)(), 7);
  _upb_Message_ClearNonExtensionField(msg, &field);
}
UPB_INLINE bool UPB_DESC(MessageOptions_map_entry)(const UPB_DESC(MessageOptions)* msg) {
  bool default_val = false;
  bool ret;
  const upb_MiniTableField field = *upb_MiniTable_FindFieldByNumber(UPB_DESC(_MessageOptions_msg_init)(), 7);
  _upb_Message_GetNonExtensionField(msg, &field, &default_val, &ret);
  return ret;
}
UPB_INLINE bool UPB_DESC(MessageOptions_has_map_entry)(const UPB_DESC(MessageOptions)* msg) {
  const upb_MiniTableField field = *upb_MiniTable_FindFieldByNumber(UPB_DESC(_MessageOptions_msg_init)(), 7);
  return _upb_Message_HasNonExtensionField(msg, &field);
}
UPB_INLINE void UPB_DESC(MessageOptions_clear_deprecated_legacy_json_field_conflicts)(UPB_DESC(MessageOptions)* msg) {
  const upb_MiniTableField field = *upb_MiniTable_FindFieldByNumber(UPB_DESC(_MessageOptions_msg_init)(), 11);
  _upb_Message_ClearNonExtensionField(msg, &field);
}
UPB_INLINE bool UPB_DESC(MessageOptions_deprecated_legacy_json_field_conflicts)(const UPB_DESC(MessageOptions)* msg) {
  bool default_val = false;
  bool ret;
  const upb_MiniTableField field = *upb_MiniTable_FindFieldByNumber(UPB_DESC(_MessageOptions_msg_init)(), 11);
  _upb_Message_GetNonExtensionField(msg, &field, &default_val, &ret);
  return ret;
}
UPB_INLINE bool UPB_DESC(MessageOptions_has_deprecated_legacy_json_field_conflicts)(const UPB_DESC(MessageOptions)* msg) {
  const upb_MiniTableField field = *upb_MiniTable_FindFieldByNumber(UPB_DESC(_MessageOptions_msg_init)(), 11);
  return _upb_Message_HasNonExtensionField(msg, &field);
}
UPB_INLINE void UPB_DESC(MessageOptions_clear_features)(UPB_DESC(MessageOptions)* msg) {
  const upb_MiniTableField field = *upb_MiniTable_FindFieldByNumber(UPB_DESC(_MessageOptions_msg_init)(), 12);
  _upb_Message_ClearNonExtensionField(msg, &field);
}
UPB_INLINE const UPB_DESC(FeatureSet)* UPB_DESC(MessageOptions_features)(const UPB_DESC(MessageOptions)* msg) {
  const UPB_DESC(FeatureSet)* default_val = NULL;
  const UPB_DESC(FeatureSet)* ret;
  const upb_MiniTableField field = *upb_MiniTable_FindFieldByNumber(UPB_DESC(_MessageOptions_msg_init)(), 12);
  _upb_Message_GetNonExtensionField(msg, &field, &default_val, &ret);
  return ret;
}
UPB_INLINE bool UPB_DESC(MessageOptions_has_features)(const UPB_DESC(MessageOptions)* msg) {
  const upb_MiniTableField field = *upb_MiniTable_FindFieldByNumber(UPB_DESC(_MessageOptions_msg_init)(), 12);
  return _upb_Message_HasNonExtensionField(msg, &field);
}
UPB_INLINE void UPB_DESC(MessageOptions_clear_uninterpreted_option)(UPB_DESC(MessageOptions)* msg) {
  const upb_MiniTableField field = *upb_MiniTable_FindFieldByNumber(UPB_DESC(_MessageOptions_msg_init)(), 999);
  _upb_Message_ClearNonExtensionField(msg, &field);
}
UPB_INLINE const UPB_DESC(UninterpretedOption)* const* UPB_DESC(MessageOptions_uninterpreted_option)(const UPB_DESC(MessageOptions)* msg, size_t* size) {
  const upb_MiniTableField field = *upb_MiniTable_FindFieldByNumber(UPB_DESC(_MessageOptions_msg_init)(), 999);
  const upb_Array* arr = upb_Message_GetArray(msg, &field);
  if (arr) {
    if (size) *size = arr->size;
    return (const UPB_DESC(UninterpretedOption)* const*)_upb_array_constptr(arr);
  } else {
    if (size) *size = 0;
    return NULL;
  }
}
UPB_INLINE const upb_Array* _google_protobuf_MessageOptions_uninterpreted_option_upb_array(const UPB_DESC(MessageOptions)* msg, size_t* size) {
  const upb_MiniTableField field = *upb_MiniTable_FindFieldByNumber(UPB_DESC(_MessageOptions_msg_init)(), 999);
  const upb_Array* arr = upb_Message_GetArray(msg, &field);
  if (size) {
    *size = arr ? arr->size : 0;
  }
  return arr;
}
UPB_INLINE upb_Array* _google_protobuf_MessageOptions_uninterpreted_option_mutable_upb_array(const UPB_DESC(MessageOptions)* msg, size_t* size, upb_Arena* arena) {
  const upb_MiniTableField field = *upb_MiniTable_FindFieldByNumber(UPB_DESC(_MessageOptions_msg_init)(), 999);
  upb_Array* arr = upb_Message_GetOrCreateMutableArray(
      (upb_Message*)msg, &field, arena);
  if (size) {
    *size = arr ? arr->size : 0;
  }
  return arr;
}
UPB_INLINE bool UPB_DESC(MessageOptions_has_uninterpreted_option)(const UPB_DESC(MessageOptions)* msg) {
  size_t size;
  UPB_DESC(MessageOptions_uninterpreted_option)(msg, &size);
  return size != 0;
}

UPB_INLINE void UPB_DESC(MessageOptions_set_message_set_wire_format)(UPB_DESC(MessageOptions) *msg, bool value) {
  const upb_MiniTableField field = *upb_MiniTable_FindFieldByNumber(UPB_DESC(_MessageOptions_msg_init)(), 1);
  _upb_Message_SetNonExtensionField(msg, &field, &value);
}
UPB_INLINE void UPB_DESC(MessageOptions_set_no_standard_descriptor_accessor)(UPB_DESC(MessageOptions) *msg, bool value) {
  const upb_MiniTableField field = *upb_MiniTable_FindFieldByNumber(UPB_DESC(_MessageOptions_msg_init)(), 2);
  _upb_Message_SetNonExtensionField(msg, &field, &value);
}
UPB_INLINE void UPB_DESC(MessageOptions_set_deprecated)(UPB_DESC(MessageOptions) *msg, bool value) {
  const upb_MiniTableField field = *upb_MiniTable_FindFieldByNumber(UPB_DESC(_MessageOptions_msg_init)(), 3);
  _upb_Message_SetNonExtensionField(msg, &field, &value);
}
UPB_INLINE void UPB_DESC(MessageOptions_set_map_entry)(UPB_DESC(MessageOptions) *msg, bool value) {
  const upb_MiniTableField field = *upb_MiniTable_FindFieldByNumber(UPB_DESC(_MessageOptions_msg_init)(), 7);
  _upb_Message_SetNonExtensionField(msg, &field, &value);
}
UPB_INLINE void UPB_DESC(MessageOptions_set_deprecated_legacy_json_field_conflicts)(UPB_DESC(MessageOptions) *msg, bool value) {
  const upb_MiniTableField field = *upb_MiniTable_FindFieldByNumber(UPB_DESC(_MessageOptions_msg_init)(), 11);
  _upb_Message_SetNonExtensionField(msg, &field, &value);
}
UPB_INLINE void UPB_DESC(MessageOptions_set_features)(UPB_DESC(MessageOptions) *msg, UPB_DESC(FeatureSet)* value) {
  const upb_MiniTableField field = *upb_MiniTable_FindFieldByNumber(UPB_DESC(_MessageOptions_msg_init)(), 12);
  _upb_Message_SetNonExtensionField(msg, &field, &value);
}
UPB_INLINE struct UPB_DESC(FeatureSet)* UPB_DESC(MessageOptions_mutable_features)(UPB_DESC(MessageOptions)* msg, upb_Arena* arena) {
  struct UPB_DESC(FeatureSet)* sub = (struct UPB_DESC(FeatureSet)*)UPB_DESC(MessageOptions_features)(msg);
  if (sub == NULL) {
    sub = (struct UPB_DESC(FeatureSet)*)_upb_Message_New(UPB_DESC(_FeatureSet_msg_init)(), arena);
    if (sub) UPB_DESC(MessageOptions_set_features)(msg, sub);
  }
  return sub;
}
UPB_INLINE UPB_DESC(UninterpretedOption)** UPB_DESC(MessageOptions_mutable_uninterpreted_option)(UPB_DESC(MessageOptions)* msg, size_t* size) {
  upb_MiniTableField field = *upb_MiniTable_FindFieldByNumber(UPB_DESC(_MessageOptions_msg_init)(), 999);
  upb_Array* arr = upb_Message_GetMutableArray(msg, &field);
  if (arr) {
    if (size) *size = arr->size;
    return (UPB_DESC(UninterpretedOption)**)_upb_array_ptr(arr);
  } else {
    if (size) *size = 0;
    return NULL;
  }
}
UPB_INLINE UPB_DESC(UninterpretedOption)** UPB_DESC(MessageOptions_resize_uninterpreted_option)(UPB_DESC(MessageOptions)* msg, size_t size, upb_Arena* arena) {
  upb_MiniTableField field = *upb_MiniTable_FindFieldByNumber(UPB_DESC(_MessageOptions_msg_init)(), 999);
  return (UPB_DESC(UninterpretedOption)**)upb_Message_ResizeArrayUninitialized(msg, &field, size, arena);
}
UPB_INLINE struct UPB_DESC(UninterpretedOption)* UPB_DESC(MessageOptions_add_uninterpreted_option)(UPB_DESC(MessageOptions)* msg, upb_Arena* arena) {
  upb_MiniTableField field = *upb_MiniTable_FindFieldByNumber(UPB_DESC(_MessageOptions_msg_init)(), 999);
  upb_Array* arr = upb_Message_GetOrCreateMutableArray(msg, &field, arena);
  if (!arr || !_upb_Array_ResizeUninitialized(arr, arr->size + 1, arena)) {
    return NULL;
  }
  struct UPB_DESC(UninterpretedOption)* sub = (struct UPB_DESC(UninterpretedOption)*)_upb_Message_New(UPB_DESC(_UninterpretedOption_msg_init)(), arena);
  if (!arr || !sub) return NULL;
  _upb_Array_Set(arr, arr->size - 1, &sub, sizeof(sub));
  return sub;
}

/* google.protobuf.FieldOptions */

UPB_INLINE UPB_DESC(FieldOptions)* UPB_DESC(FieldOptions_new)(upb_Arena* arena) {
  return (UPB_DESC(FieldOptions)*)_upb_Message_New(UPB_DESC(_FieldOptions_msg_init)(), arena);
}
UPB_INLINE UPB_DESC(FieldOptions)* UPB_DESC(FieldOptions_parse)(const char* buf, size_t size, upb_Arena* arena) {
  UPB_DESC(FieldOptions)* ret = UPB_DESC(FieldOptions_new)(arena);
  if (!ret) return NULL;
  if (upb_Decode(buf, size, ret, UPB_DESC(_FieldOptions_msg_init)(), NULL, 0, arena) != kUpb_DecodeStatus_Ok) {
    return NULL;
  }
  return ret;
}
UPB_INLINE UPB_DESC(FieldOptions)* UPB_DESC(FieldOptions_parse_ex)(const char* buf, size_t size,
                           const upb_ExtensionRegistry* extreg,
                           int options, upb_Arena* arena) {
  UPB_DESC(FieldOptions)* ret = UPB_DESC(FieldOptions_new)(arena);
  if (!ret) return NULL;
  if (upb_Decode(buf, size, ret, UPB_DESC(_FieldOptions_msg_init)(), extreg, options, arena) !=
      kUpb_DecodeStatus_Ok) {
    return NULL;
  }
  return ret;
}
UPB_INLINE char* UPB_DESC(FieldOptions_serialize)(const UPB_DESC(FieldOptions)* msg, upb_Arena* arena, size_t* len) {
  char* ptr;
  (void)upb_Encode(msg, UPB_DESC(_FieldOptions_msg_init)(), 0, arena, &ptr, len);
  return ptr;
}
UPB_INLINE char* UPB_DESC(FieldOptions_serialize_ex)(const UPB_DESC(FieldOptions)* msg, int options,
                                 upb_Arena* arena, size_t* len) {
  char* ptr;
  (void)upb_Encode(msg, UPB_DESC(_FieldOptions_msg_init)(), options, arena, &ptr, len);
  return ptr;
}
UPB_INLINE void UPB_DESC(FieldOptions_clear_ctype)(UPB_DESC(FieldOptions)* msg) {
  const upb_MiniTableField field = *upb_MiniTable_FindFieldByNumber(UPB_DESC(_FieldOptions_msg_init)(), 1);
  _upb_Message_ClearNonExtensionField(msg, &field);
}
UPB_INLINE int32_t UPB_DESC(FieldOptions_ctype)(const UPB_DESC(FieldOptions)* msg) {
  int32_t default_val = 0;
  int32_t ret;
  const upb_MiniTableField field = *upb_MiniTable_FindFieldByNumber(UPB_DESC(_FieldOptions_msg_init)(), 1);
  _upb_Message_GetNonExtensionField(msg, &field, &default_val, &ret);
  return ret;
}
UPB_INLINE bool UPB_DESC(FieldOptions_has_ctype)(const UPB_DESC(FieldOptions)* msg) {
  const upb_MiniTableField field = *upb_MiniTable_FindFieldByNumber(UPB_DESC(_FieldOptions_msg_init)(), 1);
  return _upb_Message_HasNonExtensionField(msg, &field);
}
UPB_INLINE void UPB_DESC(FieldOptions_clear_packed)(UPB_DESC(FieldOptions)* msg) {
  const upb_MiniTableField field = *upb_MiniTable_FindFieldByNumber(UPB_DESC(_FieldOptions_msg_init)(), 2);
  _upb_Message_ClearNonExtensionField(msg, &field);
}
UPB_INLINE bool UPB_DESC(FieldOptions_packed)(const UPB_DESC(FieldOptions)* msg) {
  bool default_val = false;
  bool ret;
  const upb_MiniTableField field = *upb_MiniTable_FindFieldByNumber(UPB_DESC(_FieldOptions_msg_init)(), 2);
  _upb_Message_GetNonExtensionField(msg, &field, &default_val, &ret);
  return ret;
}
UPB_INLINE bool UPB_DESC(FieldOptions_has_packed)(const UPB_DESC(FieldOptions)* msg) {
  const upb_MiniTableField field = *upb_MiniTable_FindFieldByNumber(UPB_DESC(_FieldOptions_msg_init)(), 2);
  return _upb_Message_HasNonExtensionField(msg, &field);
}
UPB_INLINE void UPB_DESC(FieldOptions_clear_deprecated)(UPB_DESC(FieldOptions)* msg) {
  const upb_MiniTableField field = *upb_MiniTable_FindFieldByNumber(UPB_DESC(_FieldOptions_msg_init)(), 3);
  _upb_Message_ClearNonExtensionField(msg, &field);
}
UPB_INLINE bool UPB_DESC(FieldOptions_deprecated)(const UPB_DESC(FieldOptions)* msg) {
  bool default_val = false;
  bool ret;
  const upb_MiniTableField field = *upb_MiniTable_FindFieldByNumber(UPB_DESC(_FieldOptions_msg_init)(), 3);
  _upb_Message_GetNonExtensionField(msg, &field, &default_val, &ret);
  return ret;
}
UPB_INLINE bool UPB_DESC(FieldOptions_has_deprecated)(const UPB_DESC(FieldOptions)* msg) {
  const upb_MiniTableField field = *upb_MiniTable_FindFieldByNumber(UPB_DESC(_FieldOptions_msg_init)(), 3);
  return _upb_Message_HasNonExtensionField(msg, &field);
}
UPB_INLINE void UPB_DESC(FieldOptions_clear_lazy)(UPB_DESC(FieldOptions)* msg) {
  const upb_MiniTableField field = *upb_MiniTable_FindFieldByNumber(UPB_DESC(_FieldOptions_msg_init)(), 5);
  _upb_Message_ClearNonExtensionField(msg, &field);
}
UPB_INLINE bool UPB_DESC(FieldOptions_lazy)(const UPB_DESC(FieldOptions)* msg) {
  bool default_val = false;
  bool ret;
  const upb_MiniTableField field = *upb_MiniTable_FindFieldByNumber(UPB_DESC(_FieldOptions_msg_init)(), 5);
  _upb_Message_GetNonExtensionField(msg, &field, &default_val, &ret);
  return ret;
}
UPB_INLINE bool UPB_DESC(FieldOptions_has_lazy)(const UPB_DESC(FieldOptions)* msg) {
  const upb_MiniTableField field = *upb_MiniTable_FindFieldByNumber(UPB_DESC(_FieldOptions_msg_init)(), 5);
  return _upb_Message_HasNonExtensionField(msg, &field);
}
UPB_INLINE void UPB_DESC(FieldOptions_clear_jstype)(UPB_DESC(FieldOptions)* msg) {
  const upb_MiniTableField field = *upb_MiniTable_FindFieldByNumber(UPB_DESC(_FieldOptions_msg_init)(), 6);
  _upb_Message_ClearNonExtensionField(msg, &field);
}
UPB_INLINE int32_t UPB_DESC(FieldOptions_jstype)(const UPB_DESC(FieldOptions)* msg) {
  int32_t default_val = 0;
  int32_t ret;
  const upb_MiniTableField field = *upb_MiniTable_FindFieldByNumber(UPB_DESC(_FieldOptions_msg_init)(), 6);
  _upb_Message_GetNonExtensionField(msg, &field, &default_val, &ret);
  return ret;
}
UPB_INLINE bool UPB_DESC(FieldOptions_has_jstype)(const UPB_DESC(FieldOptions)* msg) {
  const upb_MiniTableField field = *upb_MiniTable_FindFieldByNumber(UPB_DESC(_FieldOptions_msg_init)(), 6);
  return _upb_Message_HasNonExtensionField(msg, &field);
}
UPB_INLINE void UPB_DESC(FieldOptions_clear_weak)(UPB_DESC(FieldOptions)* msg) {
  const upb_MiniTableField field = *upb_MiniTable_FindFieldByNumber(UPB_DESC(_FieldOptions_msg_init)(), 10);
  _upb_Message_ClearNonExtensionField(msg, &field);
}
UPB_INLINE bool UPB_DESC(FieldOptions_weak)(const UPB_DESC(FieldOptions)* msg) {
  bool default_val = false;
  bool ret;
  const upb_MiniTableField field = *upb_MiniTable_FindFieldByNumber(UPB_DESC(_FieldOptions_msg_init)(), 10);
  _upb_Message_GetNonExtensionField(msg, &field, &default_val, &ret);
  return ret;
}
UPB_INLINE bool UPB_DESC(FieldOptions_has_weak)(const UPB_DESC(FieldOptions)* msg) {
  const upb_MiniTableField field = *upb_MiniTable_FindFieldByNumber(UPB_DESC(_FieldOptions_msg_init)(), 10);
  return _upb_Message_HasNonExtensionField(msg, &field);
}
UPB_INLINE void UPB_DESC(FieldOptions_clear_unverified_lazy)(UPB_DESC(FieldOptions)* msg) {
  const upb_MiniTableField field = *upb_MiniTable_FindFieldByNumber(UPB_DESC(_FieldOptions_msg_init)(), 15);
  _upb_Message_ClearNonExtensionField(msg, &field);
}
UPB_INLINE bool UPB_DESC(FieldOptions_unverified_lazy)(const UPB_DESC(FieldOptions)* msg) {
  bool default_val = false;
  bool ret;
  const upb_MiniTableField field = *upb_MiniTable_FindFieldByNumber(UPB_DESC(_FieldOptions_msg_init)(), 15);
  _upb_Message_GetNonExtensionField(msg, &field, &default_val, &ret);
  return ret;
}
UPB_INLINE bool UPB_DESC(FieldOptions_has_unverified_lazy)(const UPB_DESC(FieldOptions)* msg) {
  const upb_MiniTableField field = *upb_MiniTable_FindFieldByNumber(UPB_DESC(_FieldOptions_msg_init)(), 15);
  return _upb_Message_HasNonExtensionField(msg, &field);
}
UPB_INLINE void UPB_DESC(FieldOptions_clear_debug_redact)(UPB_DESC(FieldOptions)* msg) {
  const upb_MiniTableField field = *upb_MiniTable_FindFieldByNumber(UPB_DESC(_FieldOptions_msg_init)(), 16);
  _upb_Message_ClearNonExtensionField(msg, &field);
}
UPB_INLINE bool UPB_DESC(FieldOptions_debug_redact)(const UPB_DESC(FieldOptions)* msg) {
  bool default_val = false;
  bool ret;
  const upb_MiniTableField field = *upb_MiniTable_FindFieldByNumber(UPB_DESC(_FieldOptions_msg_init)(), 16);
  _upb_Message_GetNonExtensionField(msg, &field, &default_val, &ret);
  return ret;
}
UPB_INLINE bool UPB_DESC(FieldOptions_has_debug_redact)(const UPB_DESC(FieldOptions)* msg) {
  const upb_MiniTableField field = *upb_MiniTable_FindFieldByNumber(UPB_DESC(_FieldOptions_msg_init)(), 16);
  return _upb_Message_HasNonExtensionField(msg, &field);
}
UPB_INLINE void UPB_DESC(FieldOptions_clear_retention)(UPB_DESC(FieldOptions)* msg) {
  const upb_MiniTableField field = *upb_MiniTable_FindFieldByNumber(UPB_DESC(_FieldOptions_msg_init)(), 17);
  _upb_Message_ClearNonExtensionField(msg, &field);
}
UPB_INLINE int32_t UPB_DESC(FieldOptions_retention)(const UPB_DESC(FieldOptions)* msg) {
  int32_t default_val = 0;
  int32_t ret;
  const upb_MiniTableField field = *upb_MiniTable_FindFieldByNumber(UPB_DESC(_FieldOptions_msg_init)(), 17);
  _upb_Message_GetNonExtensionField(msg, &field, &default_val, &ret);
  return ret;
}
UPB_INLINE bool UPB_DESC(FieldOptions_has_retention)(const UPB_DESC(FieldOptions)* msg) {
  const upb_MiniTableField field = *upb_MiniTable_FindFieldByNumber(UPB_DESC(_FieldOptions_msg_init)(), 17);
  return _upb_Message_HasNonExtensionField(msg, &field);
}
UPB_INLINE void UPB_DESC(FieldOptions_clear_targets)(UPB_DESC(FieldOptions)* msg) {
  const upb_MiniTableField field = *upb_MiniTable_FindFieldByNumber(UPB_DESC(_FieldOptions_msg_init)(), 19);
  _upb_Message_ClearNonExtensionField(msg, &field);
}
UPB_INLINE int32_t const* UPB_DESC(FieldOptions_targets)(const UPB_DESC(FieldOptions)* msg, size_t* size) {
  const upb_MiniTableField field = *upb_MiniTable_FindFieldByNumber(UPB_DESC(_FieldOptions_msg_init)(), 19);
  const upb_Array* arr = upb_Message_GetArray(msg, &field);
  if (arr) {
    if (size) *size = arr->size;
    return (int32_t const*)_upb_array_constptr(arr);
  } else {
    if (size) *size = 0;
    return NULL;
  }
}
UPB_INLINE const upb_Array* _google_protobuf_FieldOptions_targets_upb_array(const UPB_DESC(FieldOptions)* msg, size_t* size) {
  const upb_MiniTableField field = *upb_MiniTable_FindFieldByNumber(UPB_DESC(_FieldOptions_msg_init)(), 19);
  const upb_Array* arr = upb_Message_GetArray(msg, &field);
  if (size) {
    *size = arr ? arr->size : 0;
  }
  return arr;
}
UPB_INLINE upb_Array* _google_protobuf_FieldOptions_targets_mutable_upb_array(const UPB_DESC(FieldOptions)* msg, size_t* size, upb_Arena* arena) {
  const upb_MiniTableField field = *upb_MiniTable_FindFieldByNumber(UPB_DESC(_FieldOptions_msg_init)(), 19);
  upb_Array* arr = upb_Message_GetOrCreateMutableArray(
      (upb_Message*)msg, &field, arena);
  if (size) {
    *size = arr ? arr->size : 0;
  }
  return arr;
}
UPB_INLINE bool UPB_DESC(FieldOptions_has_targets)(const UPB_DESC(FieldOptions)* msg) {
  size_t size;
  UPB_DESC(FieldOptions_targets)(msg, &size);
  return size != 0;
}
UPB_INLINE void UPB_DESC(FieldOptions_clear_edition_defaults)(UPB_DESC(FieldOptions)* msg) {
  const upb_MiniTableField field = *upb_MiniTable_FindFieldByNumber(UPB_DESC(_FieldOptions_msg_init)(), 20);
  _upb_Message_ClearNonExtensionField(msg, &field);
}
UPB_INLINE const UPB_DESC(FieldOptions_EditionDefault)* const* UPB_DESC(FieldOptions_edition_defaults)(const UPB_DESC(FieldOptions)* msg, size_t* size) {
  const upb_MiniTableField field = *upb_MiniTable_FindFieldByNumber(UPB_DESC(_FieldOptions_msg_init)(), 20);
  const upb_Array* arr = upb_Message_GetArray(msg, &field);
  if (arr) {
    if (size) *size = arr->size;
    return (const UPB_DESC(FieldOptions_EditionDefault)* const*)_upb_array_constptr(arr);
  } else {
    if (size) *size = 0;
    return NULL;
  }
}
UPB_INLINE const upb_Array* _google_protobuf_FieldOptions_edition_defaults_upb_array(const UPB_DESC(FieldOptions)* msg, size_t* size) {
  const upb_MiniTableField field = *upb_MiniTable_FindFieldByNumber(UPB_DESC(_FieldOptions_msg_init)(), 20);
  const upb_Array* arr = upb_Message_GetArray(msg, &field);
  if (size) {
    *size = arr ? arr->size : 0;
  }
  return arr;
}
UPB_INLINE upb_Array* _google_protobuf_FieldOptions_edition_defaults_mutable_upb_array(const UPB_DESC(FieldOptions)* msg, size_t* size, upb_Arena* arena) {
  const upb_MiniTableField field = *upb_MiniTable_FindFieldByNumber(UPB_DESC(_FieldOptions_msg_init)(), 20);
  upb_Array* arr = upb_Message_GetOrCreateMutableArray(
      (upb_Message*)msg, &field, arena);
  if (size) {
    *size = arr ? arr->size : 0;
  }
  return arr;
}
UPB_INLINE bool UPB_DESC(FieldOptions_has_edition_defaults)(const UPB_DESC(FieldOptions)* msg) {
  size_t size;
  UPB_DESC(FieldOptions_edition_defaults)(msg, &size);
  return size != 0;
}
UPB_INLINE void UPB_DESC(FieldOptions_clear_features)(UPB_DESC(FieldOptions)* msg) {
  const upb_MiniTableField field = *upb_MiniTable_FindFieldByNumber(UPB_DESC(_FieldOptions_msg_init)(), 21);
  _upb_Message_ClearNonExtensionField(msg, &field);
}
UPB_INLINE const UPB_DESC(FeatureSet)* UPB_DESC(FieldOptions_features)(const UPB_DESC(FieldOptions)* msg) {
  const UPB_DESC(FeatureSet)* default_val = NULL;
  const UPB_DESC(FeatureSet)* ret;
  const upb_MiniTableField field = *upb_MiniTable_FindFieldByNumber(UPB_DESC(_FieldOptions_msg_init)(), 21);
  _upb_Message_GetNonExtensionField(msg, &field, &default_val, &ret);
  return ret;
}
UPB_INLINE bool UPB_DESC(FieldOptions_has_features)(const UPB_DESC(FieldOptions)* msg) {
  const upb_MiniTableField field = *upb_MiniTable_FindFieldByNumber(UPB_DESC(_FieldOptions_msg_init)(), 21);
  return _upb_Message_HasNonExtensionField(msg, &field);
}
UPB_INLINE void UPB_DESC(FieldOptions_clear_uninterpreted_option)(UPB_DESC(FieldOptions)* msg) {
  const upb_MiniTableField field = *upb_MiniTable_FindFieldByNumber(UPB_DESC(_FieldOptions_msg_init)(), 999);
  _upb_Message_ClearNonExtensionField(msg, &field);
}
UPB_INLINE const UPB_DESC(UninterpretedOption)* const* UPB_DESC(FieldOptions_uninterpreted_option)(const UPB_DESC(FieldOptions)* msg, size_t* size) {
  const upb_MiniTableField field = *upb_MiniTable_FindFieldByNumber(UPB_DESC(_FieldOptions_msg_init)(), 999);
  const upb_Array* arr = upb_Message_GetArray(msg, &field);
  if (arr) {
    if (size) *size = arr->size;
    return (const UPB_DESC(UninterpretedOption)* const*)_upb_array_constptr(arr);
  } else {
    if (size) *size = 0;
    return NULL;
  }
}
UPB_INLINE const upb_Array* _google_protobuf_FieldOptions_uninterpreted_option_upb_array(const UPB_DESC(FieldOptions)* msg, size_t* size) {
  const upb_MiniTableField field = *upb_MiniTable_FindFieldByNumber(UPB_DESC(_FieldOptions_msg_init)(), 999);
  const upb_Array* arr = upb_Message_GetArray(msg, &field);
  if (size) {
    *size = arr ? arr->size : 0;
  }
  return arr;
}
UPB_INLINE upb_Array* _google_protobuf_FieldOptions_uninterpreted_option_mutable_upb_array(const UPB_DESC(FieldOptions)* msg, size_t* size, upb_Arena* arena) {
  const upb_MiniTableField field = *upb_MiniTable_FindFieldByNumber(UPB_DESC(_FieldOptions_msg_init)(), 999);
  upb_Array* arr = upb_Message_GetOrCreateMutableArray(
      (upb_Message*)msg, &field, arena);
  if (size) {
    *size = arr ? arr->size : 0;
  }
  return arr;
}
UPB_INLINE bool UPB_DESC(FieldOptions_has_uninterpreted_option)(const UPB_DESC(FieldOptions)* msg) {
  size_t size;
  UPB_DESC(FieldOptions_uninterpreted_option)(msg, &size);
  return size != 0;
}

UPB_INLINE void UPB_DESC(FieldOptions_set_ctype)(UPB_DESC(FieldOptions) *msg, int32_t value) {
  const upb_MiniTableField field = *upb_MiniTable_FindFieldByNumber(UPB_DESC(_FieldOptions_msg_init)(), 1);
  _upb_Message_SetNonExtensionField(msg, &field, &value);
}
UPB_INLINE void UPB_DESC(FieldOptions_set_packed)(UPB_DESC(FieldOptions) *msg, bool value) {
  const upb_MiniTableField field = *upb_MiniTable_FindFieldByNumber(UPB_DESC(_FieldOptions_msg_init)(), 2);
  _upb_Message_SetNonExtensionField(msg, &field, &value);
}
UPB_INLINE void UPB_DESC(FieldOptions_set_deprecated)(UPB_DESC(FieldOptions) *msg, bool value) {
  const upb_MiniTableField field = *upb_MiniTable_FindFieldByNumber(UPB_DESC(_FieldOptions_msg_init)(), 3);
  _upb_Message_SetNonExtensionField(msg, &field, &value);
}
UPB_INLINE void UPB_DESC(FieldOptions_set_lazy)(UPB_DESC(FieldOptions) *msg, bool value) {
  const upb_MiniTableField field = *upb_MiniTable_FindFieldByNumber(UPB_DESC(_FieldOptions_msg_init)(), 5);
  _upb_Message_SetNonExtensionField(msg, &field, &value);
}
UPB_INLINE void UPB_DESC(FieldOptions_set_jstype)(UPB_DESC(FieldOptions) *msg, int32_t value) {
  const upb_MiniTableField field = *upb_MiniTable_FindFieldByNumber(UPB_DESC(_FieldOptions_msg_init)(), 6);
  _upb_Message_SetNonExtensionField(msg, &field, &value);
}
UPB_INLINE void UPB_DESC(FieldOptions_set_weak)(UPB_DESC(FieldOptions) *msg, bool value) {
  const upb_MiniTableField field = *upb_MiniTable_FindFieldByNumber(UPB_DESC(_FieldOptions_msg_init)(), 10);
  _upb_Message_SetNonExtensionField(msg, &field, &value);
}
UPB_INLINE void UPB_DESC(FieldOptions_set_unverified_lazy)(UPB_DESC(FieldOptions) *msg, bool value) {
  const upb_MiniTableField field = *upb_MiniTable_FindFieldByNumber(UPB_DESC(_FieldOptions_msg_init)(), 15);
  _upb_Message_SetNonExtensionField(msg, &field, &value);
}
UPB_INLINE void UPB_DESC(FieldOptions_set_debug_redact)(UPB_DESC(FieldOptions) *msg, bool value) {
  const upb_MiniTableField field = *upb_MiniTable_FindFieldByNumber(UPB_DESC(_FieldOptions_msg_init)(), 16);
  _upb_Message_SetNonExtensionField(msg, &field, &value);
}
UPB_INLINE void UPB_DESC(FieldOptions_set_retention)(UPB_DESC(FieldOptions) *msg, int32_t value) {
  const upb_MiniTableField field = *upb_MiniTable_FindFieldByNumber(UPB_DESC(_FieldOptions_msg_init)(), 17);
  _upb_Message_SetNonExtensionField(msg, &field, &value);
}
UPB_INLINE int32_t* UPB_DESC(FieldOptions_mutable_targets)(UPB_DESC(FieldOptions)* msg, size_t* size) {
  upb_MiniTableField field = *upb_MiniTable_FindFieldByNumber(UPB_DESC(_FieldOptions_msg_init)(), 19);
  upb_Array* arr = upb_Message_GetMutableArray(msg, &field);
  if (arr) {
    if (size) *size = arr->size;
    return (int32_t*)_upb_array_ptr(arr);
  } else {
    if (size) *size = 0;
    return NULL;
  }
}
UPB_INLINE int32_t* UPB_DESC(FieldOptions_resize_targets)(UPB_DESC(FieldOptions)* msg, size_t size, upb_Arena* arena) {
  upb_MiniTableField field = *upb_MiniTable_FindFieldByNumber(UPB_DESC(_FieldOptions_msg_init)(), 19);
  return (int32_t*)upb_Message_ResizeArrayUninitialized(msg, &field, size, arena);
}
UPB_INLINE bool UPB_DESC(FieldOptions_add_targets)(UPB_DESC(FieldOptions)* msg, int32_t val, upb_Arena* arena) {
  upb_MiniTableField field = *upb_MiniTable_FindFieldByNumber(UPB_DESC(_FieldOptions_msg_init)(), 19);
  upb_Array* arr = upb_Message_GetOrCreateMutableArray(msg, &field, arena);
  if (!arr || !_upb_Array_ResizeUninitialized(arr, arr->size + 1, arena)) {
    return false;
  }
  _upb_Array_Set(arr, arr->size - 1, &val, sizeof(val));
  return true;
}
UPB_INLINE UPB_DESC(FieldOptions_EditionDefault)** UPB_DESC(FieldOptions_mutable_edition_defaults)(UPB_DESC(FieldOptions)* msg, size_t* size) {
  upb_MiniTableField field = *upb_MiniTable_FindFieldByNumber(UPB_DESC(_FieldOptions_msg_init)(), 20);
  upb_Array* arr = upb_Message_GetMutableArray(msg, &field);
  if (arr) {
    if (size) *size = arr->size;
    return (UPB_DESC(FieldOptions_EditionDefault)**)_upb_array_ptr(arr);
  } else {
    if (size) *size = 0;
    return NULL;
  }
}
UPB_INLINE UPB_DESC(FieldOptions_EditionDefault)** UPB_DESC(FieldOptions_resize_edition_defaults)(UPB_DESC(FieldOptions)* msg, size_t size, upb_Arena* arena) {
  upb_MiniTableField field = *upb_MiniTable_FindFieldByNumber(UPB_DESC(_FieldOptions_msg_init)(), 20);
  return (UPB_DESC(FieldOptions_EditionDefault)**)upb_Message_ResizeArrayUninitialized(msg, &field, size, arena);
}
UPB_INLINE struct UPB_DESC(FieldOptions_EditionDefault)* UPB_DESC(FieldOptions_add_edition_defaults)(UPB_DESC(FieldOptions)* msg, upb_Arena* arena) {
  upb_MiniTableField field = *upb_MiniTable_FindFieldByNumber(UPB_DESC(_FieldOptions_msg_init)(), 20);
  upb_Array* arr = upb_Message_GetOrCreateMutableArray(msg, &field, arena);
  if (!arr || !_upb_Array_ResizeUninitialized(arr, arr->size + 1, arena)) {
    return NULL;
  }
  struct UPB_DESC(FieldOptions_EditionDefault)* sub = (struct UPB_DESC(FieldOptions_EditionDefault)*)_upb_Message_New(UPB_DESC(_FieldOptions__EditionDefault_msg_init)(), arena);
  if (!arr || !sub) return NULL;
  _upb_Array_Set(arr, arr->size - 1, &sub, sizeof(sub));
  return sub;
}
UPB_INLINE void UPB_DESC(FieldOptions_set_features)(UPB_DESC(FieldOptions) *msg, UPB_DESC(FeatureSet)* value) {
  const upb_MiniTableField field = *upb_MiniTable_FindFieldByNumber(UPB_DESC(_FieldOptions_msg_init)(), 21);
  _upb_Message_SetNonExtensionField(msg, &field, &value);
}
UPB_INLINE struct UPB_DESC(FeatureSet)* UPB_DESC(FieldOptions_mutable_features)(UPB_DESC(FieldOptions)* msg, upb_Arena* arena) {
  struct UPB_DESC(FeatureSet)* sub = (struct UPB_DESC(FeatureSet)*)UPB_DESC(FieldOptions_features)(msg);
  if (sub == NULL) {
    sub = (struct UPB_DESC(FeatureSet)*)_upb_Message_New(UPB_DESC(_FeatureSet_msg_init)(), arena);
    if (sub) UPB_DESC(FieldOptions_set_features)(msg, sub);
  }
  return sub;
}
UPB_INLINE UPB_DESC(UninterpretedOption)** UPB_DESC(FieldOptions_mutable_uninterpreted_option)(UPB_DESC(FieldOptions)* msg, size_t* size) {
  upb_MiniTableField field = *upb_MiniTable_FindFieldByNumber(UPB_DESC(_FieldOptions_msg_init)(), 999);
  upb_Array* arr = upb_Message_GetMutableArray(msg, &field);
  if (arr) {
    if (size) *size = arr->size;
    return (UPB_DESC(UninterpretedOption)**)_upb_array_ptr(arr);
  } else {
    if (size) *size = 0;
    return NULL;
  }
}
UPB_INLINE UPB_DESC(UninterpretedOption)** UPB_DESC(FieldOptions_resize_uninterpreted_option)(UPB_DESC(FieldOptions)* msg, size_t size, upb_Arena* arena) {
  upb_MiniTableField field = *upb_MiniTable_FindFieldByNumber(UPB_DESC(_FieldOptions_msg_init)(), 999);
  return (UPB_DESC(UninterpretedOption)**)upb_Message_ResizeArrayUninitialized(msg, &field, size, arena);
}
UPB_INLINE struct UPB_DESC(UninterpretedOption)* UPB_DESC(FieldOptions_add_uninterpreted_option)(UPB_DESC(FieldOptions)* msg, upb_Arena* arena) {
  upb_MiniTableField field = *upb_MiniTable_FindFieldByNumber(UPB_DESC(_FieldOptions_msg_init)(), 999);
  upb_Array* arr = upb_Message_GetOrCreateMutableArray(msg, &field, arena);
  if (!arr || !_upb_Array_ResizeUninitialized(arr, arr->size + 1, arena)) {
    return NULL;
  }
  struct UPB_DESC(UninterpretedOption)* sub = (struct UPB_DESC(UninterpretedOption)*)_upb_Message_New(UPB_DESC(_UninterpretedOption_msg_init)(), arena);
  if (!arr || !sub) return NULL;
  _upb_Array_Set(arr, arr->size - 1, &sub, sizeof(sub));
  return sub;
}

/* google.protobuf.FieldOptions.EditionDefault */

UPB_INLINE UPB_DESC(FieldOptions_EditionDefault)* UPB_DESC(FieldOptions_EditionDefault_new)(upb_Arena* arena) {
  return (UPB_DESC(FieldOptions_EditionDefault)*)_upb_Message_New(UPB_DESC(_FieldOptions__EditionDefault_msg_init)(), arena);
}
UPB_INLINE UPB_DESC(FieldOptions_EditionDefault)* UPB_DESC(FieldOptions_EditionDefault_parse)(const char* buf, size_t size, upb_Arena* arena) {
  UPB_DESC(FieldOptions_EditionDefault)* ret = UPB_DESC(FieldOptions_EditionDefault_new)(arena);
  if (!ret) return NULL;
  if (upb_Decode(buf, size, ret, UPB_DESC(_FieldOptions__EditionDefault_msg_init)(), NULL, 0, arena) != kUpb_DecodeStatus_Ok) {
    return NULL;
  }
  return ret;
}
UPB_INLINE UPB_DESC(FieldOptions_EditionDefault)* UPB_DESC(FieldOptions_EditionDefault_parse_ex)(const char* buf, size_t size,
                           const upb_ExtensionRegistry* extreg,
                           int options, upb_Arena* arena) {
  UPB_DESC(FieldOptions_EditionDefault)* ret = UPB_DESC(FieldOptions_EditionDefault_new)(arena);
  if (!ret) return NULL;
  if (upb_Decode(buf, size, ret, UPB_DESC(_FieldOptions__EditionDefault_msg_init)(), extreg, options, arena) !=
      kUpb_DecodeStatus_Ok) {
    return NULL;
  }
  return ret;
}
UPB_INLINE char* UPB_DESC(FieldOptions_EditionDefault_serialize)(const UPB_DESC(FieldOptions_EditionDefault)* msg, upb_Arena* arena, size_t* len) {
  char* ptr;
  (void)upb_Encode(msg, UPB_DESC(_FieldOptions__EditionDefault_msg_init)(), 0, arena, &ptr, len);
  return ptr;
}
UPB_INLINE char* UPB_DESC(FieldOptions_EditionDefault_serialize_ex)(const UPB_DESC(FieldOptions_EditionDefault)* msg, int options,
                                 upb_Arena* arena, size_t* len) {
  char* ptr;
  (void)upb_Encode(msg, UPB_DESC(_FieldOptions__EditionDefault_msg_init)(), options, arena, &ptr, len);
  return ptr;
}
UPB_INLINE void UPB_DESC(FieldOptions_EditionDefault_clear_value)(UPB_DESC(FieldOptions_EditionDefault)* msg) {
  const upb_MiniTableField field = *upb_MiniTable_FindFieldByNumber(UPB_DESC(_FieldOptions__EditionDefault_msg_init)(), 2);
  _upb_Message_ClearNonExtensionField(msg, &field);
}
UPB_INLINE upb_StringView UPB_DESC(FieldOptions_EditionDefault_value)(const UPB_DESC(FieldOptions_EditionDefault)* msg) {
  upb_StringView default_val = upb_StringView_FromString("");
  upb_StringView ret;
  const upb_MiniTableField field = *upb_MiniTable_FindFieldByNumber(UPB_DESC(_FieldOptions__EditionDefault_msg_init)(), 2);
  _upb_Message_GetNonExtensionField(msg, &field, &default_val, &ret);
  return ret;
}
UPB_INLINE bool UPB_DESC(FieldOptions_EditionDefault_has_value)(const UPB_DESC(FieldOptions_EditionDefault)* msg) {
  const upb_MiniTableField field = *upb_MiniTable_FindFieldByNumber(UPB_DESC(_FieldOptions__EditionDefault_msg_init)(), 2);
  return _upb_Message_HasNonExtensionField(msg, &field);
}
UPB_INLINE void UPB_DESC(FieldOptions_EditionDefault_clear_edition)(UPB_DESC(FieldOptions_EditionDefault)* msg) {
  const upb_MiniTableField field = *upb_MiniTable_FindFieldByNumber(UPB_DESC(_FieldOptions__EditionDefault_msg_init)(), 3);
  _upb_Message_ClearNonExtensionField(msg, &field);
}
UPB_INLINE int32_t UPB_DESC(FieldOptions_EditionDefault_edition)(const UPB_DESC(FieldOptions_EditionDefault)* msg) {
  int32_t default_val = 0;
  int32_t ret;
  const upb_MiniTableField field = *upb_MiniTable_FindFieldByNumber(UPB_DESC(_FieldOptions__EditionDefault_msg_init)(), 3);
  _upb_Message_GetNonExtensionField(msg, &field, &default_val, &ret);
  return ret;
}
UPB_INLINE bool UPB_DESC(FieldOptions_EditionDefault_has_edition)(const UPB_DESC(FieldOptions_EditionDefault)* msg) {
  const upb_MiniTableField field = *upb_MiniTable_FindFieldByNumber(UPB_DESC(_FieldOptions__EditionDefault_msg_init)(), 3);
  return _upb_Message_HasNonExtensionField(msg, &field);
}

UPB_INLINE void UPB_DESC(FieldOptions_EditionDefault_set_value)(UPB_DESC(FieldOptions_EditionDefault) *msg, upb_StringView value) {
  const upb_MiniTableField field = *upb_MiniTable_FindFieldByNumber(UPB_DESC(_FieldOptions__EditionDefault_msg_init)(), 2);
  _upb_Message_SetNonExtensionField(msg, &field, &value);
}
UPB_INLINE void UPB_DESC(FieldOptions_EditionDefault_set_edition)(UPB_DESC(FieldOptions_EditionDefault) *msg, int32_t value) {
  const upb_MiniTableField field = *upb_MiniTable_FindFieldByNumber(UPB_DESC(_FieldOptions__EditionDefault_msg_init)(), 3);
  _upb_Message_SetNonExtensionField(msg, &field, &value);
}

/* google.protobuf.OneofOptions */

UPB_INLINE UPB_DESC(OneofOptions)* UPB_DESC(OneofOptions_new)(upb_Arena* arena) {
  return (UPB_DESC(OneofOptions)*)_upb_Message_New(UPB_DESC(_OneofOptions_msg_init)(), arena);
}
UPB_INLINE UPB_DESC(OneofOptions)* UPB_DESC(OneofOptions_parse)(const char* buf, size_t size, upb_Arena* arena) {
  UPB_DESC(OneofOptions)* ret = UPB_DESC(OneofOptions_new)(arena);
  if (!ret) return NULL;
  if (upb_Decode(buf, size, ret, UPB_DESC(_OneofOptions_msg_init)(), NULL, 0, arena) != kUpb_DecodeStatus_Ok) {
    return NULL;
  }
  return ret;
}
UPB_INLINE UPB_DESC(OneofOptions)* UPB_DESC(OneofOptions_parse_ex)(const char* buf, size_t size,
                           const upb_ExtensionRegistry* extreg,
                           int options, upb_Arena* arena) {
  UPB_DESC(OneofOptions)* ret = UPB_DESC(OneofOptions_new)(arena);
  if (!ret) return NULL;
  if (upb_Decode(buf, size, ret, UPB_DESC(_OneofOptions_msg_init)(), extreg, options, arena) !=
      kUpb_DecodeStatus_Ok) {
    return NULL;
  }
  return ret;
}
UPB_INLINE char* UPB_DESC(OneofOptions_serialize)(const UPB_DESC(OneofOptions)* msg, upb_Arena* arena, size_t* len) {
  char* ptr;
  (void)upb_Encode(msg, UPB_DESC(_OneofOptions_msg_init)(), 0, arena, &ptr, len);
  return ptr;
}
UPB_INLINE char* UPB_DESC(OneofOptions_serialize_ex)(const UPB_DESC(OneofOptions)* msg, int options,
                                 upb_Arena* arena, size_t* len) {
  char* ptr;
  (void)upb_Encode(msg, UPB_DESC(_OneofOptions_msg_init)(), options, arena, &ptr, len);
  return ptr;
}
UPB_INLINE void UPB_DESC(OneofOptions_clear_features)(UPB_DESC(OneofOptions)* msg) {
  const upb_MiniTableField field = *upb_MiniTable_FindFieldByNumber(UPB_DESC(_OneofOptions_msg_init)(), 1);
  _upb_Message_ClearNonExtensionField(msg, &field);
}
UPB_INLINE const UPB_DESC(FeatureSet)* UPB_DESC(OneofOptions_features)(const UPB_DESC(OneofOptions)* msg) {
  const UPB_DESC(FeatureSet)* default_val = NULL;
  const UPB_DESC(FeatureSet)* ret;
  const upb_MiniTableField field = *upb_MiniTable_FindFieldByNumber(UPB_DESC(_OneofOptions_msg_init)(), 1);
  _upb_Message_GetNonExtensionField(msg, &field, &default_val, &ret);
  return ret;
}
UPB_INLINE bool UPB_DESC(OneofOptions_has_features)(const UPB_DESC(OneofOptions)* msg) {
  const upb_MiniTableField field = *upb_MiniTable_FindFieldByNumber(UPB_DESC(_OneofOptions_msg_init)(), 1);
  return _upb_Message_HasNonExtensionField(msg, &field);
}
UPB_INLINE void UPB_DESC(OneofOptions_clear_uninterpreted_option)(UPB_DESC(OneofOptions)* msg) {
  const upb_MiniTableField field = *upb_MiniTable_FindFieldByNumber(UPB_DESC(_OneofOptions_msg_init)(), 999);
  _upb_Message_ClearNonExtensionField(msg, &field);
}
UPB_INLINE const UPB_DESC(UninterpretedOption)* const* UPB_DESC(OneofOptions_uninterpreted_option)(const UPB_DESC(OneofOptions)* msg, size_t* size) {
  const upb_MiniTableField field = *upb_MiniTable_FindFieldByNumber(UPB_DESC(_OneofOptions_msg_init)(), 999);
  const upb_Array* arr = upb_Message_GetArray(msg, &field);
  if (arr) {
    if (size) *size = arr->size;
    return (const UPB_DESC(UninterpretedOption)* const*)_upb_array_constptr(arr);
  } else {
    if (size) *size = 0;
    return NULL;
  }
}
UPB_INLINE const upb_Array* _google_protobuf_OneofOptions_uninterpreted_option_upb_array(const UPB_DESC(OneofOptions)* msg, size_t* size) {
  const upb_MiniTableField field = *upb_MiniTable_FindFieldByNumber(UPB_DESC(_OneofOptions_msg_init)(), 999);
  const upb_Array* arr = upb_Message_GetArray(msg, &field);
  if (size) {
    *size = arr ? arr->size : 0;
  }
  return arr;
}
UPB_INLINE upb_Array* _google_protobuf_OneofOptions_uninterpreted_option_mutable_upb_array(const UPB_DESC(OneofOptions)* msg, size_t* size, upb_Arena* arena) {
  const upb_MiniTableField field = *upb_MiniTable_FindFieldByNumber(UPB_DESC(_OneofOptions_msg_init)(), 999);
  upb_Array* arr = upb_Message_GetOrCreateMutableArray(
      (upb_Message*)msg, &field, arena);
  if (size) {
    *size = arr ? arr->size : 0;
  }
  return arr;
}
UPB_INLINE bool UPB_DESC(OneofOptions_has_uninterpreted_option)(const UPB_DESC(OneofOptions)* msg) {
  size_t size;
  UPB_DESC(OneofOptions_uninterpreted_option)(msg, &size);
  return size != 0;
}

UPB_INLINE void UPB_DESC(OneofOptions_set_features)(UPB_DESC(OneofOptions) *msg, UPB_DESC(FeatureSet)* value) {
  const upb_MiniTableField field = *upb_MiniTable_FindFieldByNumber(UPB_DESC(_OneofOptions_msg_init)(), 1);
  _upb_Message_SetNonExtensionField(msg, &field, &value);
}
UPB_INLINE struct UPB_DESC(FeatureSet)* UPB_DESC(OneofOptions_mutable_features)(UPB_DESC(OneofOptions)* msg, upb_Arena* arena) {
  struct UPB_DESC(FeatureSet)* sub = (struct UPB_DESC(FeatureSet)*)UPB_DESC(OneofOptions_features)(msg);
  if (sub == NULL) {
    sub = (struct UPB_DESC(FeatureSet)*)_upb_Message_New(UPB_DESC(_FeatureSet_msg_init)(), arena);
    if (sub) UPB_DESC(OneofOptions_set_features)(msg, sub);
  }
  return sub;
}
UPB_INLINE UPB_DESC(UninterpretedOption)** UPB_DESC(OneofOptions_mutable_uninterpreted_option)(UPB_DESC(OneofOptions)* msg, size_t* size) {
  upb_MiniTableField field = *upb_MiniTable_FindFieldByNumber(UPB_DESC(_OneofOptions_msg_init)(), 999);
  upb_Array* arr = upb_Message_GetMutableArray(msg, &field);
  if (arr) {
    if (size) *size = arr->size;
    return (UPB_DESC(UninterpretedOption)**)_upb_array_ptr(arr);
  } else {
    if (size) *size = 0;
    return NULL;
  }
}
UPB_INLINE UPB_DESC(UninterpretedOption)** UPB_DESC(OneofOptions_resize_uninterpreted_option)(UPB_DESC(OneofOptions)* msg, size_t size, upb_Arena* arena) {
  upb_MiniTableField field = *upb_MiniTable_FindFieldByNumber(UPB_DESC(_OneofOptions_msg_init)(), 999);
  return (UPB_DESC(UninterpretedOption)**)upb_Message_ResizeArrayUninitialized(msg, &field, size, arena);
}
UPB_INLINE struct UPB_DESC(UninterpretedOption)* UPB_DESC(OneofOptions_add_uninterpreted_option)(UPB_DESC(OneofOptions)* msg, upb_Arena* arena) {
  upb_MiniTableField field = *upb_MiniTable_FindFieldByNumber(UPB_DESC(_OneofOptions_msg_init)(), 999);
  upb_Array* arr = upb_Message_GetOrCreateMutableArray(msg, &field, arena);
  if (!arr || !_upb_Array_ResizeUninitialized(arr, arr->size + 1, arena)) {
    return NULL;
  }
  struct UPB_DESC(UninterpretedOption)* sub = (struct UPB_DESC(UninterpretedOption)*)_upb_Message_New(UPB_DESC(_UninterpretedOption_msg_init)(), arena);
  if (!arr || !sub) return NULL;
  _upb_Array_Set(arr, arr->size - 1, &sub, sizeof(sub));
  return sub;
}

/* google.protobuf.EnumOptions */

UPB_INLINE UPB_DESC(EnumOptions)* UPB_DESC(EnumOptions_new)(upb_Arena* arena) {
  return (UPB_DESC(EnumOptions)*)_upb_Message_New(UPB_DESC(_EnumOptions_msg_init)(), arena);
}
UPB_INLINE UPB_DESC(EnumOptions)* UPB_DESC(EnumOptions_parse)(const char* buf, size_t size, upb_Arena* arena) {
  UPB_DESC(EnumOptions)* ret = UPB_DESC(EnumOptions_new)(arena);
  if (!ret) return NULL;
  if (upb_Decode(buf, size, ret, UPB_DESC(_EnumOptions_msg_init)(), NULL, 0, arena) != kUpb_DecodeStatus_Ok) {
    return NULL;
  }
  return ret;
}
UPB_INLINE UPB_DESC(EnumOptions)* UPB_DESC(EnumOptions_parse_ex)(const char* buf, size_t size,
                           const upb_ExtensionRegistry* extreg,
                           int options, upb_Arena* arena) {
  UPB_DESC(EnumOptions)* ret = UPB_DESC(EnumOptions_new)(arena);
  if (!ret) return NULL;
  if (upb_Decode(buf, size, ret, UPB_DESC(_EnumOptions_msg_init)(), extreg, options, arena) !=
      kUpb_DecodeStatus_Ok) {
    return NULL;
  }
  return ret;
}
UPB_INLINE char* UPB_DESC(EnumOptions_serialize)(const UPB_DESC(EnumOptions)* msg, upb_Arena* arena, size_t* len) {
  char* ptr;
  (void)upb_Encode(msg, UPB_DESC(_EnumOptions_msg_init)(), 0, arena, &ptr, len);
  return ptr;
}
UPB_INLINE char* UPB_DESC(EnumOptions_serialize_ex)(const UPB_DESC(EnumOptions)* msg, int options,
                                 upb_Arena* arena, size_t* len) {
  char* ptr;
  (void)upb_Encode(msg, UPB_DESC(_EnumOptions_msg_init)(), options, arena, &ptr, len);
  return ptr;
}
UPB_INLINE void UPB_DESC(EnumOptions_clear_allow_alias)(UPB_DESC(EnumOptions)* msg) {
  const upb_MiniTableField field = *upb_MiniTable_FindFieldByNumber(UPB_DESC(_EnumOptions_msg_init)(), 2);
  _upb_Message_ClearNonExtensionField(msg, &field);
}
UPB_INLINE bool UPB_DESC(EnumOptions_allow_alias)(const UPB_DESC(EnumOptions)* msg) {
  bool default_val = false;
  bool ret;
  const upb_MiniTableField field = *upb_MiniTable_FindFieldByNumber(UPB_DESC(_EnumOptions_msg_init)(), 2);
  _upb_Message_GetNonExtensionField(msg, &field, &default_val, &ret);
  return ret;
}
UPB_INLINE bool UPB_DESC(EnumOptions_has_allow_alias)(const UPB_DESC(EnumOptions)* msg) {
  const upb_MiniTableField field = *upb_MiniTable_FindFieldByNumber(UPB_DESC(_EnumOptions_msg_init)(), 2);
  return _upb_Message_HasNonExtensionField(msg, &field);
}
UPB_INLINE void UPB_DESC(EnumOptions_clear_deprecated)(UPB_DESC(EnumOptions)* msg) {
  const upb_MiniTableField field = *upb_MiniTable_FindFieldByNumber(UPB_DESC(_EnumOptions_msg_init)(), 3);
  _upb_Message_ClearNonExtensionField(msg, &field);
}
UPB_INLINE bool UPB_DESC(EnumOptions_deprecated)(const UPB_DESC(EnumOptions)* msg) {
  bool default_val = false;
  bool ret;
  const upb_MiniTableField field = *upb_MiniTable_FindFieldByNumber(UPB_DESC(_EnumOptions_msg_init)(), 3);
  _upb_Message_GetNonExtensionField(msg, &field, &default_val, &ret);
  return ret;
}
UPB_INLINE bool UPB_DESC(EnumOptions_has_deprecated)(const UPB_DESC(EnumOptions)* msg) {
  const upb_MiniTableField field = *upb_MiniTable_FindFieldByNumber(UPB_DESC(_EnumOptions_msg_init)(), 3);
  return _upb_Message_HasNonExtensionField(msg, &field);
}
UPB_INLINE void UPB_DESC(EnumOptions_clear_deprecated_legacy_json_field_conflicts)(UPB_DESC(EnumOptions)* msg) {
  const upb_MiniTableField field = *upb_MiniTable_FindFieldByNumber(UPB_DESC(_EnumOptions_msg_init)(), 6);
  _upb_Message_ClearNonExtensionField(msg, &field);
}
UPB_INLINE bool UPB_DESC(EnumOptions_deprecated_legacy_json_field_conflicts)(const UPB_DESC(EnumOptions)* msg) {
  bool default_val = false;
  bool ret;
  const upb_MiniTableField field = *upb_MiniTable_FindFieldByNumber(UPB_DESC(_EnumOptions_msg_init)(), 6);
  _upb_Message_GetNonExtensionField(msg, &field, &default_val, &ret);
  return ret;
}
UPB_INLINE bool UPB_DESC(EnumOptions_has_deprecated_legacy_json_field_conflicts)(const UPB_DESC(EnumOptions)* msg) {
  const upb_MiniTableField field = *upb_MiniTable_FindFieldByNumber(UPB_DESC(_EnumOptions_msg_init)(), 6);
  return _upb_Message_HasNonExtensionField(msg, &field);
}
UPB_INLINE void UPB_DESC(EnumOptions_clear_features)(UPB_DESC(EnumOptions)* msg) {
  const upb_MiniTableField field = *upb_MiniTable_FindFieldByNumber(UPB_DESC(_EnumOptions_msg_init)(), 7);
  _upb_Message_ClearNonExtensionField(msg, &field);
}
UPB_INLINE const UPB_DESC(FeatureSet)* UPB_DESC(EnumOptions_features)(const UPB_DESC(EnumOptions)* msg) {
  const UPB_DESC(FeatureSet)* default_val = NULL;
  const UPB_DESC(FeatureSet)* ret;
  const upb_MiniTableField field = *upb_MiniTable_FindFieldByNumber(UPB_DESC(_EnumOptions_msg_init)(), 7);
  _upb_Message_GetNonExtensionField(msg, &field, &default_val, &ret);
  return ret;
}
UPB_INLINE bool UPB_DESC(EnumOptions_has_features)(const UPB_DESC(EnumOptions)* msg) {
  const upb_MiniTableField field = *upb_MiniTable_FindFieldByNumber(UPB_DESC(_EnumOptions_msg_init)(), 7);
  return _upb_Message_HasNonExtensionField(msg, &field);
}
UPB_INLINE void UPB_DESC(EnumOptions_clear_uninterpreted_option)(UPB_DESC(EnumOptions)* msg) {
  const upb_MiniTableField field = *upb_MiniTable_FindFieldByNumber(UPB_DESC(_EnumOptions_msg_init)(), 999);
  _upb_Message_ClearNonExtensionField(msg, &field);
}
UPB_INLINE const UPB_DESC(UninterpretedOption)* const* UPB_DESC(EnumOptions_uninterpreted_option)(const UPB_DESC(EnumOptions)* msg, size_t* size) {
  const upb_MiniTableField field = *upb_MiniTable_FindFieldByNumber(UPB_DESC(_EnumOptions_msg_init)(), 999);
  const upb_Array* arr = upb_Message_GetArray(msg, &field);
  if (arr) {
    if (size) *size = arr->size;
    return (const UPB_DESC(UninterpretedOption)* const*)_upb_array_constptr(arr);
  } else {
    if (size) *size = 0;
    return NULL;
  }
}
UPB_INLINE const upb_Array* _google_protobuf_EnumOptions_uninterpreted_option_upb_array(const UPB_DESC(EnumOptions)* msg, size_t* size) {
  const upb_MiniTableField field = *upb_MiniTable_FindFieldByNumber(UPB_DESC(_EnumOptions_msg_init)(), 999);
  const upb_Array* arr = upb_Message_GetArray(msg, &field);
  if (size) {
    *size = arr ? arr->size : 0;
  }
  return arr;
}
UPB_INLINE upb_Array* _google_protobuf_EnumOptions_uninterpreted_option_mutable_upb_array(const UPB_DESC(EnumOptions)* msg, size_t* size, upb_Arena* arena) {
  const upb_MiniTableField field = *upb_MiniTable_FindFieldByNumber(UPB_DESC(_EnumOptions_msg_init)(), 999);
  upb_Array* arr = upb_Message_GetOrCreateMutableArray(
      (upb_Message*)msg, &field, arena);
  if (size) {
    *size = arr ? arr->size : 0;
  }
  return arr;
}
UPB_INLINE bool UPB_DESC(EnumOptions_has_uninterpreted_option)(const UPB_DESC(EnumOptions)* msg) {
  size_t size;
  UPB_DESC(EnumOptions_uninterpreted_option)(msg, &size);
  return size != 0;
}

UPB_INLINE void UPB_DESC(EnumOptions_set_allow_alias)(UPB_DESC(EnumOptions) *msg, bool value) {
  const upb_MiniTableField field = *upb_MiniTable_FindFieldByNumber(UPB_DESC(_EnumOptions_msg_init)(), 2);
  _upb_Message_SetNonExtensionField(msg, &field, &value);
}
UPB_INLINE void UPB_DESC(EnumOptions_set_deprecated)(UPB_DESC(EnumOptions) *msg, bool value) {
  const upb_MiniTableField field = *upb_MiniTable_FindFieldByNumber(UPB_DESC(_EnumOptions_msg_init)(), 3);
  _upb_Message_SetNonExtensionField(msg, &field, &value);
}
UPB_INLINE void UPB_DESC(EnumOptions_set_deprecated_legacy_json_field_conflicts)(UPB_DESC(EnumOptions) *msg, bool value) {
  const upb_MiniTableField field = *upb_MiniTable_FindFieldByNumber(UPB_DESC(_EnumOptions_msg_init)(), 6);
  _upb_Message_SetNonExtensionField(msg, &field, &value);
}
UPB_INLINE void UPB_DESC(EnumOptions_set_features)(UPB_DESC(EnumOptions) *msg, UPB_DESC(FeatureSet)* value) {
  const upb_MiniTableField field = *upb_MiniTable_FindFieldByNumber(UPB_DESC(_EnumOptions_msg_init)(), 7);
  _upb_Message_SetNonExtensionField(msg, &field, &value);
}
UPB_INLINE struct UPB_DESC(FeatureSet)* UPB_DESC(EnumOptions_mutable_features)(UPB_DESC(EnumOptions)* msg, upb_Arena* arena) {
  struct UPB_DESC(FeatureSet)* sub = (struct UPB_DESC(FeatureSet)*)UPB_DESC(EnumOptions_features)(msg);
  if (sub == NULL) {
    sub = (struct UPB_DESC(FeatureSet)*)_upb_Message_New(UPB_DESC(_FeatureSet_msg_init)(), arena);
    if (sub) UPB_DESC(EnumOptions_set_features)(msg, sub);
  }
  return sub;
}
UPB_INLINE UPB_DESC(UninterpretedOption)** UPB_DESC(EnumOptions_mutable_uninterpreted_option)(UPB_DESC(EnumOptions)* msg, size_t* size) {
  upb_MiniTableField field = *upb_MiniTable_FindFieldByNumber(UPB_DESC(_EnumOptions_msg_init)(), 999);
  upb_Array* arr = upb_Message_GetMutableArray(msg, &field);
  if (arr) {
    if (size) *size = arr->size;
    return (UPB_DESC(UninterpretedOption)**)_upb_array_ptr(arr);
  } else {
    if (size) *size = 0;
    return NULL;
  }
}
UPB_INLINE UPB_DESC(UninterpretedOption)** UPB_DESC(EnumOptions_resize_uninterpreted_option)(UPB_DESC(EnumOptions)* msg, size_t size, upb_Arena* arena) {
  upb_MiniTableField field = *upb_MiniTable_FindFieldByNumber(UPB_DESC(_EnumOptions_msg_init)(), 999);
  return (UPB_DESC(UninterpretedOption)**)upb_Message_ResizeArrayUninitialized(msg, &field, size, arena);
}
UPB_INLINE struct UPB_DESC(UninterpretedOption)* UPB_DESC(EnumOptions_add_uninterpreted_option)(UPB_DESC(EnumOptions)* msg, upb_Arena* arena) {
  upb_MiniTableField field = *upb_MiniTable_FindFieldByNumber(UPB_DESC(_EnumOptions_msg_init)(), 999);
  upb_Array* arr = upb_Message_GetOrCreateMutableArray(msg, &field, arena);
  if (!arr || !_upb_Array_ResizeUninitialized(arr, arr->size + 1, arena)) {
    return NULL;
  }
  struct UPB_DESC(UninterpretedOption)* sub = (struct UPB_DESC(UninterpretedOption)*)_upb_Message_New(UPB_DESC(_UninterpretedOption_msg_init)(), arena);
  if (!arr || !sub) return NULL;
  _upb_Array_Set(arr, arr->size - 1, &sub, sizeof(sub));
  return sub;
}

/* google.protobuf.EnumValueOptions */

UPB_INLINE UPB_DESC(EnumValueOptions)* UPB_DESC(EnumValueOptions_new)(upb_Arena* arena) {
  return (UPB_DESC(EnumValueOptions)*)_upb_Message_New(UPB_DESC(_EnumValueOptions_msg_init)(), arena);
}
UPB_INLINE UPB_DESC(EnumValueOptions)* UPB_DESC(EnumValueOptions_parse)(const char* buf, size_t size, upb_Arena* arena) {
  UPB_DESC(EnumValueOptions)* ret = UPB_DESC(EnumValueOptions_new)(arena);
  if (!ret) return NULL;
  if (upb_Decode(buf, size, ret, UPB_DESC(_EnumValueOptions_msg_init)(), NULL, 0, arena) != kUpb_DecodeStatus_Ok) {
    return NULL;
  }
  return ret;
}
UPB_INLINE UPB_DESC(EnumValueOptions)* UPB_DESC(EnumValueOptions_parse_ex)(const char* buf, size_t size,
                           const upb_ExtensionRegistry* extreg,
                           int options, upb_Arena* arena) {
  UPB_DESC(EnumValueOptions)* ret = UPB_DESC(EnumValueOptions_new)(arena);
  if (!ret) return NULL;
  if (upb_Decode(buf, size, ret, UPB_DESC(_EnumValueOptions_msg_init)(), extreg, options, arena) !=
      kUpb_DecodeStatus_Ok) {
    return NULL;
  }
  return ret;
}
UPB_INLINE char* UPB_DESC(EnumValueOptions_serialize)(const UPB_DESC(EnumValueOptions)* msg, upb_Arena* arena, size_t* len) {
  char* ptr;
  (void)upb_Encode(msg, UPB_DESC(_EnumValueOptions_msg_init)(), 0, arena, &ptr, len);
  return ptr;
}
UPB_INLINE char* UPB_DESC(EnumValueOptions_serialize_ex)(const UPB_DESC(EnumValueOptions)* msg, int options,
                                 upb_Arena* arena, size_t* len) {
  char* ptr;
  (void)upb_Encode(msg, UPB_DESC(_EnumValueOptions_msg_init)(), options, arena, &ptr, len);
  return ptr;
}
UPB_INLINE void UPB_DESC(EnumValueOptions_clear_deprecated)(UPB_DESC(EnumValueOptions)* msg) {
  const upb_MiniTableField field = *upb_MiniTable_FindFieldByNumber(UPB_DESC(_EnumValueOptions_msg_init)(), 1);
  _upb_Message_ClearNonExtensionField(msg, &field);
}
UPB_INLINE bool UPB_DESC(EnumValueOptions_deprecated)(const UPB_DESC(EnumValueOptions)* msg) {
  bool default_val = false;
  bool ret;
  const upb_MiniTableField field = *upb_MiniTable_FindFieldByNumber(UPB_DESC(_EnumValueOptions_msg_init)(), 1);
  _upb_Message_GetNonExtensionField(msg, &field, &default_val, &ret);
  return ret;
}
UPB_INLINE bool UPB_DESC(EnumValueOptions_has_deprecated)(const UPB_DESC(EnumValueOptions)* msg) {
  const upb_MiniTableField field = *upb_MiniTable_FindFieldByNumber(UPB_DESC(_EnumValueOptions_msg_init)(), 1);
  return _upb_Message_HasNonExtensionField(msg, &field);
}
UPB_INLINE void UPB_DESC(EnumValueOptions_clear_features)(UPB_DESC(EnumValueOptions)* msg) {
  const upb_MiniTableField field = *upb_MiniTable_FindFieldByNumber(UPB_DESC(_EnumValueOptions_msg_init)(), 2);
  _upb_Message_ClearNonExtensionField(msg, &field);
}
UPB_INLINE const UPB_DESC(FeatureSet)* UPB_DESC(EnumValueOptions_features)(const UPB_DESC(EnumValueOptions)* msg) {
  const UPB_DESC(FeatureSet)* default_val = NULL;
  const UPB_DESC(FeatureSet)* ret;
  const upb_MiniTableField field = *upb_MiniTable_FindFieldByNumber(UPB_DESC(_EnumValueOptions_msg_init)(), 2);
  _upb_Message_GetNonExtensionField(msg, &field, &default_val, &ret);
  return ret;
}
UPB_INLINE bool UPB_DESC(EnumValueOptions_has_features)(const UPB_DESC(EnumValueOptions)* msg) {
  const upb_MiniTableField field = *upb_MiniTable_FindFieldByNumber(UPB_DESC(_EnumValueOptions_msg_init)(), 2);
  return _upb_Message_HasNonExtensionField(msg, &field);
}
UPB_INLINE void UPB_DESC(EnumValueOptions_clear_debug_redact)(UPB_DESC(EnumValueOptions)* msg) {
  const upb_MiniTableField field = *upb_MiniTable_FindFieldByNumber(UPB_DESC(_EnumValueOptions_msg_init)(), 3);
  _upb_Message_ClearNonExtensionField(msg, &field);
}
UPB_INLINE bool UPB_DESC(EnumValueOptions_debug_redact)(const UPB_DESC(EnumValueOptions)* msg) {
  bool default_val = false;
  bool ret;
  const upb_MiniTableField field = *upb_MiniTable_FindFieldByNumber(UPB_DESC(_EnumValueOptions_msg_init)(), 3);
  _upb_Message_GetNonExtensionField(msg, &field, &default_val, &ret);
  return ret;
}
UPB_INLINE bool UPB_DESC(EnumValueOptions_has_debug_redact)(const UPB_DESC(EnumValueOptions)* msg) {
  const upb_MiniTableField field = *upb_MiniTable_FindFieldByNumber(UPB_DESC(_EnumValueOptions_msg_init)(), 3);
  return _upb_Message_HasNonExtensionField(msg, &field);
}
UPB_INLINE void UPB_DESC(EnumValueOptions_clear_uninterpreted_option)(UPB_DESC(EnumValueOptions)* msg) {
  const upb_MiniTableField field = *upb_MiniTable_FindFieldByNumber(UPB_DESC(_EnumValueOptions_msg_init)(), 999);
  _upb_Message_ClearNonExtensionField(msg, &field);
}
UPB_INLINE const UPB_DESC(UninterpretedOption)* const* UPB_DESC(EnumValueOptions_uninterpreted_option)(const UPB_DESC(EnumValueOptions)* msg, size_t* size) {
  const upb_MiniTableField field = *upb_MiniTable_FindFieldByNumber(UPB_DESC(_EnumValueOptions_msg_init)(), 999);
  const upb_Array* arr = upb_Message_GetArray(msg, &field);
  if (arr) {
    if (size) *size = arr->size;
    return (const UPB_DESC(UninterpretedOption)* const*)_upb_array_constptr(arr);
  } else {
    if (size) *size = 0;
    return NULL;
  }
}
UPB_INLINE const upb_Array* _google_protobuf_EnumValueOptions_uninterpreted_option_upb_array(const UPB_DESC(EnumValueOptions)* msg, size_t* size) {
  const upb_MiniTableField field = *upb_MiniTable_FindFieldByNumber(UPB_DESC(_EnumValueOptions_msg_init)(), 999);
  const upb_Array* arr = upb_Message_GetArray(msg, &field);
  if (size) {
    *size = arr ? arr->size : 0;
  }
  return arr;
}
UPB_INLINE upb_Array* _google_protobuf_EnumValueOptions_uninterpreted_option_mutable_upb_array(const UPB_DESC(EnumValueOptions)* msg, size_t* size, upb_Arena* arena) {
  const upb_MiniTableField field = *upb_MiniTable_FindFieldByNumber(UPB_DESC(_EnumValueOptions_msg_init)(), 999);
  upb_Array* arr = upb_Message_GetOrCreateMutableArray(
      (upb_Message*)msg, &field, arena);
  if (size) {
    *size = arr ? arr->size : 0;
  }
  return arr;
}
UPB_INLINE bool UPB_DESC(EnumValueOptions_has_uninterpreted_option)(const UPB_DESC(EnumValueOptions)* msg) {
  size_t size;
  UPB_DESC(EnumValueOptions_uninterpreted_option)(msg, &size);
  return size != 0;
}

UPB_INLINE void UPB_DESC(EnumValueOptions_set_deprecated)(UPB_DESC(EnumValueOptions) *msg, bool value) {
  const upb_MiniTableField field = *upb_MiniTable_FindFieldByNumber(UPB_DESC(_EnumValueOptions_msg_init)(), 1);
  _upb_Message_SetNonExtensionField(msg, &field, &value);
}
UPB_INLINE void UPB_DESC(EnumValueOptions_set_features)(UPB_DESC(EnumValueOptions) *msg, UPB_DESC(FeatureSet)* value) {
  const upb_MiniTableField field = *upb_MiniTable_FindFieldByNumber(UPB_DESC(_EnumValueOptions_msg_init)(), 2);
  _upb_Message_SetNonExtensionField(msg, &field, &value);
}
UPB_INLINE struct UPB_DESC(FeatureSet)* UPB_DESC(EnumValueOptions_mutable_features)(UPB_DESC(EnumValueOptions)* msg, upb_Arena* arena) {
  struct UPB_DESC(FeatureSet)* sub = (struct UPB_DESC(FeatureSet)*)UPB_DESC(EnumValueOptions_features)(msg);
  if (sub == NULL) {
    sub = (struct UPB_DESC(FeatureSet)*)_upb_Message_New(UPB_DESC(_FeatureSet_msg_init)(), arena);
    if (sub) UPB_DESC(EnumValueOptions_set_features)(msg, sub);
  }
  return sub;
}
UPB_INLINE void UPB_DESC(EnumValueOptions_set_debug_redact)(UPB_DESC(EnumValueOptions) *msg, bool value) {
  const upb_MiniTableField field = *upb_MiniTable_FindFieldByNumber(UPB_DESC(_EnumValueOptions_msg_init)(), 3);
  _upb_Message_SetNonExtensionField(msg, &field, &value);
}
UPB_INLINE UPB_DESC(UninterpretedOption)** UPB_DESC(EnumValueOptions_mutable_uninterpreted_option)(UPB_DESC(EnumValueOptions)* msg, size_t* size) {
  upb_MiniTableField field = *upb_MiniTable_FindFieldByNumber(UPB_DESC(_EnumValueOptions_msg_init)(), 999);
  upb_Array* arr = upb_Message_GetMutableArray(msg, &field);
  if (arr) {
    if (size) *size = arr->size;
    return (UPB_DESC(UninterpretedOption)**)_upb_array_ptr(arr);
  } else {
    if (size) *size = 0;
    return NULL;
  }
}
UPB_INLINE UPB_DESC(UninterpretedOption)** UPB_DESC(EnumValueOptions_resize_uninterpreted_option)(UPB_DESC(EnumValueOptions)* msg, size_t size, upb_Arena* arena) {
  upb_MiniTableField field = *upb_MiniTable_FindFieldByNumber(UPB_DESC(_EnumValueOptions_msg_init)(), 999);
  return (UPB_DESC(UninterpretedOption)**)upb_Message_ResizeArrayUninitialized(msg, &field, size, arena);
}
UPB_INLINE struct UPB_DESC(UninterpretedOption)* UPB_DESC(EnumValueOptions_add_uninterpreted_option)(UPB_DESC(EnumValueOptions)* msg, upb_Arena* arena) {
  upb_MiniTableField field = *upb_MiniTable_FindFieldByNumber(UPB_DESC(_EnumValueOptions_msg_init)(), 999);
  upb_Array* arr = upb_Message_GetOrCreateMutableArray(msg, &field, arena);
  if (!arr || !_upb_Array_ResizeUninitialized(arr, arr->size + 1, arena)) {
    return NULL;
  }
  struct UPB_DESC(UninterpretedOption)* sub = (struct UPB_DESC(UninterpretedOption)*)_upb_Message_New(UPB_DESC(_UninterpretedOption_msg_init)(), arena);
  if (!arr || !sub) return NULL;
  _upb_Array_Set(arr, arr->size - 1, &sub, sizeof(sub));
  return sub;
}

/* google.protobuf.ServiceOptions */

UPB_INLINE UPB_DESC(ServiceOptions)* UPB_DESC(ServiceOptions_new)(upb_Arena* arena) {
  return (UPB_DESC(ServiceOptions)*)_upb_Message_New(UPB_DESC(_ServiceOptions_msg_init)(), arena);
}
UPB_INLINE UPB_DESC(ServiceOptions)* UPB_DESC(ServiceOptions_parse)(const char* buf, size_t size, upb_Arena* arena) {
  UPB_DESC(ServiceOptions)* ret = UPB_DESC(ServiceOptions_new)(arena);
  if (!ret) return NULL;
  if (upb_Decode(buf, size, ret, UPB_DESC(_ServiceOptions_msg_init)(), NULL, 0, arena) != kUpb_DecodeStatus_Ok) {
    return NULL;
  }
  return ret;
}
UPB_INLINE UPB_DESC(ServiceOptions)* UPB_DESC(ServiceOptions_parse_ex)(const char* buf, size_t size,
                           const upb_ExtensionRegistry* extreg,
                           int options, upb_Arena* arena) {
  UPB_DESC(ServiceOptions)* ret = UPB_DESC(ServiceOptions_new)(arena);
  if (!ret) return NULL;
  if (upb_Decode(buf, size, ret, UPB_DESC(_ServiceOptions_msg_init)(), extreg, options, arena) !=
      kUpb_DecodeStatus_Ok) {
    return NULL;
  }
  return ret;
}
UPB_INLINE char* UPB_DESC(ServiceOptions_serialize)(const UPB_DESC(ServiceOptions)* msg, upb_Arena* arena, size_t* len) {
  char* ptr;
  (void)upb_Encode(msg, UPB_DESC(_ServiceOptions_msg_init)(), 0, arena, &ptr, len);
  return ptr;
}
UPB_INLINE char* UPB_DESC(ServiceOptions_serialize_ex)(const UPB_DESC(ServiceOptions)* msg, int options,
                                 upb_Arena* arena, size_t* len) {
  char* ptr;
  (void)upb_Encode(msg, UPB_DESC(_ServiceOptions_msg_init)(), options, arena, &ptr, len);
  return ptr;
}
UPB_INLINE void UPB_DESC(ServiceOptions_clear_deprecated)(UPB_DESC(ServiceOptions)* msg) {
  const upb_MiniTableField field = *upb_MiniTable_FindFieldByNumber(UPB_DESC(_ServiceOptions_msg_init)(), 33);
  _upb_Message_ClearNonExtensionField(msg, &field);
}
UPB_INLINE bool UPB_DESC(ServiceOptions_deprecated)(const UPB_DESC(ServiceOptions)* msg) {
  bool default_val = false;
  bool ret;
  const upb_MiniTableField field = *upb_MiniTable_FindFieldByNumber(UPB_DESC(_ServiceOptions_msg_init)(), 33);
  _upb_Message_GetNonExtensionField(msg, &field, &default_val, &ret);
  return ret;
}
UPB_INLINE bool UPB_DESC(ServiceOptions_has_deprecated)(const UPB_DESC(ServiceOptions)* msg) {
  const upb_MiniTableField field = *upb_MiniTable_FindFieldByNumber(UPB_DESC(_ServiceOptions_msg_init)(), 33);
  return _upb_Message_HasNonExtensionField(msg, &field);
}
UPB_INLINE void UPB_DESC(ServiceOptions_clear_features)(UPB_DESC(ServiceOptions)* msg) {
  const upb_MiniTableField field = *upb_MiniTable_FindFieldByNumber(UPB_DESC(_ServiceOptions_msg_init)(), 34);
  _upb_Message_ClearNonExtensionField(msg, &field);
}
UPB_INLINE const UPB_DESC(FeatureSet)* UPB_DESC(ServiceOptions_features)(const UPB_DESC(ServiceOptions)* msg) {
  const UPB_DESC(FeatureSet)* default_val = NULL;
  const UPB_DESC(FeatureSet)* ret;
  const upb_MiniTableField field = *upb_MiniTable_FindFieldByNumber(UPB_DESC(_ServiceOptions_msg_init)(), 34);
  _upb_Message_GetNonExtensionField(msg, &field, &default_val, &ret);
  return ret;
}
UPB_INLINE bool UPB_DESC(ServiceOptions_has_features)(const UPB_DESC(ServiceOptions)* msg) {
  const upb_MiniTableField field = *upb_MiniTable_FindFieldByNumber(UPB_DESC(_ServiceOptions_msg_init)(), 34);
  return _upb_Message_HasNonExtensionField(msg, &field);
}
UPB_INLINE void UPB_DESC(ServiceOptions_clear_uninterpreted_option)(UPB_DESC(ServiceOptions)* msg) {
  const upb_MiniTableField field = *upb_MiniTable_FindFieldByNumber(UPB_DESC(_ServiceOptions_msg_init)(), 999);
  _upb_Message_ClearNonExtensionField(msg, &field);
}
UPB_INLINE const UPB_DESC(UninterpretedOption)* const* UPB_DESC(ServiceOptions_uninterpreted_option)(const UPB_DESC(ServiceOptions)* msg, size_t* size) {
  const upb_MiniTableField field = *upb_MiniTable_FindFieldByNumber(UPB_DESC(_ServiceOptions_msg_init)(), 999);
  const upb_Array* arr = upb_Message_GetArray(msg, &field);
  if (arr) {
    if (size) *size = arr->size;
    return (const UPB_DESC(UninterpretedOption)* const*)_upb_array_constptr(arr);
  } else {
    if (size) *size = 0;
    return NULL;
  }
}
UPB_INLINE const upb_Array* _google_protobuf_ServiceOptions_uninterpreted_option_upb_array(const UPB_DESC(ServiceOptions)* msg, size_t* size) {
  const upb_MiniTableField field = *upb_MiniTable_FindFieldByNumber(UPB_DESC(_ServiceOptions_msg_init)(), 999);
  const upb_Array* arr = upb_Message_GetArray(msg, &field);
  if (size) {
    *size = arr ? arr->size : 0;
  }
  return arr;
}
UPB_INLINE upb_Array* _google_protobuf_ServiceOptions_uninterpreted_option_mutable_upb_array(const UPB_DESC(ServiceOptions)* msg, size_t* size, upb_Arena* arena) {
  const upb_MiniTableField field = *upb_MiniTable_FindFieldByNumber(UPB_DESC(_ServiceOptions_msg_init)(), 999);
  upb_Array* arr = upb_Message_GetOrCreateMutableArray(
      (upb_Message*)msg, &field, arena);
  if (size) {
    *size = arr ? arr->size : 0;
  }
  return arr;
}
UPB_INLINE bool UPB_DESC(ServiceOptions_has_uninterpreted_option)(const UPB_DESC(ServiceOptions)* msg) {
  size_t size;
  UPB_DESC(ServiceOptions_uninterpreted_option)(msg, &size);
  return size != 0;
}

UPB_INLINE void UPB_DESC(ServiceOptions_set_deprecated)(UPB_DESC(ServiceOptions) *msg, bool value) {
  const upb_MiniTableField field = *upb_MiniTable_FindFieldByNumber(UPB_DESC(_ServiceOptions_msg_init)(), 33);
  _upb_Message_SetNonExtensionField(msg, &field, &value);
}
UPB_INLINE void UPB_DESC(ServiceOptions_set_features)(UPB_DESC(ServiceOptions) *msg, UPB_DESC(FeatureSet)* value) {
  const upb_MiniTableField field = *upb_MiniTable_FindFieldByNumber(UPB_DESC(_ServiceOptions_msg_init)(), 34);
  _upb_Message_SetNonExtensionField(msg, &field, &value);
}
UPB_INLINE struct UPB_DESC(FeatureSet)* UPB_DESC(ServiceOptions_mutable_features)(UPB_DESC(ServiceOptions)* msg, upb_Arena* arena) {
  struct UPB_DESC(FeatureSet)* sub = (struct UPB_DESC(FeatureSet)*)UPB_DESC(ServiceOptions_features)(msg);
  if (sub == NULL) {
    sub = (struct UPB_DESC(FeatureSet)*)_upb_Message_New(UPB_DESC(_FeatureSet_msg_init)(), arena);
    if (sub) UPB_DESC(ServiceOptions_set_features)(msg, sub);
  }
  return sub;
}
UPB_INLINE UPB_DESC(UninterpretedOption)** UPB_DESC(ServiceOptions_mutable_uninterpreted_option)(UPB_DESC(ServiceOptions)* msg, size_t* size) {
  upb_MiniTableField field = *upb_MiniTable_FindFieldByNumber(UPB_DESC(_ServiceOptions_msg_init)(), 999);
  upb_Array* arr = upb_Message_GetMutableArray(msg, &field);
  if (arr) {
    if (size) *size = arr->size;
    return (UPB_DESC(UninterpretedOption)**)_upb_array_ptr(arr);
  } else {
    if (size) *size = 0;
    return NULL;
  }
}
UPB_INLINE UPB_DESC(UninterpretedOption)** UPB_DESC(ServiceOptions_resize_uninterpreted_option)(UPB_DESC(ServiceOptions)* msg, size_t size, upb_Arena* arena) {
  upb_MiniTableField field = *upb_MiniTable_FindFieldByNumber(UPB_DESC(_ServiceOptions_msg_init)(), 999);
  return (UPB_DESC(UninterpretedOption)**)upb_Message_ResizeArrayUninitialized(msg, &field, size, arena);
}
UPB_INLINE struct UPB_DESC(UninterpretedOption)* UPB_DESC(ServiceOptions_add_uninterpreted_option)(UPB_DESC(ServiceOptions)* msg, upb_Arena* arena) {
  upb_MiniTableField field = *upb_MiniTable_FindFieldByNumber(UPB_DESC(_ServiceOptions_msg_init)(), 999);
  upb_Array* arr = upb_Message_GetOrCreateMutableArray(msg, &field, arena);
  if (!arr || !_upb_Array_ResizeUninitialized(arr, arr->size + 1, arena)) {
    return NULL;
  }
  struct UPB_DESC(UninterpretedOption)* sub = (struct UPB_DESC(UninterpretedOption)*)_upb_Message_New(UPB_DESC(_UninterpretedOption_msg_init)(), arena);
  if (!arr || !sub) return NULL;
  _upb_Array_Set(arr, arr->size - 1, &sub, sizeof(sub));
  return sub;
}

/* google.protobuf.MethodOptions */

UPB_INLINE UPB_DESC(MethodOptions)* UPB_DESC(MethodOptions_new)(upb_Arena* arena) {
  return (UPB_DESC(MethodOptions)*)_upb_Message_New(UPB_DESC(_MethodOptions_msg_init)(), arena);
}
UPB_INLINE UPB_DESC(MethodOptions)* UPB_DESC(MethodOptions_parse)(const char* buf, size_t size, upb_Arena* arena) {
  UPB_DESC(MethodOptions)* ret = UPB_DESC(MethodOptions_new)(arena);
  if (!ret) return NULL;
  if (upb_Decode(buf, size, ret, UPB_DESC(_MethodOptions_msg_init)(), NULL, 0, arena) != kUpb_DecodeStatus_Ok) {
    return NULL;
  }
  return ret;
}
UPB_INLINE UPB_DESC(MethodOptions)* UPB_DESC(MethodOptions_parse_ex)(const char* buf, size_t size,
                           const upb_ExtensionRegistry* extreg,
                           int options, upb_Arena* arena) {
  UPB_DESC(MethodOptions)* ret = UPB_DESC(MethodOptions_new)(arena);
  if (!ret) return NULL;
  if (upb_Decode(buf, size, ret, UPB_DESC(_MethodOptions_msg_init)(), extreg, options, arena) !=
      kUpb_DecodeStatus_Ok) {
    return NULL;
  }
  return ret;
}
UPB_INLINE char* UPB_DESC(MethodOptions_serialize)(const UPB_DESC(MethodOptions)* msg, upb_Arena* arena, size_t* len) {
  char* ptr;
  (void)upb_Encode(msg, UPB_DESC(_MethodOptions_msg_init)(), 0, arena, &ptr, len);
  return ptr;
}
UPB_INLINE char* UPB_DESC(MethodOptions_serialize_ex)(const UPB_DESC(MethodOptions)* msg, int options,
                                 upb_Arena* arena, size_t* len) {
  char* ptr;
  (void)upb_Encode(msg, UPB_DESC(_MethodOptions_msg_init)(), options, arena, &ptr, len);
  return ptr;
}
UPB_INLINE void UPB_DESC(MethodOptions_clear_deprecated)(UPB_DESC(MethodOptions)* msg) {
  const upb_MiniTableField field = *upb_MiniTable_FindFieldByNumber(UPB_DESC(_MethodOptions_msg_init)(), 33);
  _upb_Message_ClearNonExtensionField(msg, &field);
}
UPB_INLINE bool UPB_DESC(MethodOptions_deprecated)(const UPB_DESC(MethodOptions)* msg) {
  bool default_val = false;
  bool ret;
  const upb_MiniTableField field = *upb_MiniTable_FindFieldByNumber(UPB_DESC(_MethodOptions_msg_init)(), 33);
  _upb_Message_GetNonExtensionField(msg, &field, &default_val, &ret);
  return ret;
}
UPB_INLINE bool UPB_DESC(MethodOptions_has_deprecated)(const UPB_DESC(MethodOptions)* msg) {
  const upb_MiniTableField field = *upb_MiniTable_FindFieldByNumber(UPB_DESC(_MethodOptions_msg_init)(), 33);
  return _upb_Message_HasNonExtensionField(msg, &field);
}
UPB_INLINE void UPB_DESC(MethodOptions_clear_idempotency_level)(UPB_DESC(MethodOptions)* msg) {
  const upb_MiniTableField field = *upb_MiniTable_FindFieldByNumber(UPB_DESC(_MethodOptions_msg_init)(), 34);
  _upb_Message_ClearNonExtensionField(msg, &field);
}
UPB_INLINE int32_t UPB_DESC(MethodOptions_idempotency_level)(const UPB_DESC(MethodOptions)* msg) {
  int32_t default_val = 0;
  int32_t ret;
  const upb_MiniTableField field = *upb_MiniTable_FindFieldByNumber(UPB_DESC(_MethodOptions_msg_init)(), 34);
  _upb_Message_GetNonExtensionField(msg, &field, &default_val, &ret);
  return ret;
}
UPB_INLINE bool UPB_DESC(MethodOptions_has_idempotency_level)(const UPB_DESC(MethodOptions)* msg) {
  const upb_MiniTableField field = *upb_MiniTable_FindFieldByNumber(UPB_DESC(_MethodOptions_msg_init)(), 34);
  return _upb_Message_HasNonExtensionField(msg, &field);
}
UPB_INLINE void UPB_DESC(MethodOptions_clear_features)(UPB_DESC(MethodOptions)* msg) {
  const upb_MiniTableField field = *upb_MiniTable_FindFieldByNumber(UPB_DESC(_MethodOptions_msg_init)(), 35);
  _upb_Message_ClearNonExtensionField(msg, &field);
}
UPB_INLINE const UPB_DESC(FeatureSet)* UPB_DESC(MethodOptions_features)(const UPB_DESC(MethodOptions)* msg) {
  const UPB_DESC(FeatureSet)* default_val = NULL;
  const UPB_DESC(FeatureSet)* ret;
  const upb_MiniTableField field = *upb_MiniTable_FindFieldByNumber(UPB_DESC(_MethodOptions_msg_init)(), 35);
  _upb_Message_GetNonExtensionField(msg, &field, &default_val, &ret);
  return ret;
}
UPB_INLINE bool UPB_DESC(MethodOptions_has_features)(const UPB_DESC(MethodOptions)* msg) {
  const upb_MiniTableField field = *upb_MiniTable_FindFieldByNumber(UPB_DESC(_MethodOptions_msg_init)(), 35);
  return _upb_Message_HasNonExtensionField(msg, &field);
}
UPB_INLINE void UPB_DESC(MethodOptions_clear_uninterpreted_option)(UPB_DESC(MethodOptions)* msg) {
  const upb_MiniTableField field = *upb_MiniTable_FindFieldByNumber(UPB_DESC(_MethodOptions_msg_init)(), 999);
  _upb_Message_ClearNonExtensionField(msg, &field);
}
UPB_INLINE const UPB_DESC(UninterpretedOption)* const* UPB_DESC(MethodOptions_uninterpreted_option)(const UPB_DESC(MethodOptions)* msg, size_t* size) {
  const upb_MiniTableField field = *upb_MiniTable_FindFieldByNumber(UPB_DESC(_MethodOptions_msg_init)(), 999);
  const upb_Array* arr = upb_Message_GetArray(msg, &field);
  if (arr) {
    if (size) *size = arr->size;
    return (const UPB_DESC(UninterpretedOption)* const*)_upb_array_constptr(arr);
  } else {
    if (size) *size = 0;
    return NULL;
  }
}
UPB_INLINE const upb_Array* _google_protobuf_MethodOptions_uninterpreted_option_upb_array(const UPB_DESC(MethodOptions)* msg, size_t* size) {
  const upb_MiniTableField field = *upb_MiniTable_FindFieldByNumber(UPB_DESC(_MethodOptions_msg_init)(), 999);
  const upb_Array* arr = upb_Message_GetArray(msg, &field);
  if (size) {
    *size = arr ? arr->size : 0;
  }
  return arr;
}
UPB_INLINE upb_Array* _google_protobuf_MethodOptions_uninterpreted_option_mutable_upb_array(const UPB_DESC(MethodOptions)* msg, size_t* size, upb_Arena* arena) {
  const upb_MiniTableField field = *upb_MiniTable_FindFieldByNumber(UPB_DESC(_MethodOptions_msg_init)(), 999);
  upb_Array* arr = upb_Message_GetOrCreateMutableArray(
      (upb_Message*)msg, &field, arena);
  if (size) {
    *size = arr ? arr->size : 0;
  }
  return arr;
}
UPB_INLINE bool UPB_DESC(MethodOptions_has_uninterpreted_option)(const UPB_DESC(MethodOptions)* msg) {
  size_t size;
  UPB_DESC(MethodOptions_uninterpreted_option)(msg, &size);
  return size != 0;
}

UPB_INLINE void UPB_DESC(MethodOptions_set_deprecated)(UPB_DESC(MethodOptions) *msg, bool value) {
  const upb_MiniTableField field = *upb_MiniTable_FindFieldByNumber(UPB_DESC(_MethodOptions_msg_init)(), 33);
  _upb_Message_SetNonExtensionField(msg, &field, &value);
}
UPB_INLINE void UPB_DESC(MethodOptions_set_idempotency_level)(UPB_DESC(MethodOptions) *msg, int32_t value) {
  const upb_MiniTableField field = *upb_MiniTable_FindFieldByNumber(UPB_DESC(_MethodOptions_msg_init)(), 34);
  _upb_Message_SetNonExtensionField(msg, &field, &value);
}
UPB_INLINE void UPB_DESC(MethodOptions_set_features)(UPB_DESC(MethodOptions) *msg, UPB_DESC(FeatureSet)* value) {
  const upb_MiniTableField field = *upb_MiniTable_FindFieldByNumber(UPB_DESC(_MethodOptions_msg_init)(), 35);
  _upb_Message_SetNonExtensionField(msg, &field, &value);
}
UPB_INLINE struct UPB_DESC(FeatureSet)* UPB_DESC(MethodOptions_mutable_features)(UPB_DESC(MethodOptions)* msg, upb_Arena* arena) {
  struct UPB_DESC(FeatureSet)* sub = (struct UPB_DESC(FeatureSet)*)UPB_DESC(MethodOptions_features)(msg);
  if (sub == NULL) {
    sub = (struct UPB_DESC(FeatureSet)*)_upb_Message_New(UPB_DESC(_FeatureSet_msg_init)(), arena);
    if (sub) UPB_DESC(MethodOptions_set_features)(msg, sub);
  }
  return sub;
}
UPB_INLINE UPB_DESC(UninterpretedOption)** UPB_DESC(MethodOptions_mutable_uninterpreted_option)(UPB_DESC(MethodOptions)* msg, size_t* size) {
  upb_MiniTableField field = *upb_MiniTable_FindFieldByNumber(UPB_DESC(_MethodOptions_msg_init)(), 999);
  upb_Array* arr = upb_Message_GetMutableArray(msg, &field);
  if (arr) {
    if (size) *size = arr->size;
    return (UPB_DESC(UninterpretedOption)**)_upb_array_ptr(arr);
  } else {
    if (size) *size = 0;
    return NULL;
  }
}
UPB_INLINE UPB_DESC(UninterpretedOption)** UPB_DESC(MethodOptions_resize_uninterpreted_option)(UPB_DESC(MethodOptions)* msg, size_t size, upb_Arena* arena) {
  upb_MiniTableField field = *upb_MiniTable_FindFieldByNumber(UPB_DESC(_MethodOptions_msg_init)(), 999);
  return (UPB_DESC(UninterpretedOption)**)upb_Message_ResizeArrayUninitialized(msg, &field, size, arena);
}
UPB_INLINE struct UPB_DESC(UninterpretedOption)* UPB_DESC(MethodOptions_add_uninterpreted_option)(UPB_DESC(MethodOptions)* msg, upb_Arena* arena) {
  upb_MiniTableField field = *upb_MiniTable_FindFieldByNumber(UPB_DESC(_MethodOptions_msg_init)(), 999);
  upb_Array* arr = upb_Message_GetOrCreateMutableArray(msg, &field, arena);
  if (!arr || !_upb_Array_ResizeUninitialized(arr, arr->size + 1, arena)) {
    return NULL;
  }
  struct UPB_DESC(UninterpretedOption)* sub = (struct UPB_DESC(UninterpretedOption)*)_upb_Message_New(UPB_DESC(_UninterpretedOption_msg_init)(), arena);
  if (!arr || !sub) return NULL;
  _upb_Array_Set(arr, arr->size - 1, &sub, sizeof(sub));
  return sub;
}

/* google.protobuf.UninterpretedOption */

UPB_INLINE UPB_DESC(UninterpretedOption)* UPB_DESC(UninterpretedOption_new)(upb_Arena* arena) {
  return (UPB_DESC(UninterpretedOption)*)_upb_Message_New(UPB_DESC(_UninterpretedOption_msg_init)(), arena);
}
UPB_INLINE UPB_DESC(UninterpretedOption)* UPB_DESC(UninterpretedOption_parse)(const char* buf, size_t size, upb_Arena* arena) {
  UPB_DESC(UninterpretedOption)* ret = UPB_DESC(UninterpretedOption_new)(arena);
  if (!ret) return NULL;
  if (upb_Decode(buf, size, ret, UPB_DESC(_UninterpretedOption_msg_init)(), NULL, 0, arena) != kUpb_DecodeStatus_Ok) {
    return NULL;
  }
  return ret;
}
UPB_INLINE UPB_DESC(UninterpretedOption)* UPB_DESC(UninterpretedOption_parse_ex)(const char* buf, size_t size,
                           const upb_ExtensionRegistry* extreg,
                           int options, upb_Arena* arena) {
  UPB_DESC(UninterpretedOption)* ret = UPB_DESC(UninterpretedOption_new)(arena);
  if (!ret) return NULL;
  if (upb_Decode(buf, size, ret, UPB_DESC(_UninterpretedOption_msg_init)(), extreg, options, arena) !=
      kUpb_DecodeStatus_Ok) {
    return NULL;
  }
  return ret;
}
UPB_INLINE char* UPB_DESC(UninterpretedOption_serialize)(const UPB_DESC(UninterpretedOption)* msg, upb_Arena* arena, size_t* len) {
  char* ptr;
  (void)upb_Encode(msg, UPB_DESC(_UninterpretedOption_msg_init)(), 0, arena, &ptr, len);
  return ptr;
}
UPB_INLINE char* UPB_DESC(UninterpretedOption_serialize_ex)(const UPB_DESC(UninterpretedOption)* msg, int options,
                                 upb_Arena* arena, size_t* len) {
  char* ptr;
  (void)upb_Encode(msg, UPB_DESC(_UninterpretedOption_msg_init)(), options, arena, &ptr, len);
  return ptr;
}
UPB_INLINE void UPB_DESC(UninterpretedOption_clear_name)(UPB_DESC(UninterpretedOption)* msg) {
  const upb_MiniTableField field = *upb_MiniTable_FindFieldByNumber(UPB_DESC(_UninterpretedOption_msg_init)(), 2);
  _upb_Message_ClearNonExtensionField(msg, &field);
}
UPB_INLINE const UPB_DESC(UninterpretedOption_NamePart)* const* UPB_DESC(UninterpretedOption_name)(const UPB_DESC(UninterpretedOption)* msg, size_t* size) {
  const upb_MiniTableField field = *upb_MiniTable_FindFieldByNumber(UPB_DESC(_UninterpretedOption_msg_init)(), 2);
  const upb_Array* arr = upb_Message_GetArray(msg, &field);
  if (arr) {
    if (size) *size = arr->size;
    return (const UPB_DESC(UninterpretedOption_NamePart)* const*)_upb_array_constptr(arr);
  } else {
    if (size) *size = 0;
    return NULL;
  }
}
UPB_INLINE const upb_Array* _google_protobuf_UninterpretedOption_name_upb_array(const UPB_DESC(UninterpretedOption)* msg, size_t* size) {
  const upb_MiniTableField field = *upb_MiniTable_FindFieldByNumber(UPB_DESC(_UninterpretedOption_msg_init)(), 2);
  const upb_Array* arr = upb_Message_GetArray(msg, &field);
  if (size) {
    *size = arr ? arr->size : 0;
  }
  return arr;
}
UPB_INLINE upb_Array* _google_protobuf_UninterpretedOption_name_mutable_upb_array(const UPB_DESC(UninterpretedOption)* msg, size_t* size, upb_Arena* arena) {
  const upb_MiniTableField field = *upb_MiniTable_FindFieldByNumber(UPB_DESC(_UninterpretedOption_msg_init)(), 2);
  upb_Array* arr = upb_Message_GetOrCreateMutableArray(
      (upb_Message*)msg, &field, arena);
  if (size) {
    *size = arr ? arr->size : 0;
  }
  return arr;
}
UPB_INLINE bool UPB_DESC(UninterpretedOption_has_name)(const UPB_DESC(UninterpretedOption)* msg) {
  size_t size;
  UPB_DESC(UninterpretedOption_name)(msg, &size);
  return size != 0;
}
UPB_INLINE void UPB_DESC(UninterpretedOption_clear_identifier_value)(UPB_DESC(UninterpretedOption)* msg) {
  const upb_MiniTableField field = *upb_MiniTable_FindFieldByNumber(UPB_DESC(_UninterpretedOption_msg_init)(), 3);
  _upb_Message_ClearNonExtensionField(msg, &field);
}
UPB_INLINE upb_StringView UPB_DESC(UninterpretedOption_identifier_value)(const UPB_DESC(UninterpretedOption)* msg) {
  upb_StringView default_val = upb_StringView_FromString("");
  upb_StringView ret;
  const upb_MiniTableField field = *upb_MiniTable_FindFieldByNumber(UPB_DESC(_UninterpretedOption_msg_init)(), 3);
  _upb_Message_GetNonExtensionField(msg, &field, &default_val, &ret);
  return ret;
}
UPB_INLINE bool UPB_DESC(UninterpretedOption_has_identifier_value)(const UPB_DESC(UninterpretedOption)* msg) {
  const upb_MiniTableField field = *upb_MiniTable_FindFieldByNumber(UPB_DESC(_UninterpretedOption_msg_init)(), 3);
  return _upb_Message_HasNonExtensionField(msg, &field);
}
UPB_INLINE void UPB_DESC(UninterpretedOption_clear_positive_int_value)(UPB_DESC(UninterpretedOption)* msg) {
  const upb_MiniTableField field = *upb_MiniTable_FindFieldByNumber(UPB_DESC(_UninterpretedOption_msg_init)(), 4);
  _upb_Message_ClearNonExtensionField(msg, &field);
}
UPB_INLINE uint64_t UPB_DESC(UninterpretedOption_positive_int_value)(const UPB_DESC(UninterpretedOption)* msg) {
  uint64_t default_val = (uint64_t)0ull;
  uint64_t ret;
  const upb_MiniTableField field = *upb_MiniTable_FindFieldByNumber(UPB_DESC(_UninterpretedOption_msg_init)(), 4);
  _upb_Message_GetNonExtensionField(msg, &field, &default_val, &ret);
  return ret;
}
UPB_INLINE bool UPB_DESC(UninterpretedOption_has_positive_int_value)(const UPB_DESC(UninterpretedOption)* msg) {
  const upb_MiniTableField field = *upb_MiniTable_FindFieldByNumber(UPB_DESC(_UninterpretedOption_msg_init)(), 4);
  return _upb_Message_HasNonExtensionField(msg, &field);
}
UPB_INLINE void UPB_DESC(UninterpretedOption_clear_negative_int_value)(UPB_DESC(UninterpretedOption)* msg) {
  const upb_MiniTableField field = *upb_MiniTable_FindFieldByNumber(UPB_DESC(_UninterpretedOption_msg_init)(), 5);
  _upb_Message_ClearNonExtensionField(msg, &field);
}
UPB_INLINE int64_t UPB_DESC(UninterpretedOption_negative_int_value)(const UPB_DESC(UninterpretedOption)* msg) {
  int64_t default_val = (int64_t)0ll;
  int64_t ret;
  const upb_MiniTableField field = *upb_MiniTable_FindFieldByNumber(UPB_DESC(_UninterpretedOption_msg_init)(), 5);
  _upb_Message_GetNonExtensionField(msg, &field, &default_val, &ret);
  return ret;
}
UPB_INLINE bool UPB_DESC(UninterpretedOption_has_negative_int_value)(const UPB_DESC(UninterpretedOption)* msg) {
  const upb_MiniTableField field = *upb_MiniTable_FindFieldByNumber(UPB_DESC(_UninterpretedOption_msg_init)(), 5);
  return _upb_Message_HasNonExtensionField(msg, &field);
}
UPB_INLINE void UPB_DESC(UninterpretedOption_clear_double_value)(UPB_DESC(UninterpretedOption)* msg) {
  const upb_MiniTableField field = *upb_MiniTable_FindFieldByNumber(UPB_DESC(_UninterpretedOption_msg_init)(), 6);
  _upb_Message_ClearNonExtensionField(msg, &field);
}
UPB_INLINE double UPB_DESC(UninterpretedOption_double_value)(const UPB_DESC(UninterpretedOption)* msg) {
  double default_val = 0;
  double ret;
  const upb_MiniTableField field = *upb_MiniTable_FindFieldByNumber(UPB_DESC(_UninterpretedOption_msg_init)(), 6);
  _upb_Message_GetNonExtensionField(msg, &field, &default_val, &ret);
  return ret;
}
UPB_INLINE bool UPB_DESC(UninterpretedOption_has_double_value)(const UPB_DESC(UninterpretedOption)* msg) {
  const upb_MiniTableField field = *upb_MiniTable_FindFieldByNumber(UPB_DESC(_UninterpretedOption_msg_init)(), 6);
  return _upb_Message_HasNonExtensionField(msg, &field);
}
UPB_INLINE void UPB_DESC(UninterpretedOption_clear_string_value)(UPB_DESC(UninterpretedOption)* msg) {
  const upb_MiniTableField field = *upb_MiniTable_FindFieldByNumber(UPB_DESC(_UninterpretedOption_msg_init)(), 7);
  _upb_Message_ClearNonExtensionField(msg, &field);
}
UPB_INLINE upb_StringView UPB_DESC(UninterpretedOption_string_value)(const UPB_DESC(UninterpretedOption)* msg) {
  upb_StringView default_val = upb_StringView_FromString("");
  upb_StringView ret;
  const upb_MiniTableField field = *upb_MiniTable_FindFieldByNumber(UPB_DESC(_UninterpretedOption_msg_init)(), 7);
  _upb_Message_GetNonExtensionField(msg, &field, &default_val, &ret);
  return ret;
}
UPB_INLINE bool UPB_DESC(UninterpretedOption_has_string_value)(const UPB_DESC(UninterpretedOption)* msg) {
  const upb_MiniTableField field = *upb_MiniTable_FindFieldByNumber(UPB_DESC(_UninterpretedOption_msg_init)(), 7);
  return _upb_Message_HasNonExtensionField(msg, &field);
}
UPB_INLINE void UPB_DESC(UninterpretedOption_clear_aggregate_value)(UPB_DESC(UninterpretedOption)* msg) {
  const upb_MiniTableField field = *upb_MiniTable_FindFieldByNumber(UPB_DESC(_UninterpretedOption_msg_init)(), 8);
  _upb_Message_ClearNonExtensionField(msg, &field);
}
UPB_INLINE upb_StringView UPB_DESC(UninterpretedOption_aggregate_value)(const UPB_DESC(UninterpretedOption)* msg) {
  upb_StringView default_val = upb_StringView_FromString("");
  upb_StringView ret;
  const upb_MiniTableField field = *upb_MiniTable_FindFieldByNumber(UPB_DESC(_UninterpretedOption_msg_init)(), 8);
  _upb_Message_GetNonExtensionField(msg, &field, &default_val, &ret);
  return ret;
}
UPB_INLINE bool UPB_DESC(UninterpretedOption_has_aggregate_value)(const UPB_DESC(UninterpretedOption)* msg) {
  const upb_MiniTableField field = *upb_MiniTable_FindFieldByNumber(UPB_DESC(_UninterpretedOption_msg_init)(), 8);
  return _upb_Message_HasNonExtensionField(msg, &field);
}

UPB_INLINE UPB_DESC(UninterpretedOption_NamePart)** UPB_DESC(UninterpretedOption_mutable_name)(UPB_DESC(UninterpretedOption)* msg, size_t* size) {
  upb_MiniTableField field = *upb_MiniTable_FindFieldByNumber(UPB_DESC(_UninterpretedOption_msg_init)(), 2);
  upb_Array* arr = upb_Message_GetMutableArray(msg, &field);
  if (arr) {
    if (size) *size = arr->size;
    return (UPB_DESC(UninterpretedOption_NamePart)**)_upb_array_ptr(arr);
  } else {
    if (size) *size = 0;
    return NULL;
  }
}
UPB_INLINE UPB_DESC(UninterpretedOption_NamePart)** UPB_DESC(UninterpretedOption_resize_name)(UPB_DESC(UninterpretedOption)* msg, size_t size, upb_Arena* arena) {
  upb_MiniTableField field = *upb_MiniTable_FindFieldByNumber(UPB_DESC(_UninterpretedOption_msg_init)(), 2);
  return (UPB_DESC(UninterpretedOption_NamePart)**)upb_Message_ResizeArrayUninitialized(msg, &field, size, arena);
}
UPB_INLINE struct UPB_DESC(UninterpretedOption_NamePart)* UPB_DESC(UninterpretedOption_add_name)(UPB_DESC(UninterpretedOption)* msg, upb_Arena* arena) {
  upb_MiniTableField field = *upb_MiniTable_FindFieldByNumber(UPB_DESC(_UninterpretedOption_msg_init)(), 2);
  upb_Array* arr = upb_Message_GetOrCreateMutableArray(msg, &field, arena);
  if (!arr || !_upb_Array_ResizeUninitialized(arr, arr->size + 1, arena)) {
    return NULL;
  }
  struct UPB_DESC(UninterpretedOption_NamePart)* sub = (struct UPB_DESC(UninterpretedOption_NamePart)*)_upb_Message_New(UPB_DESC(_UninterpretedOption__NamePart_msg_init)(), arena);
  if (!arr || !sub) return NULL;
  _upb_Array_Set(arr, arr->size - 1, &sub, sizeof(sub));
  return sub;
}
UPB_INLINE void UPB_DESC(UninterpretedOption_set_identifier_value)(UPB_DESC(UninterpretedOption) *msg, upb_StringView value) {
  const upb_MiniTableField field = *upb_MiniTable_FindFieldByNumber(UPB_DESC(_UninterpretedOption_msg_init)(), 3);
  _upb_Message_SetNonExtensionField(msg, &field, &value);
}
UPB_INLINE void UPB_DESC(UninterpretedOption_set_positive_int_value)(UPB_DESC(UninterpretedOption) *msg, uint64_t value) {
  const upb_MiniTableField field = *upb_MiniTable_FindFieldByNumber(UPB_DESC(_UninterpretedOption_msg_init)(), 4);
  _upb_Message_SetNonExtensionField(msg, &field, &value);
}
UPB_INLINE void UPB_DESC(UninterpretedOption_set_negative_int_value)(UPB_DESC(UninterpretedOption) *msg, int64_t value) {
  const upb_MiniTableField field = *upb_MiniTable_FindFieldByNumber(UPB_DESC(_UninterpretedOption_msg_init)(), 5);
  _upb_Message_SetNonExtensionField(msg, &field, &value);
}
UPB_INLINE void UPB_DESC(UninterpretedOption_set_double_value)(UPB_DESC(UninterpretedOption) *msg, double value) {
  const upb_MiniTableField field = *upb_MiniTable_FindFieldByNumber(UPB_DESC(_UninterpretedOption_msg_init)(), 6);
  _upb_Message_SetNonExtensionField(msg, &field, &value);
}
UPB_INLINE void UPB_DESC(UninterpretedOption_set_string_value)(UPB_DESC(UninterpretedOption) *msg, upb_StringView value) {
  const upb_MiniTableField field = *upb_MiniTable_FindFieldByNumber(UPB_DESC(_UninterpretedOption_msg_init)(), 7);
  _upb_Message_SetNonExtensionField(msg, &field, &value);
}
UPB_INLINE void UPB_DESC(UninterpretedOption_set_aggregate_value)(UPB_DESC(UninterpretedOption) *msg, upb_StringView value) {
  const upb_MiniTableField field = *upb_MiniTable_FindFieldByNumber(UPB_DESC(_UninterpretedOption_msg_init)(), 8);
  _upb_Message_SetNonExtensionField(msg, &field, &value);
}

/* google.protobuf.UninterpretedOption.NamePart */

UPB_INLINE UPB_DESC(UninterpretedOption_NamePart)* UPB_DESC(UninterpretedOption_NamePart_new)(upb_Arena* arena) {
  return (UPB_DESC(UninterpretedOption_NamePart)*)_upb_Message_New(UPB_DESC(_UninterpretedOption__NamePart_msg_init)(), arena);
}
UPB_INLINE UPB_DESC(UninterpretedOption_NamePart)* UPB_DESC(UninterpretedOption_NamePart_parse)(const char* buf, size_t size, upb_Arena* arena) {
  UPB_DESC(UninterpretedOption_NamePart)* ret = UPB_DESC(UninterpretedOption_NamePart_new)(arena);
  if (!ret) return NULL;
  if (upb_Decode(buf, size, ret, UPB_DESC(_UninterpretedOption__NamePart_msg_init)(), NULL, 0, arena) != kUpb_DecodeStatus_Ok) {
    return NULL;
  }
  return ret;
}
UPB_INLINE UPB_DESC(UninterpretedOption_NamePart)* UPB_DESC(UninterpretedOption_NamePart_parse_ex)(const char* buf, size_t size,
                           const upb_ExtensionRegistry* extreg,
                           int options, upb_Arena* arena) {
  UPB_DESC(UninterpretedOption_NamePart)* ret = UPB_DESC(UninterpretedOption_NamePart_new)(arena);
  if (!ret) return NULL;
  if (upb_Decode(buf, size, ret, UPB_DESC(_UninterpretedOption__NamePart_msg_init)(), extreg, options, arena) !=
      kUpb_DecodeStatus_Ok) {
    return NULL;
  }
  return ret;
}
UPB_INLINE char* UPB_DESC(UninterpretedOption_NamePart_serialize)(const UPB_DESC(UninterpretedOption_NamePart)* msg, upb_Arena* arena, size_t* len) {
  char* ptr;
  (void)upb_Encode(msg, UPB_DESC(_UninterpretedOption__NamePart_msg_init)(), 0, arena, &ptr, len);
  return ptr;
}
UPB_INLINE char* UPB_DESC(UninterpretedOption_NamePart_serialize_ex)(const UPB_DESC(UninterpretedOption_NamePart)* msg, int options,
                                 upb_Arena* arena, size_t* len) {
  char* ptr;
  (void)upb_Encode(msg, UPB_DESC(_UninterpretedOption__NamePart_msg_init)(), options, arena, &ptr, len);
  return ptr;
}
UPB_INLINE void UPB_DESC(UninterpretedOption_NamePart_clear_name_part)(UPB_DESC(UninterpretedOption_NamePart)* msg) {
  const upb_MiniTableField field = *upb_MiniTable_FindFieldByNumber(UPB_DESC(_UninterpretedOption__NamePart_msg_init)(), 1);
  _upb_Message_ClearNonExtensionField(msg, &field);
}
UPB_INLINE upb_StringView UPB_DESC(UninterpretedOption_NamePart_name_part)(const UPB_DESC(UninterpretedOption_NamePart)* msg) {
  upb_StringView default_val = upb_StringView_FromString("");
  upb_StringView ret;
  const upb_MiniTableField field = *upb_MiniTable_FindFieldByNumber(UPB_DESC(_UninterpretedOption__NamePart_msg_init)(), 1);
  _upb_Message_GetNonExtensionField(msg, &field, &default_val, &ret);
  return ret;
}
UPB_INLINE bool UPB_DESC(UninterpretedOption_NamePart_has_name_part)(const UPB_DESC(UninterpretedOption_NamePart)* msg) {
  const upb_MiniTableField field = *upb_MiniTable_FindFieldByNumber(UPB_DESC(_UninterpretedOption__NamePart_msg_init)(), 1);
  return _upb_Message_HasNonExtensionField(msg, &field);
}
UPB_INLINE void UPB_DESC(UninterpretedOption_NamePart_clear_is_extension)(UPB_DESC(UninterpretedOption_NamePart)* msg) {
  const upb_MiniTableField field = *upb_MiniTable_FindFieldByNumber(UPB_DESC(_UninterpretedOption__NamePart_msg_init)(), 2);
  _upb_Message_ClearNonExtensionField(msg, &field);
}
UPB_INLINE bool UPB_DESC(UninterpretedOption_NamePart_is_extension)(const UPB_DESC(UninterpretedOption_NamePart)* msg) {
  bool default_val = false;
  bool ret;
  const upb_MiniTableField field = *upb_MiniTable_FindFieldByNumber(UPB_DESC(_UninterpretedOption__NamePart_msg_init)(), 2);
  _upb_Message_GetNonExtensionField(msg, &field, &default_val, &ret);
  return ret;
}
UPB_INLINE bool UPB_DESC(UninterpretedOption_NamePart_has_is_extension)(const UPB_DESC(UninterpretedOption_NamePart)* msg) {
  const upb_MiniTableField field = *upb_MiniTable_FindFieldByNumber(UPB_DESC(_UninterpretedOption__NamePart_msg_init)(), 2);
  return _upb_Message_HasNonExtensionField(msg, &field);
}

UPB_INLINE void UPB_DESC(UninterpretedOption_NamePart_set_name_part)(UPB_DESC(UninterpretedOption_NamePart) *msg, upb_StringView value) {
  const upb_MiniTableField field = *upb_MiniTable_FindFieldByNumber(UPB_DESC(_UninterpretedOption__NamePart_msg_init)(), 1);
  _upb_Message_SetNonExtensionField(msg, &field, &value);
}
UPB_INLINE void UPB_DESC(UninterpretedOption_NamePart_set_is_extension)(UPB_DESC(UninterpretedOption_NamePart) *msg, bool value) {
  const upb_MiniTableField field = *upb_MiniTable_FindFieldByNumber(UPB_DESC(_UninterpretedOption__NamePart_msg_init)(), 2);
  _upb_Message_SetNonExtensionField(msg, &field, &value);
}

/* google.protobuf.FeatureSet */

UPB_INLINE UPB_DESC(FeatureSet)* UPB_DESC(FeatureSet_new)(upb_Arena* arena) {
  return (UPB_DESC(FeatureSet)*)_upb_Message_New(UPB_DESC(_FeatureSet_msg_init)(), arena);
}
UPB_INLINE UPB_DESC(FeatureSet)* UPB_DESC(FeatureSet_parse)(const char* buf, size_t size, upb_Arena* arena) {
  UPB_DESC(FeatureSet)* ret = UPB_DESC(FeatureSet_new)(arena);
  if (!ret) return NULL;
  if (upb_Decode(buf, size, ret, UPB_DESC(_FeatureSet_msg_init)(), NULL, 0, arena) != kUpb_DecodeStatus_Ok) {
    return NULL;
  }
  return ret;
}
UPB_INLINE UPB_DESC(FeatureSet)* UPB_DESC(FeatureSet_parse_ex)(const char* buf, size_t size,
                           const upb_ExtensionRegistry* extreg,
                           int options, upb_Arena* arena) {
  UPB_DESC(FeatureSet)* ret = UPB_DESC(FeatureSet_new)(arena);
  if (!ret) return NULL;
  if (upb_Decode(buf, size, ret, UPB_DESC(_FeatureSet_msg_init)(), extreg, options, arena) !=
      kUpb_DecodeStatus_Ok) {
    return NULL;
  }
  return ret;
}
UPB_INLINE char* UPB_DESC(FeatureSet_serialize)(const UPB_DESC(FeatureSet)* msg, upb_Arena* arena, size_t* len) {
  char* ptr;
  (void)upb_Encode(msg, UPB_DESC(_FeatureSet_msg_init)(), 0, arena, &ptr, len);
  return ptr;
}
UPB_INLINE char* UPB_DESC(FeatureSet_serialize_ex)(const UPB_DESC(FeatureSet)* msg, int options,
                                 upb_Arena* arena, size_t* len) {
  char* ptr;
  (void)upb_Encode(msg, UPB_DESC(_FeatureSet_msg_init)(), options, arena, &ptr, len);
  return ptr;
}
UPB_INLINE void UPB_DESC(FeatureSet_clear_field_presence)(UPB_DESC(FeatureSet)* msg) {
  const upb_MiniTableField field = *upb_MiniTable_FindFieldByNumber(UPB_DESC(_FeatureSet_msg_init)(), 1);
  _upb_Message_ClearNonExtensionField(msg, &field);
}
UPB_INLINE int32_t UPB_DESC(FeatureSet_field_presence)(const UPB_DESC(FeatureSet)* msg) {
  int32_t default_val = 0;
  int32_t ret;
  const upb_MiniTableField field = *upb_MiniTable_FindFieldByNumber(UPB_DESC(_FeatureSet_msg_init)(), 1);
  _upb_Message_GetNonExtensionField(msg, &field, &default_val, &ret);
  return ret;
}
UPB_INLINE bool UPB_DESC(FeatureSet_has_field_presence)(const UPB_DESC(FeatureSet)* msg) {
  const upb_MiniTableField field = *upb_MiniTable_FindFieldByNumber(UPB_DESC(_FeatureSet_msg_init)(), 1);
  return _upb_Message_HasNonExtensionField(msg, &field);
}
UPB_INLINE void UPB_DESC(FeatureSet_clear_enum_type)(UPB_DESC(FeatureSet)* msg) {
  const upb_MiniTableField field = *upb_MiniTable_FindFieldByNumber(UPB_DESC(_FeatureSet_msg_init)(), 2);
  _upb_Message_ClearNonExtensionField(msg, &field);
}
UPB_INLINE int32_t UPB_DESC(FeatureSet_enum_type)(const UPB_DESC(FeatureSet)* msg) {
  int32_t default_val = 0;
  int32_t ret;
  const upb_MiniTableField field = *upb_MiniTable_FindFieldByNumber(UPB_DESC(_FeatureSet_msg_init)(), 2);
  _upb_Message_GetNonExtensionField(msg, &field, &default_val, &ret);
  return ret;
}
UPB_INLINE bool UPB_DESC(FeatureSet_has_enum_type)(const UPB_DESC(FeatureSet)* msg) {
  const upb_MiniTableField field = *upb_MiniTable_FindFieldByNumber(UPB_DESC(_FeatureSet_msg_init)(), 2);
  return _upb_Message_HasNonExtensionField(msg, &field);
}
UPB_INLINE void UPB_DESC(FeatureSet_clear_repeated_field_encoding)(UPB_DESC(FeatureSet)* msg) {
  const upb_MiniTableField field = *upb_MiniTable_FindFieldByNumber(UPB_DESC(_FeatureSet_msg_init)(), 3);
  _upb_Message_ClearNonExtensionField(msg, &field);
}
UPB_INLINE int32_t UPB_DESC(FeatureSet_repeated_field_encoding)(const UPB_DESC(FeatureSet)* msg) {
  int32_t default_val = 0;
  int32_t ret;
  const upb_MiniTableField field = *upb_MiniTable_FindFieldByNumber(UPB_DESC(_FeatureSet_msg_init)(), 3);
  _upb_Message_GetNonExtensionField(msg, &field, &default_val, &ret);
  return ret;
}
UPB_INLINE bool UPB_DESC(FeatureSet_has_repeated_field_encoding)(const UPB_DESC(FeatureSet)* msg) {
  const upb_MiniTableField field = *upb_MiniTable_FindFieldByNumber(UPB_DESC(_FeatureSet_msg_init)(), 3);
  return _upb_Message_HasNonExtensionField(msg, &field);
}
UPB_INLINE void UPB_DESC(FeatureSet_clear_utf8_validation)(UPB_DESC(FeatureSet)* msg) {
  const upb_MiniTableField field = *upb_MiniTable_FindFieldByNumber(UPB_DESC(_FeatureSet_msg_init)(), 4);
  _upb_Message_ClearNonExtensionField(msg, &field);
}
UPB_INLINE int32_t UPB_DESC(FeatureSet_utf8_validation)(const UPB_DESC(FeatureSet)* msg) {
  int32_t default_val = 0;
  int32_t ret;
  const upb_MiniTableField field = *upb_MiniTable_FindFieldByNumber(UPB_DESC(_FeatureSet_msg_init)(), 4);
  _upb_Message_GetNonExtensionField(msg, &field, &default_val, &ret);
  return ret;
}
UPB_INLINE bool UPB_DESC(FeatureSet_has_utf8_validation)(const UPB_DESC(FeatureSet)* msg) {
  const upb_MiniTableField field = *upb_MiniTable_FindFieldByNumber(UPB_DESC(_FeatureSet_msg_init)(), 4);
  return _upb_Message_HasNonExtensionField(msg, &field);
}
UPB_INLINE void UPB_DESC(FeatureSet_clear_message_encoding)(UPB_DESC(FeatureSet)* msg) {
  const upb_MiniTableField field = *upb_MiniTable_FindFieldByNumber(UPB_DESC(_FeatureSet_msg_init)(), 5);
  _upb_Message_ClearNonExtensionField(msg, &field);
}
UPB_INLINE int32_t UPB_DESC(FeatureSet_message_encoding)(const UPB_DESC(FeatureSet)* msg) {
  int32_t default_val = 0;
  int32_t ret;
  const upb_MiniTableField field = *upb_MiniTable_FindFieldByNumber(UPB_DESC(_FeatureSet_msg_init)(), 5);
  _upb_Message_GetNonExtensionField(msg, &field, &default_val, &ret);
  return ret;
}
UPB_INLINE bool UPB_DESC(FeatureSet_has_message_encoding)(const UPB_DESC(FeatureSet)* msg) {
  const upb_MiniTableField field = *upb_MiniTable_FindFieldByNumber(UPB_DESC(_FeatureSet_msg_init)(), 5);
  return _upb_Message_HasNonExtensionField(msg, &field);
}
UPB_INLINE void UPB_DESC(FeatureSet_clear_json_format)(UPB_DESC(FeatureSet)* msg) {
  const upb_MiniTableField field = *upb_MiniTable_FindFieldByNumber(UPB_DESC(_FeatureSet_msg_init)(), 6);
  _upb_Message_ClearNonExtensionField(msg, &field);
}
UPB_INLINE int32_t UPB_DESC(FeatureSet_json_format)(const UPB_DESC(FeatureSet)* msg) {
  int32_t default_val = 0;
  int32_t ret;
  const upb_MiniTableField field = *upb_MiniTable_FindFieldByNumber(UPB_DESC(_FeatureSet_msg_init)(), 6);
  _upb_Message_GetNonExtensionField(msg, &field, &default_val, &ret);
  return ret;
}
UPB_INLINE bool UPB_DESC(FeatureSet_has_json_format)(const UPB_DESC(FeatureSet)* msg) {
  const upb_MiniTableField field = *upb_MiniTable_FindFieldByNumber(UPB_DESC(_FeatureSet_msg_init)(), 6);
  return _upb_Message_HasNonExtensionField(msg, &field);
}

UPB_INLINE void UPB_DESC(FeatureSet_set_field_presence)(UPB_DESC(FeatureSet) *msg, int32_t value) {
  const upb_MiniTableField field = *upb_MiniTable_FindFieldByNumber(UPB_DESC(_FeatureSet_msg_init)(), 1);
  _upb_Message_SetNonExtensionField(msg, &field, &value);
}
UPB_INLINE void UPB_DESC(FeatureSet_set_enum_type)(UPB_DESC(FeatureSet) *msg, int32_t value) {
  const upb_MiniTableField field = *upb_MiniTable_FindFieldByNumber(UPB_DESC(_FeatureSet_msg_init)(), 2);
  _upb_Message_SetNonExtensionField(msg, &field, &value);
}
UPB_INLINE void UPB_DESC(FeatureSet_set_repeated_field_encoding)(UPB_DESC(FeatureSet) *msg, int32_t value) {
  const upb_MiniTableField field = *upb_MiniTable_FindFieldByNumber(UPB_DESC(_FeatureSet_msg_init)(), 3);
  _upb_Message_SetNonExtensionField(msg, &field, &value);
}
UPB_INLINE void UPB_DESC(FeatureSet_set_utf8_validation)(UPB_DESC(FeatureSet) *msg, int32_t value) {
  const upb_MiniTableField field = *upb_MiniTable_FindFieldByNumber(UPB_DESC(_FeatureSet_msg_init)(), 4);
  _upb_Message_SetNonExtensionField(msg, &field, &value);
}
UPB_INLINE void UPB_DESC(FeatureSet_set_message_encoding)(UPB_DESC(FeatureSet) *msg, int32_t value) {
  const upb_MiniTableField field = *upb_MiniTable_FindFieldByNumber(UPB_DESC(_FeatureSet_msg_init)(), 5);
  _upb_Message_SetNonExtensionField(msg, &field, &value);
}
UPB_INLINE void UPB_DESC(FeatureSet_set_json_format)(UPB_DESC(FeatureSet) *msg, int32_t value) {
  const upb_MiniTableField field = *upb_MiniTable_FindFieldByNumber(UPB_DESC(_FeatureSet_msg_init)(), 6);
  _upb_Message_SetNonExtensionField(msg, &field, &value);
}

/* google.protobuf.FeatureSetDefaults */

UPB_INLINE UPB_DESC(FeatureSetDefaults)* UPB_DESC(FeatureSetDefaults_new)(upb_Arena* arena) {
  return (UPB_DESC(FeatureSetDefaults)*)_upb_Message_New(UPB_DESC(_FeatureSetDefaults_msg_init)(), arena);
}
UPB_INLINE UPB_DESC(FeatureSetDefaults)* UPB_DESC(FeatureSetDefaults_parse)(const char* buf, size_t size, upb_Arena* arena) {
  UPB_DESC(FeatureSetDefaults)* ret = UPB_DESC(FeatureSetDefaults_new)(arena);
  if (!ret) return NULL;
  if (upb_Decode(buf, size, ret, UPB_DESC(_FeatureSetDefaults_msg_init)(), NULL, 0, arena) != kUpb_DecodeStatus_Ok) {
    return NULL;
  }
  return ret;
}
UPB_INLINE UPB_DESC(FeatureSetDefaults)* UPB_DESC(FeatureSetDefaults_parse_ex)(const char* buf, size_t size,
                           const upb_ExtensionRegistry* extreg,
                           int options, upb_Arena* arena) {
  UPB_DESC(FeatureSetDefaults)* ret = UPB_DESC(FeatureSetDefaults_new)(arena);
  if (!ret) return NULL;
  if (upb_Decode(buf, size, ret, UPB_DESC(_FeatureSetDefaults_msg_init)(), extreg, options, arena) !=
      kUpb_DecodeStatus_Ok) {
    return NULL;
  }
  return ret;
}
UPB_INLINE char* UPB_DESC(FeatureSetDefaults_serialize)(const UPB_DESC(FeatureSetDefaults)* msg, upb_Arena* arena, size_t* len) {
  char* ptr;
  (void)upb_Encode(msg, UPB_DESC(_FeatureSetDefaults_msg_init)(), 0, arena, &ptr, len);
  return ptr;
}
UPB_INLINE char* UPB_DESC(FeatureSetDefaults_serialize_ex)(const UPB_DESC(FeatureSetDefaults)* msg, int options,
                                 upb_Arena* arena, size_t* len) {
  char* ptr;
  (void)upb_Encode(msg, UPB_DESC(_FeatureSetDefaults_msg_init)(), options, arena, &ptr, len);
  return ptr;
}
UPB_INLINE void UPB_DESC(FeatureSetDefaults_clear_defaults)(UPB_DESC(FeatureSetDefaults)* msg) {
  const upb_MiniTableField field = *upb_MiniTable_FindFieldByNumber(UPB_DESC(_FeatureSetDefaults_msg_init)(), 1);
  _upb_Message_ClearNonExtensionField(msg, &field);
}
UPB_INLINE const UPB_DESC(FeatureSetDefaults_FeatureSetEditionDefault)* const* UPB_DESC(FeatureSetDefaults_defaults)(const UPB_DESC(FeatureSetDefaults)* msg, size_t* size) {
  const upb_MiniTableField field = *upb_MiniTable_FindFieldByNumber(UPB_DESC(_FeatureSetDefaults_msg_init)(), 1);
  const upb_Array* arr = upb_Message_GetArray(msg, &field);
  if (arr) {
    if (size) *size = arr->size;
    return (const UPB_DESC(FeatureSetDefaults_FeatureSetEditionDefault)* const*)_upb_array_constptr(arr);
  } else {
    if (size) *size = 0;
    return NULL;
  }
}
UPB_INLINE const upb_Array* _google_protobuf_FeatureSetDefaults_defaults_upb_array(const UPB_DESC(FeatureSetDefaults)* msg, size_t* size) {
  const upb_MiniTableField field = *upb_MiniTable_FindFieldByNumber(UPB_DESC(_FeatureSetDefaults_msg_init)(), 1);
  const upb_Array* arr = upb_Message_GetArray(msg, &field);
  if (size) {
    *size = arr ? arr->size : 0;
  }
  return arr;
}
UPB_INLINE upb_Array* _google_protobuf_FeatureSetDefaults_defaults_mutable_upb_array(const UPB_DESC(FeatureSetDefaults)* msg, size_t* size, upb_Arena* arena) {
  const upb_MiniTableField field = *upb_MiniTable_FindFieldByNumber(UPB_DESC(_FeatureSetDefaults_msg_init)(), 1);
  upb_Array* arr = upb_Message_GetOrCreateMutableArray(
      (upb_Message*)msg, &field, arena);
  if (size) {
    *size = arr ? arr->size : 0;
  }
  return arr;
}
UPB_INLINE bool UPB_DESC(FeatureSetDefaults_has_defaults)(const UPB_DESC(FeatureSetDefaults)* msg) {
  size_t size;
  UPB_DESC(FeatureSetDefaults_defaults)(msg, &size);
  return size != 0;
}
UPB_INLINE void UPB_DESC(FeatureSetDefaults_clear_minimum_edition)(UPB_DESC(FeatureSetDefaults)* msg) {
  const upb_MiniTableField field = *upb_MiniTable_FindFieldByNumber(UPB_DESC(_FeatureSetDefaults_msg_init)(), 4);
  _upb_Message_ClearNonExtensionField(msg, &field);
}
UPB_INLINE int32_t UPB_DESC(FeatureSetDefaults_minimum_edition)(const UPB_DESC(FeatureSetDefaults)* msg) {
  int32_t default_val = 0;
  int32_t ret;
  const upb_MiniTableField field = *upb_MiniTable_FindFieldByNumber(UPB_DESC(_FeatureSetDefaults_msg_init)(), 4);
  _upb_Message_GetNonExtensionField(msg, &field, &default_val, &ret);
  return ret;
}
UPB_INLINE bool UPB_DESC(FeatureSetDefaults_has_minimum_edition)(const UPB_DESC(FeatureSetDefaults)* msg) {
  const upb_MiniTableField field = *upb_MiniTable_FindFieldByNumber(UPB_DESC(_FeatureSetDefaults_msg_init)(), 4);
  return _upb_Message_HasNonExtensionField(msg, &field);
}
UPB_INLINE void UPB_DESC(FeatureSetDefaults_clear_maximum_edition)(UPB_DESC(FeatureSetDefaults)* msg) {
  const upb_MiniTableField field = *upb_MiniTable_FindFieldByNumber(UPB_DESC(_FeatureSetDefaults_msg_init)(), 5);
  _upb_Message_ClearNonExtensionField(msg, &field);
}
UPB_INLINE int32_t UPB_DESC(FeatureSetDefaults_maximum_edition)(const UPB_DESC(FeatureSetDefaults)* msg) {
  int32_t default_val = 0;
  int32_t ret;
  const upb_MiniTableField field = *upb_MiniTable_FindFieldByNumber(UPB_DESC(_FeatureSetDefaults_msg_init)(), 5);
  _upb_Message_GetNonExtensionField(msg, &field, &default_val, &ret);
  return ret;
}
UPB_INLINE bool UPB_DESC(FeatureSetDefaults_has_maximum_edition)(const UPB_DESC(FeatureSetDefaults)* msg) {
  const upb_MiniTableField field = *upb_MiniTable_FindFieldByNumber(UPB_DESC(_FeatureSetDefaults_msg_init)(), 5);
  return _upb_Message_HasNonExtensionField(msg, &field);
}

UPB_INLINE UPB_DESC(FeatureSetDefaults_FeatureSetEditionDefault)** UPB_DESC(FeatureSetDefaults_mutable_defaults)(UPB_DESC(FeatureSetDefaults)* msg, size_t* size) {
  upb_MiniTableField field = *upb_MiniTable_FindFieldByNumber(UPB_DESC(_FeatureSetDefaults_msg_init)(), 1);
  upb_Array* arr = upb_Message_GetMutableArray(msg, &field);
  if (arr) {
    if (size) *size = arr->size;
    return (UPB_DESC(FeatureSetDefaults_FeatureSetEditionDefault)**)_upb_array_ptr(arr);
  } else {
    if (size) *size = 0;
    return NULL;
  }
}
UPB_INLINE UPB_DESC(FeatureSetDefaults_FeatureSetEditionDefault)** UPB_DESC(FeatureSetDefaults_resize_defaults)(UPB_DESC(FeatureSetDefaults)* msg, size_t size, upb_Arena* arena) {
  upb_MiniTableField field = *upb_MiniTable_FindFieldByNumber(UPB_DESC(_FeatureSetDefaults_msg_init)(), 1);
  return (UPB_DESC(FeatureSetDefaults_FeatureSetEditionDefault)**)upb_Message_ResizeArrayUninitialized(msg, &field, size, arena);
}
UPB_INLINE struct UPB_DESC(FeatureSetDefaults_FeatureSetEditionDefault)* UPB_DESC(FeatureSetDefaults_add_defaults)(UPB_DESC(FeatureSetDefaults)* msg, upb_Arena* arena) {
  upb_MiniTableField field = *upb_MiniTable_FindFieldByNumber(UPB_DESC(_FeatureSetDefaults_msg_init)(), 1);
  upb_Array* arr = upb_Message_GetOrCreateMutableArray(msg, &field, arena);
  if (!arr || !_upb_Array_ResizeUninitialized(arr, arr->size + 1, arena)) {
    return NULL;
  }
  struct UPB_DESC(FeatureSetDefaults_FeatureSetEditionDefault)* sub = (struct UPB_DESC(FeatureSetDefaults_FeatureSetEditionDefault)*)_upb_Message_New(UPB_DESC(_FeatureSetDefaults__FeatureSetEditionDefault_msg_init)(), arena);
  if (!arr || !sub) return NULL;
  _upb_Array_Set(arr, arr->size - 1, &sub, sizeof(sub));
  return sub;
}
UPB_INLINE void UPB_DESC(FeatureSetDefaults_set_minimum_edition)(UPB_DESC(FeatureSetDefaults) *msg, int32_t value) {
  const upb_MiniTableField field = *upb_MiniTable_FindFieldByNumber(UPB_DESC(_FeatureSetDefaults_msg_init)(), 4);
  _upb_Message_SetNonExtensionField(msg, &field, &value);
}
UPB_INLINE void UPB_DESC(FeatureSetDefaults_set_maximum_edition)(UPB_DESC(FeatureSetDefaults) *msg, int32_t value) {
  const upb_MiniTableField field = *upb_MiniTable_FindFieldByNumber(UPB_DESC(_FeatureSetDefaults_msg_init)(), 5);
  _upb_Message_SetNonExtensionField(msg, &field, &value);
}

/* google.protobuf.FeatureSetDefaults.FeatureSetEditionDefault */

UPB_INLINE UPB_DESC(FeatureSetDefaults_FeatureSetEditionDefault)* UPB_DESC(FeatureSetDefaults_FeatureSetEditionDefault_new)(upb_Arena* arena) {
  return (UPB_DESC(FeatureSetDefaults_FeatureSetEditionDefault)*)_upb_Message_New(UPB_DESC(_FeatureSetDefaults__FeatureSetEditionDefault_msg_init)(), arena);
}
UPB_INLINE UPB_DESC(FeatureSetDefaults_FeatureSetEditionDefault)* UPB_DESC(FeatureSetDefaults_FeatureSetEditionDefault_parse)(const char* buf, size_t size, upb_Arena* arena) {
  UPB_DESC(FeatureSetDefaults_FeatureSetEditionDefault)* ret = UPB_DESC(FeatureSetDefaults_FeatureSetEditionDefault_new)(arena);
  if (!ret) return NULL;
  if (upb_Decode(buf, size, ret, UPB_DESC(_FeatureSetDefaults__FeatureSetEditionDefault_msg_init)(), NULL, 0, arena) != kUpb_DecodeStatus_Ok) {
    return NULL;
  }
  return ret;
}
UPB_INLINE UPB_DESC(FeatureSetDefaults_FeatureSetEditionDefault)* UPB_DESC(FeatureSetDefaults_FeatureSetEditionDefault_parse_ex)(const char* buf, size_t size,
                           const upb_ExtensionRegistry* extreg,
                           int options, upb_Arena* arena) {
  UPB_DESC(FeatureSetDefaults_FeatureSetEditionDefault)* ret = UPB_DESC(FeatureSetDefaults_FeatureSetEditionDefault_new)(arena);
  if (!ret) return NULL;
  if (upb_Decode(buf, size, ret, UPB_DESC(_FeatureSetDefaults__FeatureSetEditionDefault_msg_init)(), extreg, options, arena) !=
      kUpb_DecodeStatus_Ok) {
    return NULL;
  }
  return ret;
}
UPB_INLINE char* UPB_DESC(FeatureSetDefaults_FeatureSetEditionDefault_serialize)(const UPB_DESC(FeatureSetDefaults_FeatureSetEditionDefault)* msg, upb_Arena* arena, size_t* len) {
  char* ptr;
  (void)upb_Encode(msg, UPB_DESC(_FeatureSetDefaults__FeatureSetEditionDefault_msg_init)(), 0, arena, &ptr, len);
  return ptr;
}
UPB_INLINE char* UPB_DESC(FeatureSetDefaults_FeatureSetEditionDefault_serialize_ex)(const UPB_DESC(FeatureSetDefaults_FeatureSetEditionDefault)* msg, int options,
                                 upb_Arena* arena, size_t* len) {
  char* ptr;
  (void)upb_Encode(msg, UPB_DESC(_FeatureSetDefaults__FeatureSetEditionDefault_msg_init)(), options, arena, &ptr, len);
  return ptr;
}
UPB_INLINE void UPB_DESC(FeatureSetDefaults_FeatureSetEditionDefault_clear_features)(UPB_DESC(FeatureSetDefaults_FeatureSetEditionDefault)* msg) {
  const upb_MiniTableField field = *upb_MiniTable_FindFieldByNumber(UPB_DESC(_FeatureSetDefaults__FeatureSetEditionDefault_msg_init)(), 2);
  _upb_Message_ClearNonExtensionField(msg, &field);
}
UPB_INLINE const UPB_DESC(FeatureSet)* UPB_DESC(FeatureSetDefaults_FeatureSetEditionDefault_features)(const UPB_DESC(FeatureSetDefaults_FeatureSetEditionDefault)* msg) {
  const UPB_DESC(FeatureSet)* default_val = NULL;
  const UPB_DESC(FeatureSet)* ret;
  const upb_MiniTableField field = *upb_MiniTable_FindFieldByNumber(UPB_DESC(_FeatureSetDefaults__FeatureSetEditionDefault_msg_init)(), 2);
  _upb_Message_GetNonExtensionField(msg, &field, &default_val, &ret);
  return ret;
}
UPB_INLINE bool UPB_DESC(FeatureSetDefaults_FeatureSetEditionDefault_has_features)(const UPB_DESC(FeatureSetDefaults_FeatureSetEditionDefault)* msg) {
  const upb_MiniTableField field = *upb_MiniTable_FindFieldByNumber(UPB_DESC(_FeatureSetDefaults__FeatureSetEditionDefault_msg_init)(), 2);
  return _upb_Message_HasNonExtensionField(msg, &field);
}
UPB_INLINE void UPB_DESC(FeatureSetDefaults_FeatureSetEditionDefault_clear_edition)(UPB_DESC(FeatureSetDefaults_FeatureSetEditionDefault)* msg) {
  const upb_MiniTableField field = *upb_MiniTable_FindFieldByNumber(UPB_DESC(_FeatureSetDefaults__FeatureSetEditionDefault_msg_init)(), 3);
  _upb_Message_ClearNonExtensionField(msg, &field);
}
UPB_INLINE int32_t UPB_DESC(FeatureSetDefaults_FeatureSetEditionDefault_edition)(const UPB_DESC(FeatureSetDefaults_FeatureSetEditionDefault)* msg) {
  int32_t default_val = 0;
  int32_t ret;
  const upb_MiniTableField field = *upb_MiniTable_FindFieldByNumber(UPB_DESC(_FeatureSetDefaults__FeatureSetEditionDefault_msg_init)(), 3);
  _upb_Message_GetNonExtensionField(msg, &field, &default_val, &ret);
  return ret;
}
UPB_INLINE bool UPB_DESC(FeatureSetDefaults_FeatureSetEditionDefault_has_edition)(const UPB_DESC(FeatureSetDefaults_FeatureSetEditionDefault)* msg) {
  const upb_MiniTableField field = *upb_MiniTable_FindFieldByNumber(UPB_DESC(_FeatureSetDefaults__FeatureSetEditionDefault_msg_init)(), 3);
  return _upb_Message_HasNonExtensionField(msg, &field);
}

UPB_INLINE void UPB_DESC(FeatureSetDefaults_FeatureSetEditionDefault_set_features)(UPB_DESC(FeatureSetDefaults_FeatureSetEditionDefault) *msg, UPB_DESC(FeatureSet)* value) {
  const upb_MiniTableField field = *upb_MiniTable_FindFieldByNumber(UPB_DESC(_FeatureSetDefaults__FeatureSetEditionDefault_msg_init)(), 2);
  _upb_Message_SetNonExtensionField(msg, &field, &value);
}
UPB_INLINE struct UPB_DESC(FeatureSet)* UPB_DESC(FeatureSetDefaults_FeatureSetEditionDefault_mutable_features)(UPB_DESC(FeatureSetDefaults_FeatureSetEditionDefault)* msg, upb_Arena* arena) {
  struct UPB_DESC(FeatureSet)* sub = (struct UPB_DESC(FeatureSet)*)UPB_DESC(FeatureSetDefaults_FeatureSetEditionDefault_features)(msg);
  if (sub == NULL) {
    sub = (struct UPB_DESC(FeatureSet)*)_upb_Message_New(UPB_DESC(_FeatureSet_msg_init)(), arena);
    if (sub) UPB_DESC(FeatureSetDefaults_FeatureSetEditionDefault_set_features)(msg, sub);
  }
  return sub;
}
UPB_INLINE void UPB_DESC(FeatureSetDefaults_FeatureSetEditionDefault_set_edition)(UPB_DESC(FeatureSetDefaults_FeatureSetEditionDefault) *msg, int32_t value) {
  const upb_MiniTableField field = *upb_MiniTable_FindFieldByNumber(UPB_DESC(_FeatureSetDefaults__FeatureSetEditionDefault_msg_init)(), 3);
  _upb_Message_SetNonExtensionField(msg, &field, &value);
}

/* google.protobuf.SourceCodeInfo */

UPB_INLINE UPB_DESC(SourceCodeInfo)* UPB_DESC(SourceCodeInfo_new)(upb_Arena* arena) {
  return (UPB_DESC(SourceCodeInfo)*)_upb_Message_New(UPB_DESC(_SourceCodeInfo_msg_init)(), arena);
}
UPB_INLINE UPB_DESC(SourceCodeInfo)* UPB_DESC(SourceCodeInfo_parse)(const char* buf, size_t size, upb_Arena* arena) {
  UPB_DESC(SourceCodeInfo)* ret = UPB_DESC(SourceCodeInfo_new)(arena);
  if (!ret) return NULL;
  if (upb_Decode(buf, size, ret, UPB_DESC(_SourceCodeInfo_msg_init)(), NULL, 0, arena) != kUpb_DecodeStatus_Ok) {
    return NULL;
  }
  return ret;
}
UPB_INLINE UPB_DESC(SourceCodeInfo)* UPB_DESC(SourceCodeInfo_parse_ex)(const char* buf, size_t size,
                           const upb_ExtensionRegistry* extreg,
                           int options, upb_Arena* arena) {
  UPB_DESC(SourceCodeInfo)* ret = UPB_DESC(SourceCodeInfo_new)(arena);
  if (!ret) return NULL;
  if (upb_Decode(buf, size, ret, UPB_DESC(_SourceCodeInfo_msg_init)(), extreg, options, arena) !=
      kUpb_DecodeStatus_Ok) {
    return NULL;
  }
  return ret;
}
UPB_INLINE char* UPB_DESC(SourceCodeInfo_serialize)(const UPB_DESC(SourceCodeInfo)* msg, upb_Arena* arena, size_t* len) {
  char* ptr;
  (void)upb_Encode(msg, UPB_DESC(_SourceCodeInfo_msg_init)(), 0, arena, &ptr, len);
  return ptr;
}
UPB_INLINE char* UPB_DESC(SourceCodeInfo_serialize_ex)(const UPB_DESC(SourceCodeInfo)* msg, int options,
                                 upb_Arena* arena, size_t* len) {
  char* ptr;
  (void)upb_Encode(msg, UPB_DESC(_SourceCodeInfo_msg_init)(), options, arena, &ptr, len);
  return ptr;
}
UPB_INLINE void UPB_DESC(SourceCodeInfo_clear_location)(UPB_DESC(SourceCodeInfo)* msg) {
  const upb_MiniTableField field = *upb_MiniTable_FindFieldByNumber(UPB_DESC(_SourceCodeInfo_msg_init)(), 1);
  _upb_Message_ClearNonExtensionField(msg, &field);
}
UPB_INLINE const UPB_DESC(SourceCodeInfo_Location)* const* UPB_DESC(SourceCodeInfo_location)(const UPB_DESC(SourceCodeInfo)* msg, size_t* size) {
  const upb_MiniTableField field = *upb_MiniTable_FindFieldByNumber(UPB_DESC(_SourceCodeInfo_msg_init)(), 1);
  const upb_Array* arr = upb_Message_GetArray(msg, &field);
  if (arr) {
    if (size) *size = arr->size;
    return (const UPB_DESC(SourceCodeInfo_Location)* const*)_upb_array_constptr(arr);
  } else {
    if (size) *size = 0;
    return NULL;
  }
}
UPB_INLINE const upb_Array* _google_protobuf_SourceCodeInfo_location_upb_array(const UPB_DESC(SourceCodeInfo)* msg, size_t* size) {
  const upb_MiniTableField field = *upb_MiniTable_FindFieldByNumber(UPB_DESC(_SourceCodeInfo_msg_init)(), 1);
  const upb_Array* arr = upb_Message_GetArray(msg, &field);
  if (size) {
    *size = arr ? arr->size : 0;
  }
  return arr;
}
UPB_INLINE upb_Array* _google_protobuf_SourceCodeInfo_location_mutable_upb_array(const UPB_DESC(SourceCodeInfo)* msg, size_t* size, upb_Arena* arena) {
  const upb_MiniTableField field = *upb_MiniTable_FindFieldByNumber(UPB_DESC(_SourceCodeInfo_msg_init)(), 1);
  upb_Array* arr = upb_Message_GetOrCreateMutableArray(
      (upb_Message*)msg, &field, arena);
  if (size) {
    *size = arr ? arr->size : 0;
  }
  return arr;
}
UPB_INLINE bool UPB_DESC(SourceCodeInfo_has_location)(const UPB_DESC(SourceCodeInfo)* msg) {
  size_t size;
  UPB_DESC(SourceCodeInfo_location)(msg, &size);
  return size != 0;
}

UPB_INLINE UPB_DESC(SourceCodeInfo_Location)** UPB_DESC(SourceCodeInfo_mutable_location)(UPB_DESC(SourceCodeInfo)* msg, size_t* size) {
  upb_MiniTableField field = *upb_MiniTable_FindFieldByNumber(UPB_DESC(_SourceCodeInfo_msg_init)(), 1);
  upb_Array* arr = upb_Message_GetMutableArray(msg, &field);
  if (arr) {
    if (size) *size = arr->size;
    return (UPB_DESC(SourceCodeInfo_Location)**)_upb_array_ptr(arr);
  } else {
    if (size) *size = 0;
    return NULL;
  }
}
UPB_INLINE UPB_DESC(SourceCodeInfo_Location)** UPB_DESC(SourceCodeInfo_resize_location)(UPB_DESC(SourceCodeInfo)* msg, size_t size, upb_Arena* arena) {
  upb_MiniTableField field = *upb_MiniTable_FindFieldByNumber(UPB_DESC(_SourceCodeInfo_msg_init)(), 1);
  return (UPB_DESC(SourceCodeInfo_Location)**)upb_Message_ResizeArrayUninitialized(msg, &field, size, arena);
}
UPB_INLINE struct UPB_DESC(SourceCodeInfo_Location)* UPB_DESC(SourceCodeInfo_add_location)(UPB_DESC(SourceCodeInfo)* msg, upb_Arena* arena) {
  upb_MiniTableField field = *upb_MiniTable_FindFieldByNumber(UPB_DESC(_SourceCodeInfo_msg_init)(), 1);
  upb_Array* arr = upb_Message_GetOrCreateMutableArray(msg, &field, arena);
  if (!arr || !_upb_Array_ResizeUninitialized(arr, arr->size + 1, arena)) {
    return NULL;
  }
  struct UPB_DESC(SourceCodeInfo_Location)* sub = (struct UPB_DESC(SourceCodeInfo_Location)*)_upb_Message_New(UPB_DESC(_SourceCodeInfo__Location_msg_init)(), arena);
  if (!arr || !sub) return NULL;
  _upb_Array_Set(arr, arr->size - 1, &sub, sizeof(sub));
  return sub;
}

/* google.protobuf.SourceCodeInfo.Location */

UPB_INLINE UPB_DESC(SourceCodeInfo_Location)* UPB_DESC(SourceCodeInfo_Location_new)(upb_Arena* arena) {
  return (UPB_DESC(SourceCodeInfo_Location)*)_upb_Message_New(UPB_DESC(_SourceCodeInfo__Location_msg_init)(), arena);
}
UPB_INLINE UPB_DESC(SourceCodeInfo_Location)* UPB_DESC(SourceCodeInfo_Location_parse)(const char* buf, size_t size, upb_Arena* arena) {
  UPB_DESC(SourceCodeInfo_Location)* ret = UPB_DESC(SourceCodeInfo_Location_new)(arena);
  if (!ret) return NULL;
  if (upb_Decode(buf, size, ret, UPB_DESC(_SourceCodeInfo__Location_msg_init)(), NULL, 0, arena) != kUpb_DecodeStatus_Ok) {
    return NULL;
  }
  return ret;
}
UPB_INLINE UPB_DESC(SourceCodeInfo_Location)* UPB_DESC(SourceCodeInfo_Location_parse_ex)(const char* buf, size_t size,
                           const upb_ExtensionRegistry* extreg,
                           int options, upb_Arena* arena) {
  UPB_DESC(SourceCodeInfo_Location)* ret = UPB_DESC(SourceCodeInfo_Location_new)(arena);
  if (!ret) return NULL;
  if (upb_Decode(buf, size, ret, UPB_DESC(_SourceCodeInfo__Location_msg_init)(), extreg, options, arena) !=
      kUpb_DecodeStatus_Ok) {
    return NULL;
  }
  return ret;
}
UPB_INLINE char* UPB_DESC(SourceCodeInfo_Location_serialize)(const UPB_DESC(SourceCodeInfo_Location)* msg, upb_Arena* arena, size_t* len) {
  char* ptr;
  (void)upb_Encode(msg, UPB_DESC(_SourceCodeInfo__Location_msg_init)(), 0, arena, &ptr, len);
  return ptr;
}
UPB_INLINE char* UPB_DESC(SourceCodeInfo_Location_serialize_ex)(const UPB_DESC(SourceCodeInfo_Location)* msg, int options,
                                 upb_Arena* arena, size_t* len) {
  char* ptr;
  (void)upb_Encode(msg, UPB_DESC(_SourceCodeInfo__Location_msg_init)(), options, arena, &ptr, len);
  return ptr;
}
UPB_INLINE void UPB_DESC(SourceCodeInfo_Location_clear_path)(UPB_DESC(SourceCodeInfo_Location)* msg) {
  const upb_MiniTableField field = *upb_MiniTable_FindFieldByNumber(UPB_DESC(_SourceCodeInfo__Location_msg_init)(), 1);
  _upb_Message_ClearNonExtensionField(msg, &field);
}
UPB_INLINE int32_t const* UPB_DESC(SourceCodeInfo_Location_path)(const UPB_DESC(SourceCodeInfo_Location)* msg, size_t* size) {
  const upb_MiniTableField field = *upb_MiniTable_FindFieldByNumber(UPB_DESC(_SourceCodeInfo__Location_msg_init)(), 1);
  const upb_Array* arr = upb_Message_GetArray(msg, &field);
  if (arr) {
    if (size) *size = arr->size;
    return (int32_t const*)_upb_array_constptr(arr);
  } else {
    if (size) *size = 0;
    return NULL;
  }
}
UPB_INLINE const upb_Array* _google_protobuf_SourceCodeInfo_Location_path_upb_array(const UPB_DESC(SourceCodeInfo_Location)* msg, size_t* size) {
  const upb_MiniTableField field = *upb_MiniTable_FindFieldByNumber(UPB_DESC(_SourceCodeInfo__Location_msg_init)(), 1);
  const upb_Array* arr = upb_Message_GetArray(msg, &field);
  if (size) {
    *size = arr ? arr->size : 0;
  }
  return arr;
}
UPB_INLINE upb_Array* _google_protobuf_SourceCodeInfo_Location_path_mutable_upb_array(const UPB_DESC(SourceCodeInfo_Location)* msg, size_t* size, upb_Arena* arena) {
  const upb_MiniTableField field = *upb_MiniTable_FindFieldByNumber(UPB_DESC(_SourceCodeInfo__Location_msg_init)(), 1);
  upb_Array* arr = upb_Message_GetOrCreateMutableArray(
      (upb_Message*)msg, &field, arena);
  if (size) {
    *size = arr ? arr->size : 0;
  }
  return arr;
}
UPB_INLINE bool UPB_DESC(SourceCodeInfo_Location_has_path)(const UPB_DESC(SourceCodeInfo_Location)* msg) {
  size_t size;
  UPB_DESC(SourceCodeInfo_Location_path)(msg, &size);
  return size != 0;
}
UPB_INLINE void UPB_DESC(SourceCodeInfo_Location_clear_span)(UPB_DESC(SourceCodeInfo_Location)* msg) {
  const upb_MiniTableField field = *upb_MiniTable_FindFieldByNumber(UPB_DESC(_SourceCodeInfo__Location_msg_init)(), 2);
  _upb_Message_ClearNonExtensionField(msg, &field);
}
UPB_INLINE int32_t const* UPB_DESC(SourceCodeInfo_Location_span)(const UPB_DESC(SourceCodeInfo_Location)* msg, size_t* size) {
  const upb_MiniTableField field = *upb_MiniTable_FindFieldByNumber(UPB_DESC(_SourceCodeInfo__Location_msg_init)(), 2);
  const upb_Array* arr = upb_Message_GetArray(msg, &field);
  if (arr) {
    if (size) *size = arr->size;
    return (int32_t const*)_upb_array_constptr(arr);
  } else {
    if (size) *size = 0;
    return NULL;
  }
}
UPB_INLINE const upb_Array* _google_protobuf_SourceCodeInfo_Location_span_upb_array(const UPB_DESC(SourceCodeInfo_Location)* msg, size_t* size) {
  const upb_MiniTableField field = *upb_MiniTable_FindFieldByNumber(UPB_DESC(_SourceCodeInfo__Location_msg_init)(), 2);
  const upb_Array* arr = upb_Message_GetArray(msg, &field);
  if (size) {
    *size = arr ? arr->size : 0;
  }
  return arr;
}
UPB_INLINE upb_Array* _google_protobuf_SourceCodeInfo_Location_span_mutable_upb_array(const UPB_DESC(SourceCodeInfo_Location)* msg, size_t* size, upb_Arena* arena) {
  const upb_MiniTableField field = *upb_MiniTable_FindFieldByNumber(UPB_DESC(_SourceCodeInfo__Location_msg_init)(), 2);
  upb_Array* arr = upb_Message_GetOrCreateMutableArray(
      (upb_Message*)msg, &field, arena);
  if (size) {
    *size = arr ? arr->size : 0;
  }
  return arr;
}
UPB_INLINE bool UPB_DESC(SourceCodeInfo_Location_has_span)(const UPB_DESC(SourceCodeInfo_Location)* msg) {
  size_t size;
  UPB_DESC(SourceCodeInfo_Location_span)(msg, &size);
  return size != 0;
}
UPB_INLINE void UPB_DESC(SourceCodeInfo_Location_clear_leading_comments)(UPB_DESC(SourceCodeInfo_Location)* msg) {
  const upb_MiniTableField field = *upb_MiniTable_FindFieldByNumber(UPB_DESC(_SourceCodeInfo__Location_msg_init)(), 3);
  _upb_Message_ClearNonExtensionField(msg, &field);
}
UPB_INLINE upb_StringView UPB_DESC(SourceCodeInfo_Location_leading_comments)(const UPB_DESC(SourceCodeInfo_Location)* msg) {
  upb_StringView default_val = upb_StringView_FromString("");
  upb_StringView ret;
  const upb_MiniTableField field = *upb_MiniTable_FindFieldByNumber(UPB_DESC(_SourceCodeInfo__Location_msg_init)(), 3);
  _upb_Message_GetNonExtensionField(msg, &field, &default_val, &ret);
  return ret;
}
UPB_INLINE bool UPB_DESC(SourceCodeInfo_Location_has_leading_comments)(const UPB_DESC(SourceCodeInfo_Location)* msg) {
  const upb_MiniTableField field = *upb_MiniTable_FindFieldByNumber(UPB_DESC(_SourceCodeInfo__Location_msg_init)(), 3);
  return _upb_Message_HasNonExtensionField(msg, &field);
}
UPB_INLINE void UPB_DESC(SourceCodeInfo_Location_clear_trailing_comments)(UPB_DESC(SourceCodeInfo_Location)* msg) {
  const upb_MiniTableField field = *upb_MiniTable_FindFieldByNumber(UPB_DESC(_SourceCodeInfo__Location_msg_init)(), 4);
  _upb_Message_ClearNonExtensionField(msg, &field);
}
UPB_INLINE upb_StringView UPB_DESC(SourceCodeInfo_Location_trailing_comments)(const UPB_DESC(SourceCodeInfo_Location)* msg) {
  upb_StringView default_val = upb_StringView_FromString("");
  upb_StringView ret;
  const upb_MiniTableField field = *upb_MiniTable_FindFieldByNumber(UPB_DESC(_SourceCodeInfo__Location_msg_init)(), 4);
  _upb_Message_GetNonExtensionField(msg, &field, &default_val, &ret);
  return ret;
}
UPB_INLINE bool UPB_DESC(SourceCodeInfo_Location_has_trailing_comments)(const UPB_DESC(SourceCodeInfo_Location)* msg) {
  const upb_MiniTableField field = *upb_MiniTable_FindFieldByNumber(UPB_DESC(_SourceCodeInfo__Location_msg_init)(), 4);
  return _upb_Message_HasNonExtensionField(msg, &field);
}
UPB_INLINE void UPB_DESC(SourceCodeInfo_Location_clear_leading_detached_comments)(UPB_DESC(SourceCodeInfo_Location)* msg) {
  const upb_MiniTableField field = *upb_MiniTable_FindFieldByNumber(UPB_DESC(_SourceCodeInfo__Location_msg_init)(), 6);
  _upb_Message_ClearNonExtensionField(msg, &field);
}
UPB_INLINE upb_StringView const* UPB_DESC(SourceCodeInfo_Location_leading_detached_comments)(const UPB_DESC(SourceCodeInfo_Location)* msg, size_t* size) {
  const upb_MiniTableField field = *upb_MiniTable_FindFieldByNumber(UPB_DESC(_SourceCodeInfo__Location_msg_init)(), 6);
  const upb_Array* arr = upb_Message_GetArray(msg, &field);
  if (arr) {
    if (size) *size = arr->size;
    return (upb_StringView const*)_upb_array_constptr(arr);
  } else {
    if (size) *size = 0;
    return NULL;
  }
}
UPB_INLINE const upb_Array* _google_protobuf_SourceCodeInfo_Location_leading_detached_comments_upb_array(const UPB_DESC(SourceCodeInfo_Location)* msg, size_t* size) {
  const upb_MiniTableField field = *upb_MiniTable_FindFieldByNumber(UPB_DESC(_SourceCodeInfo__Location_msg_init)(), 6);
  const upb_Array* arr = upb_Message_GetArray(msg, &field);
  if (size) {
    *size = arr ? arr->size : 0;
  }
  return arr;
}
UPB_INLINE upb_Array* _google_protobuf_SourceCodeInfo_Location_leading_detached_comments_mutable_upb_array(const UPB_DESC(SourceCodeInfo_Location)* msg, size_t* size, upb_Arena* arena) {
  const upb_MiniTableField field = *upb_MiniTable_FindFieldByNumber(UPB_DESC(_SourceCodeInfo__Location_msg_init)(), 6);
  upb_Array* arr = upb_Message_GetOrCreateMutableArray(
      (upb_Message*)msg, &field, arena);
  if (size) {
    *size = arr ? arr->size : 0;
  }
  return arr;
}
UPB_INLINE bool UPB_DESC(SourceCodeInfo_Location_has_leading_detached_comments)(const UPB_DESC(SourceCodeInfo_Location)* msg) {
  size_t size;
  UPB_DESC(SourceCodeInfo_Location_leading_detached_comments)(msg, &size);
  return size != 0;
}

UPB_INLINE int32_t* UPB_DESC(SourceCodeInfo_Location_mutable_path)(UPB_DESC(SourceCodeInfo_Location)* msg, size_t* size) {
  upb_MiniTableField field = *upb_MiniTable_FindFieldByNumber(UPB_DESC(_SourceCodeInfo__Location_msg_init)(), 1);
  upb_Array* arr = upb_Message_GetMutableArray(msg, &field);
  if (arr) {
    if (size) *size = arr->size;
    return (int32_t*)_upb_array_ptr(arr);
  } else {
    if (size) *size = 0;
    return NULL;
  }
}
UPB_INLINE int32_t* UPB_DESC(SourceCodeInfo_Location_resize_path)(UPB_DESC(SourceCodeInfo_Location)* msg, size_t size, upb_Arena* arena) {
  upb_MiniTableField field = *upb_MiniTable_FindFieldByNumber(UPB_DESC(_SourceCodeInfo__Location_msg_init)(), 1);
  return (int32_t*)upb_Message_ResizeArrayUninitialized(msg, &field, size, arena);
}
UPB_INLINE bool UPB_DESC(SourceCodeInfo_Location_add_path)(UPB_DESC(SourceCodeInfo_Location)* msg, int32_t val, upb_Arena* arena) {
  upb_MiniTableField field = *upb_MiniTable_FindFieldByNumber(UPB_DESC(_SourceCodeInfo__Location_msg_init)(), 1);
  upb_Array* arr = upb_Message_GetOrCreateMutableArray(msg, &field, arena);
  if (!arr || !_upb_Array_ResizeUninitialized(arr, arr->size + 1, arena)) {
    return false;
  }
  _upb_Array_Set(arr, arr->size - 1, &val, sizeof(val));
  return true;
}
UPB_INLINE int32_t* UPB_DESC(SourceCodeInfo_Location_mutable_span)(UPB_DESC(SourceCodeInfo_Location)* msg, size_t* size) {
  upb_MiniTableField field = *upb_MiniTable_FindFieldByNumber(UPB_DESC(_SourceCodeInfo__Location_msg_init)(), 2);
  upb_Array* arr = upb_Message_GetMutableArray(msg, &field);
  if (arr) {
    if (size) *size = arr->size;
    return (int32_t*)_upb_array_ptr(arr);
  } else {
    if (size) *size = 0;
    return NULL;
  }
}
UPB_INLINE int32_t* UPB_DESC(SourceCodeInfo_Location_resize_span)(UPB_DESC(SourceCodeInfo_Location)* msg, size_t size, upb_Arena* arena) {
  upb_MiniTableField field = *upb_MiniTable_FindFieldByNumber(UPB_DESC(_SourceCodeInfo__Location_msg_init)(), 2);
  return (int32_t*)upb_Message_ResizeArrayUninitialized(msg, &field, size, arena);
}
UPB_INLINE bool UPB_DESC(SourceCodeInfo_Location_add_span)(UPB_DESC(SourceCodeInfo_Location)* msg, int32_t val, upb_Arena* arena) {
  upb_MiniTableField field = *upb_MiniTable_FindFieldByNumber(UPB_DESC(_SourceCodeInfo__Location_msg_init)(), 2);
  upb_Array* arr = upb_Message_GetOrCreateMutableArray(msg, &field, arena);
  if (!arr || !_upb_Array_ResizeUninitialized(arr, arr->size + 1, arena)) {
    return false;
  }
  _upb_Array_Set(arr, arr->size - 1, &val, sizeof(val));
  return true;
}
UPB_INLINE void UPB_DESC(SourceCodeInfo_Location_set_leading_comments)(UPB_DESC(SourceCodeInfo_Location) *msg, upb_StringView value) {
  const upb_MiniTableField field = *upb_MiniTable_FindFieldByNumber(UPB_DESC(_SourceCodeInfo__Location_msg_init)(), 3);
  _upb_Message_SetNonExtensionField(msg, &field, &value);
}
UPB_INLINE void UPB_DESC(SourceCodeInfo_Location_set_trailing_comments)(UPB_DESC(SourceCodeInfo_Location) *msg, upb_StringView value) {
  const upb_MiniTableField field = *upb_MiniTable_FindFieldByNumber(UPB_DESC(_SourceCodeInfo__Location_msg_init)(), 4);
  _upb_Message_SetNonExtensionField(msg, &field, &value);
}
UPB_INLINE upb_StringView* UPB_DESC(SourceCodeInfo_Location_mutable_leading_detached_comments)(UPB_DESC(SourceCodeInfo_Location)* msg, size_t* size) {
  upb_MiniTableField field = *upb_MiniTable_FindFieldByNumber(UPB_DESC(_SourceCodeInfo__Location_msg_init)(), 6);
  upb_Array* arr = upb_Message_GetMutableArray(msg, &field);
  if (arr) {
    if (size) *size = arr->size;
    return (upb_StringView*)_upb_array_ptr(arr);
  } else {
    if (size) *size = 0;
    return NULL;
  }
}
UPB_INLINE upb_StringView* UPB_DESC(SourceCodeInfo_Location_resize_leading_detached_comments)(UPB_DESC(SourceCodeInfo_Location)* msg, size_t size, upb_Arena* arena) {
  upb_MiniTableField field = *upb_MiniTable_FindFieldByNumber(UPB_DESC(_SourceCodeInfo__Location_msg_init)(), 6);
  return (upb_StringView*)upb_Message_ResizeArrayUninitialized(msg, &field, size, arena);
}
UPB_INLINE bool UPB_DESC(SourceCodeInfo_Location_add_leading_detached_comments)(UPB_DESC(SourceCodeInfo_Location)* msg, upb_StringView val, upb_Arena* arena) {
  upb_MiniTableField field = *upb_MiniTable_FindFieldByNumber(UPB_DESC(_SourceCodeInfo__Location_msg_init)(), 6);
  upb_Array* arr = upb_Message_GetOrCreateMutableArray(msg, &field, arena);
  if (!arr || !_upb_Array_ResizeUninitialized(arr, arr->size + 1, arena)) {
    return false;
  }
  _upb_Array_Set(arr, arr->size - 1, &val, sizeof(val));
  return true;
}

/* google.protobuf.GeneratedCodeInfo */

UPB_INLINE UPB_DESC(GeneratedCodeInfo)* UPB_DESC(GeneratedCodeInfo_new)(upb_Arena* arena) {
  return (UPB_DESC(GeneratedCodeInfo)*)_upb_Message_New(UPB_DESC(_GeneratedCodeInfo_msg_init)(), arena);
}
UPB_INLINE UPB_DESC(GeneratedCodeInfo)* UPB_DESC(GeneratedCodeInfo_parse)(const char* buf, size_t size, upb_Arena* arena) {
  UPB_DESC(GeneratedCodeInfo)* ret = UPB_DESC(GeneratedCodeInfo_new)(arena);
  if (!ret) return NULL;
  if (upb_Decode(buf, size, ret, UPB_DESC(_GeneratedCodeInfo_msg_init)(), NULL, 0, arena) != kUpb_DecodeStatus_Ok) {
    return NULL;
  }
  return ret;
}
UPB_INLINE UPB_DESC(GeneratedCodeInfo)* UPB_DESC(GeneratedCodeInfo_parse_ex)(const char* buf, size_t size,
                           const upb_ExtensionRegistry* extreg,
                           int options, upb_Arena* arena) {
  UPB_DESC(GeneratedCodeInfo)* ret = UPB_DESC(GeneratedCodeInfo_new)(arena);
  if (!ret) return NULL;
  if (upb_Decode(buf, size, ret, UPB_DESC(_GeneratedCodeInfo_msg_init)(), extreg, options, arena) !=
      kUpb_DecodeStatus_Ok) {
    return NULL;
  }
  return ret;
}
UPB_INLINE char* UPB_DESC(GeneratedCodeInfo_serialize)(const UPB_DESC(GeneratedCodeInfo)* msg, upb_Arena* arena, size_t* len) {
  char* ptr;
  (void)upb_Encode(msg, UPB_DESC(_GeneratedCodeInfo_msg_init)(), 0, arena, &ptr, len);
  return ptr;
}
UPB_INLINE char* UPB_DESC(GeneratedCodeInfo_serialize_ex)(const UPB_DESC(GeneratedCodeInfo)* msg, int options,
                                 upb_Arena* arena, size_t* len) {
  char* ptr;
  (void)upb_Encode(msg, UPB_DESC(_GeneratedCodeInfo_msg_init)(), options, arena, &ptr, len);
  return ptr;
}
UPB_INLINE void UPB_DESC(GeneratedCodeInfo_clear_annotation)(UPB_DESC(GeneratedCodeInfo)* msg) {
  const upb_MiniTableField field = *upb_MiniTable_FindFieldByNumber(UPB_DESC(_GeneratedCodeInfo_msg_init)(), 1);
  _upb_Message_ClearNonExtensionField(msg, &field);
}
UPB_INLINE const UPB_DESC(GeneratedCodeInfo_Annotation)* const* UPB_DESC(GeneratedCodeInfo_annotation)(const UPB_DESC(GeneratedCodeInfo)* msg, size_t* size) {
  const upb_MiniTableField field = *upb_MiniTable_FindFieldByNumber(UPB_DESC(_GeneratedCodeInfo_msg_init)(), 1);
  const upb_Array* arr = upb_Message_GetArray(msg, &field);
  if (arr) {
    if (size) *size = arr->size;
    return (const UPB_DESC(GeneratedCodeInfo_Annotation)* const*)_upb_array_constptr(arr);
  } else {
    if (size) *size = 0;
    return NULL;
  }
}
UPB_INLINE const upb_Array* _google_protobuf_GeneratedCodeInfo_annotation_upb_array(const UPB_DESC(GeneratedCodeInfo)* msg, size_t* size) {
  const upb_MiniTableField field = *upb_MiniTable_FindFieldByNumber(UPB_DESC(_GeneratedCodeInfo_msg_init)(), 1);
  const upb_Array* arr = upb_Message_GetArray(msg, &field);
  if (size) {
    *size = arr ? arr->size : 0;
  }
  return arr;
}
UPB_INLINE upb_Array* _google_protobuf_GeneratedCodeInfo_annotation_mutable_upb_array(const UPB_DESC(GeneratedCodeInfo)* msg, size_t* size, upb_Arena* arena) {
  const upb_MiniTableField field = *upb_MiniTable_FindFieldByNumber(UPB_DESC(_GeneratedCodeInfo_msg_init)(), 1);
  upb_Array* arr = upb_Message_GetOrCreateMutableArray(
      (upb_Message*)msg, &field, arena);
  if (size) {
    *size = arr ? arr->size : 0;
  }
  return arr;
}
UPB_INLINE bool UPB_DESC(GeneratedCodeInfo_has_annotation)(const UPB_DESC(GeneratedCodeInfo)* msg) {
  size_t size;
  UPB_DESC(GeneratedCodeInfo_annotation)(msg, &size);
  return size != 0;
}

UPB_INLINE UPB_DESC(GeneratedCodeInfo_Annotation)** UPB_DESC(GeneratedCodeInfo_mutable_annotation)(UPB_DESC(GeneratedCodeInfo)* msg, size_t* size) {
  upb_MiniTableField field = *upb_MiniTable_FindFieldByNumber(UPB_DESC(_GeneratedCodeInfo_msg_init)(), 1);
  upb_Array* arr = upb_Message_GetMutableArray(msg, &field);
  if (arr) {
    if (size) *size = arr->size;
    return (UPB_DESC(GeneratedCodeInfo_Annotation)**)_upb_array_ptr(arr);
  } else {
    if (size) *size = 0;
    return NULL;
  }
}
UPB_INLINE UPB_DESC(GeneratedCodeInfo_Annotation)** UPB_DESC(GeneratedCodeInfo_resize_annotation)(UPB_DESC(GeneratedCodeInfo)* msg, size_t size, upb_Arena* arena) {
  upb_MiniTableField field = *upb_MiniTable_FindFieldByNumber(UPB_DESC(_GeneratedCodeInfo_msg_init)(), 1);
  return (UPB_DESC(GeneratedCodeInfo_Annotation)**)upb_Message_ResizeArrayUninitialized(msg, &field, size, arena);
}
UPB_INLINE struct UPB_DESC(GeneratedCodeInfo_Annotation)* UPB_DESC(GeneratedCodeInfo_add_annotation)(UPB_DESC(GeneratedCodeInfo)* msg, upb_Arena* arena) {
  upb_MiniTableField field = *upb_MiniTable_FindFieldByNumber(UPB_DESC(_GeneratedCodeInfo_msg_init)(), 1);
  upb_Array* arr = upb_Message_GetOrCreateMutableArray(msg, &field, arena);
  if (!arr || !_upb_Array_ResizeUninitialized(arr, arr->size + 1, arena)) {
    return NULL;
  }
  struct UPB_DESC(GeneratedCodeInfo_Annotation)* sub = (struct UPB_DESC(GeneratedCodeInfo_Annotation)*)_upb_Message_New(UPB_DESC(_GeneratedCodeInfo__Annotation_msg_init)(), arena);
  if (!arr || !sub) return NULL;
  _upb_Array_Set(arr, arr->size - 1, &sub, sizeof(sub));
  return sub;
}

/* google.protobuf.GeneratedCodeInfo.Annotation */

UPB_INLINE UPB_DESC(GeneratedCodeInfo_Annotation)* UPB_DESC(GeneratedCodeInfo_Annotation_new)(upb_Arena* arena) {
  return (UPB_DESC(GeneratedCodeInfo_Annotation)*)_upb_Message_New(UPB_DESC(_GeneratedCodeInfo__Annotation_msg_init)(), arena);
}
UPB_INLINE UPB_DESC(GeneratedCodeInfo_Annotation)* UPB_DESC(GeneratedCodeInfo_Annotation_parse)(const char* buf, size_t size, upb_Arena* arena) {
  UPB_DESC(GeneratedCodeInfo_Annotation)* ret = UPB_DESC(GeneratedCodeInfo_Annotation_new)(arena);
  if (!ret) return NULL;
  if (upb_Decode(buf, size, ret, UPB_DESC(_GeneratedCodeInfo__Annotation_msg_init)(), NULL, 0, arena) != kUpb_DecodeStatus_Ok) {
    return NULL;
  }
  return ret;
}
UPB_INLINE UPB_DESC(GeneratedCodeInfo_Annotation)* UPB_DESC(GeneratedCodeInfo_Annotation_parse_ex)(const char* buf, size_t size,
                           const upb_ExtensionRegistry* extreg,
                           int options, upb_Arena* arena) {
  UPB_DESC(GeneratedCodeInfo_Annotation)* ret = UPB_DESC(GeneratedCodeInfo_Annotation_new)(arena);
  if (!ret) return NULL;
  if (upb_Decode(buf, size, ret, UPB_DESC(_GeneratedCodeInfo__Annotation_msg_init)(), extreg, options, arena) !=
      kUpb_DecodeStatus_Ok) {
    return NULL;
  }
  return ret;
}
UPB_INLINE char* UPB_DESC(GeneratedCodeInfo_Annotation_serialize)(const UPB_DESC(GeneratedCodeInfo_Annotation)* msg, upb_Arena* arena, size_t* len) {
  char* ptr;
  (void)upb_Encode(msg, UPB_DESC(_GeneratedCodeInfo__Annotation_msg_init)(), 0, arena, &ptr, len);
  return ptr;
}
UPB_INLINE char* UPB_DESC(GeneratedCodeInfo_Annotation_serialize_ex)(const UPB_DESC(GeneratedCodeInfo_Annotation)* msg, int options,
                                 upb_Arena* arena, size_t* len) {
  char* ptr;
  (void)upb_Encode(msg, UPB_DESC(_GeneratedCodeInfo__Annotation_msg_init)(), options, arena, &ptr, len);
  return ptr;
}
UPB_INLINE void UPB_DESC(GeneratedCodeInfo_Annotation_clear_path)(UPB_DESC(GeneratedCodeInfo_Annotation)* msg) {
  const upb_MiniTableField field = *upb_MiniTable_FindFieldByNumber(UPB_DESC(_GeneratedCodeInfo__Annotation_msg_init)(), 1);
  _upb_Message_ClearNonExtensionField(msg, &field);
}
UPB_INLINE int32_t const* UPB_DESC(GeneratedCodeInfo_Annotation_path)(const UPB_DESC(GeneratedCodeInfo_Annotation)* msg, size_t* size) {
  const upb_MiniTableField field = *upb_MiniTable_FindFieldByNumber(UPB_DESC(_GeneratedCodeInfo__Annotation_msg_init)(), 1);
  const upb_Array* arr = upb_Message_GetArray(msg, &field);
  if (arr) {
    if (size) *size = arr->size;
    return (int32_t const*)_upb_array_constptr(arr);
  } else {
    if (size) *size = 0;
    return NULL;
  }
}
UPB_INLINE const upb_Array* _google_protobuf_GeneratedCodeInfo_Annotation_path_upb_array(const UPB_DESC(GeneratedCodeInfo_Annotation)* msg, size_t* size) {
  const upb_MiniTableField field = *upb_MiniTable_FindFieldByNumber(UPB_DESC(_GeneratedCodeInfo__Annotation_msg_init)(), 1);
  const upb_Array* arr = upb_Message_GetArray(msg, &field);
  if (size) {
    *size = arr ? arr->size : 0;
  }
  return arr;
}
UPB_INLINE upb_Array* _google_protobuf_GeneratedCodeInfo_Annotation_path_mutable_upb_array(const UPB_DESC(GeneratedCodeInfo_Annotation)* msg, size_t* size, upb_Arena* arena) {
  const upb_MiniTableField field = *upb_MiniTable_FindFieldByNumber(UPB_DESC(_GeneratedCodeInfo__Annotation_msg_init)(), 1);
  upb_Array* arr = upb_Message_GetOrCreateMutableArray(
      (upb_Message*)msg, &field, arena);
  if (size) {
    *size = arr ? arr->size : 0;
  }
  return arr;
}
UPB_INLINE bool UPB_DESC(GeneratedCodeInfo_Annotation_has_path)(const UPB_DESC(GeneratedCodeInfo_Annotation)* msg) {
  size_t size;
  UPB_DESC(GeneratedCodeInfo_Annotation_path)(msg, &size);
  return size != 0;
}
UPB_INLINE void UPB_DESC(GeneratedCodeInfo_Annotation_clear_source_file)(UPB_DESC(GeneratedCodeInfo_Annotation)* msg) {
  const upb_MiniTableField field = *upb_MiniTable_FindFieldByNumber(UPB_DESC(_GeneratedCodeInfo__Annotation_msg_init)(), 2);
  _upb_Message_ClearNonExtensionField(msg, &field);
}
UPB_INLINE upb_StringView UPB_DESC(GeneratedCodeInfo_Annotation_source_file)(const UPB_DESC(GeneratedCodeInfo_Annotation)* msg) {
  upb_StringView default_val = upb_StringView_FromString("");
  upb_StringView ret;
  const upb_MiniTableField field = *upb_MiniTable_FindFieldByNumber(UPB_DESC(_GeneratedCodeInfo__Annotation_msg_init)(), 2);
  _upb_Message_GetNonExtensionField(msg, &field, &default_val, &ret);
  return ret;
}
UPB_INLINE bool UPB_DESC(GeneratedCodeInfo_Annotation_has_source_file)(const UPB_DESC(GeneratedCodeInfo_Annotation)* msg) {
  const upb_MiniTableField field = *upb_MiniTable_FindFieldByNumber(UPB_DESC(_GeneratedCodeInfo__Annotation_msg_init)(), 2);
  return _upb_Message_HasNonExtensionField(msg, &field);
}
UPB_INLINE void UPB_DESC(GeneratedCodeInfo_Annotation_clear_begin)(UPB_DESC(GeneratedCodeInfo_Annotation)* msg) {
  const upb_MiniTableField field = *upb_MiniTable_FindFieldByNumber(UPB_DESC(_GeneratedCodeInfo__Annotation_msg_init)(), 3);
  _upb_Message_ClearNonExtensionField(msg, &field);
}
UPB_INLINE int32_t UPB_DESC(GeneratedCodeInfo_Annotation_begin)(const UPB_DESC(GeneratedCodeInfo_Annotation)* msg) {
  int32_t default_val = (int32_t)0;
  int32_t ret;
  const upb_MiniTableField field = *upb_MiniTable_FindFieldByNumber(UPB_DESC(_GeneratedCodeInfo__Annotation_msg_init)(), 3);
  _upb_Message_GetNonExtensionField(msg, &field, &default_val, &ret);
  return ret;
}
UPB_INLINE bool UPB_DESC(GeneratedCodeInfo_Annotation_has_begin)(const UPB_DESC(GeneratedCodeInfo_Annotation)* msg) {
  const upb_MiniTableField field = *upb_MiniTable_FindFieldByNumber(UPB_DESC(_GeneratedCodeInfo__Annotation_msg_init)(), 3);
  return _upb_Message_HasNonExtensionField(msg, &field);
}
UPB_INLINE void UPB_DESC(GeneratedCodeInfo_Annotation_clear_end)(UPB_DESC(GeneratedCodeInfo_Annotation)* msg) {
  const upb_MiniTableField field = *upb_MiniTable_FindFieldByNumber(UPB_DESC(_GeneratedCodeInfo__Annotation_msg_init)(), 4);
  _upb_Message_ClearNonExtensionField(msg, &field);
}
UPB_INLINE int32_t UPB_DESC(GeneratedCodeInfo_Annotation_end)(const UPB_DESC(GeneratedCodeInfo_Annotation)* msg) {
  int32_t default_val = (int32_t)0;
  int32_t ret;
  const upb_MiniTableField field = *upb_MiniTable_FindFieldByNumber(UPB_DESC(_GeneratedCodeInfo__Annotation_msg_init)(), 4);
  _upb_Message_GetNonExtensionField(msg, &field, &default_val, &ret);
  return ret;
}
UPB_INLINE bool UPB_DESC(GeneratedCodeInfo_Annotation_has_end)(const UPB_DESC(GeneratedCodeInfo_Annotation)* msg) {
  const upb_MiniTableField field = *upb_MiniTable_FindFieldByNumber(UPB_DESC(_GeneratedCodeInfo__Annotation_msg_init)(), 4);
  return _upb_Message_HasNonExtensionField(msg, &field);
}
UPB_INLINE void UPB_DESC(GeneratedCodeInfo_Annotation_clear_semantic)(UPB_DESC(GeneratedCodeInfo_Annotation)* msg) {
  const upb_MiniTableField field = *upb_MiniTable_FindFieldByNumber(UPB_DESC(_GeneratedCodeInfo__Annotation_msg_init)(), 5);
  _upb_Message_ClearNonExtensionField(msg, &field);
}
UPB_INLINE int32_t UPB_DESC(GeneratedCodeInfo_Annotation_semantic)(const UPB_DESC(GeneratedCodeInfo_Annotation)* msg) {
  int32_t default_val = 0;
  int32_t ret;
  const upb_MiniTableField field = *upb_MiniTable_FindFieldByNumber(UPB_DESC(_GeneratedCodeInfo__Annotation_msg_init)(), 5);
  _upb_Message_GetNonExtensionField(msg, &field, &default_val, &ret);
  return ret;
}
UPB_INLINE bool UPB_DESC(GeneratedCodeInfo_Annotation_has_semantic)(const UPB_DESC(GeneratedCodeInfo_Annotation)* msg) {
  const upb_MiniTableField field = *upb_MiniTable_FindFieldByNumber(UPB_DESC(_GeneratedCodeInfo__Annotation_msg_init)(), 5);
  return _upb_Message_HasNonExtensionField(msg, &field);
}

UPB_INLINE int32_t* UPB_DESC(GeneratedCodeInfo_Annotation_mutable_path)(UPB_DESC(GeneratedCodeInfo_Annotation)* msg, size_t* size) {
  upb_MiniTableField field = *upb_MiniTable_FindFieldByNumber(UPB_DESC(_GeneratedCodeInfo__Annotation_msg_init)(), 1);
  upb_Array* arr = upb_Message_GetMutableArray(msg, &field);
  if (arr) {
    if (size) *size = arr->size;
    return (int32_t*)_upb_array_ptr(arr);
  } else {
    if (size) *size = 0;
    return NULL;
  }
}
UPB_INLINE int32_t* UPB_DESC(GeneratedCodeInfo_Annotation_resize_path)(UPB_DESC(GeneratedCodeInfo_Annotation)* msg, size_t size, upb_Arena* arena) {
  upb_MiniTableField field = *upb_MiniTable_FindFieldByNumber(UPB_DESC(_GeneratedCodeInfo__Annotation_msg_init)(), 1);
  return (int32_t*)upb_Message_ResizeArrayUninitialized(msg, &field, size, arena);
}
UPB_INLINE bool UPB_DESC(GeneratedCodeInfo_Annotation_add_path)(UPB_DESC(GeneratedCodeInfo_Annotation)* msg, int32_t val, upb_Arena* arena) {
  upb_MiniTableField field = *upb_MiniTable_FindFieldByNumber(UPB_DESC(_GeneratedCodeInfo__Annotation_msg_init)(), 1);
  upb_Array* arr = upb_Message_GetOrCreateMutableArray(msg, &field, arena);
  if (!arr || !_upb_Array_ResizeUninitialized(arr, arr->size + 1, arena)) {
    return false;
  }
  _upb_Array_Set(arr, arr->size - 1, &val, sizeof(val));
  return true;
}
UPB_INLINE void UPB_DESC(GeneratedCodeInfo_Annotation_set_source_file)(UPB_DESC(GeneratedCodeInfo_Annotation) *msg, upb_StringView value) {
  const upb_MiniTableField field = *upb_MiniTable_FindFieldByNumber(UPB_DESC(_GeneratedCodeInfo__Annotation_msg_init)(), 2);
  _upb_Message_SetNonExtensionField(msg, &field, &value);
}
UPB_INLINE void UPB_DESC(GeneratedCodeInfo_Annotation_set_begin)(UPB_DESC(GeneratedCodeInfo_Annotation) *msg, int32_t value) {
  const upb_MiniTableField field = *upb_MiniTable_FindFieldByNumber(UPB_DESC(_GeneratedCodeInfo__Annotation_msg_init)(), 3);
  _upb_Message_SetNonExtensionField(msg, &field, &value);
}
UPB_INLINE void UPB_DESC(GeneratedCodeInfo_Annotation_set_end)(UPB_DESC(GeneratedCodeInfo_Annotation) *msg, int32_t value) {
  const upb_MiniTableField field = *upb_MiniTable_FindFieldByNumber(UPB_DESC(_GeneratedCodeInfo__Annotation_msg_init)(), 4);
  _upb_Message_SetNonExtensionField(msg, &field, &value);
}
UPB_INLINE void UPB_DESC(GeneratedCodeInfo_Annotation_set_semantic)(UPB_DESC(GeneratedCodeInfo_Annotation) *msg, int32_t value) {
  const upb_MiniTableField field = *upb_MiniTable_FindFieldByNumber(UPB_DESC(_GeneratedCodeInfo__Annotation_msg_init)(), 5);
  _upb_Message_SetNonExtensionField(msg, &field, &value);
}

/* Max size 32 is google.protobuf.FileOptions */
/* Max size 64 is google.protobuf.FileOptions */
#define _UPB_MAXOPT_SIZE UPB_SIZE(112, 200)

#ifdef __cplusplus
}  /* extern "C" */
#endif

#include "upb/port/undef.inc"

#endif  /* GOOGLE_PROTOBUF_DESCRIPTOR_PROTO_UPB_H_ */
